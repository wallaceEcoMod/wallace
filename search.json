[{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"wallace-package-structure","dir":"Articles","previous_headings":"","what":"Wallace package structure","title":"How to write a module in Wallace","text":"First, give brief overview file structure wallace package. starred directories files ones concentrating vignette. Particular focus two main scripts ui.R server.R. ui.R file controls layout appearance application, server.R file contains instructions needed build application. Also note script includes helper functions, directories modules (/inst/shiny/modules), module functions (/R), component guidance text (/inst/shiny/Rmd).","code":"/wallace     ---DESCRIPTION                          # Package description ---NAMESPACE                            # File with functions names ---NEWS.md                              # Release news of each version ---README.md                            # Information about package ---wallace.Rproj                        # R project file -- when developing, load wallace with this +---/inst     +---/extdata                        # Folder with example data     +---/module_skeleton                # Folder to create template of module (do not modify)     +---/shiny                          # Folder with files of the graphic interface         ---global.R                     # File for module loading (do not modify)         ---helpers.R                    # Helper functions not specific to any one module         ---server.R                     # Script with all functionality for processing         ---ui.R                         # Script with all functionality for user interface         +---/custom_modules             # Folder that host files of new module             ---penvs_correlation.md     # Guidance text file             ---penvs_correlation.R      # File with core module functionality             ---penvs_correlation.Rmd    # File with code to add to the session code (optional)             ---penvs_correlation.yml    # YML file for calling the module internally         +---/modules                    # Folder with files of modules already integrated in the interface         +---/Rmd                        # Folder with component guidance text and files to create session code         +---/www                        # Folder with images and css to include in the interface +---/man                                # Folder with function documentations +---/R                                  # Folder with package R functions. Your R function should be saved here     ---custom_modules.R                 # Function to create module template     ---helper_functions.R               # Collection of function for internal Wallace functionality.     ---run_wallace.R                    # Funtion to open interface     ---wallace-package.R                # Information about package     ---penvs_correlation.R              # Function that will create in this vignette     --- …                               # More R function for each module +---/tests                              # Unit test scripts and data +---/vignettes                          # RMD files for vignettes"},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"wallace-data-structure","dir":"Articles","previous_headings":"","what":"Wallace data structure","title":"How to write a module in Wallace","text":"moving forward, go important points structure data Wallace stores. data specific species recorded reactive list called spp. shiny, reactive objects dynamic entities update whenever user makes change using shiny interface (.e., pushes button, selects value). Thus, spp update depending species currently selected user. Since Wallace can now handle analyses multiple species, reactive function curSp() simply returns name species currently selected Wallace, spp[[curSp()]] index spp return data selected species. since spp updates based user input, necessary use reactive function retrieve species name. running spp[[curSp()]], can see list data objects selected species, including occurrence data, environmental variables, . Printed example one species using spp[[curSp()]]: complete list reactive functions like curSp() used internally Wallace shortcuts return characters (.e., text) based user selections. addition, data objects used often analysis special shortcut reactive functions associated . example, occurrence data table spp[[curSp()]]$occs can accessed shortcut function occs(). NOTE: functions used overwrite entities list—case, must use explicit, non-reactive reference. example: complete list reactive functions used internally Wallace shortcuts return data objects based user selections.","code":".  Chrysocyon_brachyurus = list 12 . .  occs = list 34 ( data.frame ) . . .  ...   and 22 more . .  occData = list 2 . .  rmm = list 8( list RMM ) . .  rmd = list 0 . .  envs = character 1= wcbc  . .  polySelXY = double 10= named array 5 X 2= -78.369 -76.26 -36.012 ... . .  polySelID = integer 1= 2067 . .  procOccs = list 2 . .  procEnvs = list 2 . .  bg = list 32( data.frame ) . . .  ...   and 20 more . .  bgPts = list 2( data.frame ) . .  evalOut = S4 1( ENMevaluation ) # this will not work to overwrite occs() <- newDF # this will work spp[[curSp()]]$occs <- newDF"},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"module-addition","dir":"Articles","previous_headings":"","what":"Module addition","title":"How to write a module in Wallace","text":"seven necessary steps adding module: Define ID new module. Write R function. Create shiny module template using wallace::create_module(), creates four files .yml, .R, .md, .RMD (asterisk replaced module ID given creating template) Modify *.yml file define internal parameters Wallace. example; titles, authors, package used, importantly, component new module placed. Add source code *.R file display module’s controls implement functionality. Fill *.Rmd guidance text module. Optional: Add session code incorporate markdown reproduce analysis R environment. Tell Wallace app use new module.  example module describe calculates pairwise Pearson’s correlation coefficients environmental data, added existing Process Environmental Data (penvs) component.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"step-1-define-id","dir":"Articles","previous_headings":"Module addition","what":"Step 1: Define ID","title":"How to write a module in Wallace","text":"First, must define ID new module. ID must unique (two modules ID) can contain English letters, digits, underscores. New module IDs begin short name component (e.g., “vis” “Visualize”; see table ), followed underscore unique module short name. Examples existing module names occs_queryDb Obtain Occurrence Data component Query Database module, poccs_thinOccs Process Occurrence Data component Spatial Thin module. complete list can found folder /wallace/inst/shiny/modules. name module “penvs_correlations”.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"step-2-write-an-r-function","dir":"Articles","previous_headings":"Module addition","what":"Step 2: Write an R function","title":"How to write a module in Wallace","text":"Let’s write function carries module’s analysis. simple example, print matrix pairwise Pearson’s correlation coefficients environmental data. calculate Pearson correlations among rasters, call layerStats() function raster package (Hijmans & van Etten, 2012). function takes following inputs: 1) RasterStack environmental data 2) statistic compute (use Pearson’s correlation coefficient). write module function call layerStats() function within Wallace session. function arguments 1) environmental rasterStack masked background extent (bgMask), 2) name species (spN), 3) logger, reactive value object holds text HTML formatting log window. Reactive variables logger can used within reactive contexts – work regular R functions. function run internally, argument “logger” set reactive value object logger, get updated messages produced module function. sends messages entered writeLog() Wallace log window. function smartProgress() generate shiny progress bar lower-right corner interface tracks progress layerStats() function. module function run outside Wallace session, argument “logger” left default NULL, make writeLog() smartProgress() print messages progress bars R console, respectively. Additionally, hlSpp() function highlight printed text bold green. function used first parameter writeLog() highlight printed species name (e.g., “Canis lupus | …message …”). Open new R Script write module function written . basic R function Wallace functionality gets saved /R directory package functions. forget document function following basic roxygen structure @export end, need include reference function NAMESPACE. Save code wallace/R/penvs_correlations.R. case function becomes long many nested functions, can write auxiliary (helper) functions file (see wallace/R/envs_ecoClimate.R example). module function finished, add package NAMESPACE running devtools::document() pressing Ctrl/Cmd + Shift + D Rstudio. Finally, load function using devtools::load_all().","code":"#' @title penvs_correlations #' @description Runs Pearson correlations between variable pairs #' @param bgMask Environmental rasters for study region. #' @param spN Species' name for log window. #' @param logger Reactive values list of log window text. #’ @details Any additional details needed. #' @return A data frame #' @author Juan Perez  #' @export  penvs_correlations <- function (bgMask, spN = NULL, logger = NULL) {   smartProgress(logger,                  message = \"Calculating pairwise Pearson's correlations\", {                   envCorrs <- layerStats(bgMask,                                           stat = \"pearson\",                                           na.rm = TRUE)                 })   logger %>% writeLog(hlSpp(spN), \"Pearson complete\")   return(envCorrs) }"},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"step-3-create-a-shiny-module-with-create_module","dir":"Articles","previous_headings":"Module addition","what":"Step 3: Create a shiny module with create_module()","title":"How to write a module in Wallace","text":"just specified functionality module, .R script goes /R folder, now specify module’s structure several files go /inst/shiny/custom_modules folder. Wallace modules depend several files: *.yml, *.md, *.R, optionally *.Rmd. generate templates files, run wallace::create_module() , fill arguments follows: id (string): module name. use “penvs_correlations” . dir (string): Folder path module saved. use “./inst/shiny/custom_modules” result (boolean): TRUE example. TRUE module support showing information Result tab. See Step 5, option iii. map (boolean): FALSE example. TRUE module support modifying map. See Step 5, option iv. save (boolean): FALSE example. TRUE module saves custom data user saves current session. See Step 5, option v. rmd (boolean): FALSE example. TRUE module add Rmd code Session Code. See Step 7. Four new files created ./custom_modules directory: penvs_correlations.yml, penvs_correlations.md, penvs_correlations.R, optionally penvs_correlations.Rmd.","code":"wallace::create_module(id = \"penvs_correlations\",  dir = \"./inst/shiny/custom_modules\",  map = FALSE, result = TRUE,  rmd = FALSE,  save = FALSE)"},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"step-4-modify-yaml-to-internal-module-calling","dir":"Articles","previous_headings":"Module addition","what":"Step 4: Modify YAML to internal module calling","title":"How to write a module in Wallace","text":"Open YAML file penvs_correlations.yml set following parameters: component: component module belongs (one : occs, envs, poccs, penvs, espace, part, model, vis, xfer) short_name: label show beside radio button component’s UI long_name: longer name module, show title UI authors: author(s) module package: R package used module (one, use comma )","code":"component: \"penvs\" short_name: \"Pearson's correlations\" long_name: \"Calculate pairwise Pearson's correlations between environmental layers\" authors: \"Peter Galante\" package: [raster]"},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"step-5-module-controls-and-functionality","dir":"Articles","previous_headings":"Module addition","what":"Step 5: Module controls and functionality","title":"How to write a module in Wallace","text":"Aside .R file /R directory, also need .R file named penvs_correlations.R specifies controls module function run directory YAML file. R file contains 3 main parts 3 optional ones: function named penvs_correlations_module_ui returns user interface (UI) module, includes controls user interacts input module parameters run functions. function follow conventions general Shiny modules—take single argument called “id”, use create unique namespace module, return list UI objects. Usually, least button runs module function. Shiny modules operate unique namespaces, use NS() function necessary ensure module’s UI controls can talk ui.R. function ns() (namespace), returned NS(id), run ID names shiny UI input elements, numericInput(ns(\"degFr\"), ...), enable connection ui.R. See shiny module vignette details. function named penvs_correlations_module_server defines server functionality module. function follow conventions general Shiny modules— take arguments input, output, session, well one extra argument common. common variable supplied module’s server function (map function, explained later) list containing: following reactive variables can used module: logger, spp, curSp, allSp, curEnv, curModel, component, module, envs.global, mapCntr. following reactives shortcuts reactives inside spp: occs, envs, bg, bgExt, bgMask, evalOut, mapPred, mapXfer, rmm. function update_component(tab) allows switch new tab within component. function penvs_correlations_module_server() wrapper shiny reactive expression. Inside, template essential parts needed Wallace module. First, specify shorter names shortcut variables inside “common” list. Next, specify UI function can use reactive values inside server function—case, want know names environmental variables input can printed UI control (see Creating reactive shortcut next section details). , specify module function gets run. function observeEvent() performs action response event (e.g., clicking button created penvs_correlations_module_ui()). Inside observeEvent(), need include following code. first, “WARNING”, catches possible errors module’s core functionality run. error, function stops log error message written. user need define errors order catch prevent module crashing unexpectedly. Next, “FUNCTION CALL”, call function /wallace/R make sure returns expect. Next, “LOAD SPP”, load model object spp. Finally, “METADATA”, fill appropriate metadata fields rangeModelMetadata object spp. Ultimately, module author decides metadata include, encourage authors explore rangeModelMetadata object, decide fields best apply module, enter information detailed enough enable reproducibility. shiny modules exist namespaces, want refer results module later (modules), need put spp reactiveValues list. Creating reactive shortcut custom UI slot (“varSelector”) server function (penvs_correlations_module_server) requires names selected variables uploaded previous component (e.g., WorldClim, ecoClimate, user-specified). numbers names rasters change depending rasters uploaded, need create reactive function get names. addition writing code make UI object server file , additionally need add two lines main “inst/shiny/server.R” file. first line creates reactive object. organizational purposes, reactive shortcuts placed shortcuts created component. Please add last line “COMPONENT: PROCESS ENVIRONMENTAL DATA” section, line #380. second line add shortcut common list. Please search “COMMON LIST FUNCTIONALITY” (#1310) server file, add section “Shortcuts values nested inside spp”. function named penvs_correlations_module_result returns UI output results module function (.e., plot, table). outputs need rendered penvs_correlation_module_server function, ID name outputs specified (scenario, output$envCorrTable). function also follow conventions regarding module namespace previous functions. OPTIONAL: function named penvs_correlations_module_map modifies map. function takes two arguments: map (reference leaflet map) common (parameter server function). OPTIONAL: penvs_correlations_module_server function can enable module record session information session saved. option enabled specified parameter save TRUE using create_module(). returns list two functions: save() load(state). save() function takes arguments return named list variables save. load(state) function takes one argument, consist list variables saved.","code":"penvs_correlations_module_ui <- function(id) {   ns <- shiny::NS(id)   tagList(     # UI     ## Add a checkbox for batch processing (more than 1 species)     checkboxInput(ns(\"batch\"), label = strong(\"Batch\"), value = TRUE),     ## Give the action button a name and a label.     actionButton(ns(\"runCorrs\"), label = \"Calculate correlations\"),     ## UI for reselecting variables after calculating correlations. This custom input one will create in the server module function     uiOutput(ns(\"VarSelect\")),     ## UI button to select variables to be used in the analysis.     actionButton(ns(\"selectConfirm\"), label = \"Select Variables\")     ) } penvs_correlations_module_server <- function(input, output, session, common) {   ## Define common objects that will be used in this function   logger <- common$logger   spp    <- common$spp   allSp  <- common$allSp   curSp  <- common$curSp   bgMask <- common$bgMask # raster stack after masking by background   VarSelector <- common$VarSelector # See how to create and include a reactive shortcut later in the main text.    # Create a custom UI input   output$VarSelect <- renderUI({     req(bgMask())     shinyWidgets::pickerInput(       \"VarSelector\",       label = \"Select variables\",       choices = setNames(as.list(names(bgMask())), names(bgMask())),       multiple = TRUE,       selected = names(bgMask()),       options = list(`actions-box` = TRUE))   })  ## When action button defined in the ui function above is clicked, do the following:   observeEvent(input$runCorrs, {      # WARNING ####     if (is.null(bgMask())) {       logger %>% writeLog(type = 'error', hlSpp(curSp()), 'Background data missing. Sample study region first')       return()     }     # Check that the background has already been selected     req(bgMask())             # Set up if you want batch to be allowed       # allSp() is the list of species selected       # curSp() refers to the currently selected species in the GUI     if (input$batch == TRUE) spLoop <- allSp() else spLoop <- curSp()     # If batch is true, loop through all species (allSp())     for (sp in spLoop){     # FUNCTION CALL ####       smartProgress(logger, message = \"Calculating pairwise correlations\", {         envCorrs <- raster::layerStats(x = spp[[sp]]$procEnvs$bgMask, na.rm = T, stat = \"pearson\")})     # To update the log window     logger %>% writeLog(hlSpp(sp), \"Finished calculating correlations\")     #envCorrs <- raster::layerStats(x = bgMask(), na.rm = T, stat = \"pearson\")      # LOAD INTO SPP ####   spp[[sp]]$procEnvs$envCorrs <- envCorrs$`pearson correlation coefficient`      # METADATA ####    }   # Switch to Results tab to display results   common$update_component(tab = \"Results\")   })    # Define output as a table   output$envCorrTable <- renderText({     # Result     knitr::kable(spp[[curSp()]]$procEnvs$envCorrs, format = 'html')   })    ## Observe when selection is confirmed   observeEvent(input$selectConfirm, {     req(spp[[curSp()]]$procEnvs$envCorrs)      ## update bg object     spp[[curSp()]]$procEnvs$bgMask <- spp[[curSp()]]$procEnvs$bgMask[[VarSelector()]]      # Add a line to logger to identify which variables were selected         # hlSpp() prints the species name in green, bold, and italics     logger %>% writeLog(hlSpp(curSp()), \"Selected: \", paste0(names(spp[[curSp()]]$procEnvs$bgMask), collapse = \", \"))   }) } ############################################## #   ### COMPONENT: PROCESS ENVIRONMENTAL DATA ####   ############################################## #    # # # # # # # # # # # # # # # # # #   # PROCESS ENVS: other controls ####   # # # # # # # # # # # # # # # # # #    # convenience function for background points table for current species   bg <- reactive(spp[[curSp()]]$bg)   # convenience function for background polygon for current species   bgExt <- reactive(spp[[curSp()]]$procEnvs$bgExt)   # convenience function for environmental variable rasters masked to background for current species   bgMask <- reactive(spp[[curSp()]]$procEnvs$bgMask)   # THIS LINE WILL CREATE THE REACTIVE   VarSelector <- reactive(input$VarSelector) ################################   ### COMMON LIST FUNCTIONALITY ####   ################################    # Create a data structure that holds variables and functions used by modules   common = list(     # Reactive variables to pass on to modules     logger = logger,     spp = spp,     curSp = curSp,     allSp = allSp,     multSp = multSp,     curEnv = curEnv,     curModel = curModel,     component = component,     module = module,     envs.global = envs.global,     mapCntr = mapCntr,      # Shortcuts to values nested inside spp     occs = occs,     envs = envs,     bcSel = bcSel,     ecoClimSel = ecoClimSel,     bg = bg,     bgExt = bgExt,     bgMask = bgMask,     bgShpXY = bgShpXY,     selCatEnvs = selCatEnvs,     evalOut = evalOut,     mapPred = mapPred,     mapXfer = mapXfer,     rmm = rmm,     VarSelector = VarSelector, # ADD line here (do not forget to add a comma at the end) penvs_correlations_module_result <- function(id) {   ns <- NS(id)   # Result UI as html   htmlOutput(ns(\"envCorrTable\")) }"},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"step-6-guidance-text-for-your-module","dir":"Articles","previous_headings":"Module addition","what":"Step 6: Guidance text for your module","title":"How to write a module in Wallace","text":"last vital step writing guidance text module. text provides detailed description module find relevant information benefit users. add instructions information module, need edit Markdown file penvs_correlations.md. Enter background information module’s analysis, methodological details help users understand module might want use , relevant references literature. Guidance texts three sections. BACKGROUND provides general information framing module’s technique grand scheme things. IMPLEMENTATION describes technique used module. Finally, REFERENCES bibliography academic sources referenced text.","code":"### **Module: Pearson Correlation**  **BACKGROUND**  Calculate pairwise Pearson's product-moment variable correlations for all predictor variables.   **IMPLEMENTATION**  After loading environmental layers select background extent and sample background points. These points are used to sample each layer to calculate correlations. Correlations are calculated for single or multiple species.  **REFERENCES**  Robert J. Hijmans (2019). raster: Geographic Data Analysis and Modeling. R package version 2.9-5."},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"step-7-session-code-to-reproduce-analysis-in-an-r-environment","dir":"Articles","previous_headings":"Module addition","what":"Step 7: Session code to reproduce analysis in an R environment","title":"How to write a module in Wallace","text":"OPTIONAL: function named penvs_correlations_module_rmd adds code “Session Code” Rmd output enable reproducibility module analysis. function returns list variables used module’s RMD code, takes argument species contains information current species. specified rmd parameter TRUE create_module() Step 3, file template penvs_correlations.Rmd created custom_module directory. add code RMD file repeat module analysis. need use variables originally specified user session, can use double curly brackets define inside penvs_correlations_module_rmd function. example, modules/occs_queryDb.R line #169, number occurrences download gbif (occs_queryDb module) saved occNum_rmd. , see line #16 modules/occs_queryDb.Rmd find object curly brackets, {{occNum_rmd}}, used create specific session code module. Two variables always made automatically available RMD code chunks: {{sp}} species ID {{spName}} species’ scientific name. See module RMD files examples inst/shiny/modules.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/module-addition.html","id":"final-step-tell-the-wallace-app-to-use-your-module","dir":"Articles","previous_headings":"Module addition","what":"Final step: Tell the Wallace app to use your module","title":"How to write a module in Wallace","text":"Congratulations! finished creating module. final step tell Wallace application use calling register_module() function. , just need open Wallace using run_wallace() new module ready test drive!","code":"wallace::register_module(\"./inst/shiny/custom_modules/penvs_correlations.yml\")"},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"preface","dir":"Articles","previous_headings":"","what":"Preface","title":"Wallace Ecological Modeling Application Vignette","text":"vignette written Wallace v. 1.0.5, using different version, things may match . Additionally, anticipate vignette others wallace package updated regularly accordance ongoing development.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Wallace Ecological Modeling Application Vignette","text":"Wallace R-based GUI application ecological modeling currently focuses building, evaluating, visualizing models species niches distributions. refer models species distribution models (SDMs), explain length —read , pointed sources detailed info within application reference. Wallace many qualities think make good example next-generation scientific software: ’s 1) open, 2) expandable, 3) flexible, 4) interactive, 5) instructive, 6) reproducible. application features pannable/zoomable map dynamic plots tables. Data models can downloaded online databases uploaded user. results can downloaded, including option save R code can reproduce analysis. details, including SDMs, please see publication Methods Ecology Evolution. citation : Kass JM, Vilela B, Aiello-Lammens , Muscarella R, Merow C, Anderson RP. (2018). Wallace: flexible platform reproducible modeling species niches distributions built community expansion. Methods Ecology Evolution. 9:1151-1156. https://doi-org.ezproxy.gc.cuny.edu/10.1111/2041-210X.12945 Wallace project’s main page links Google Group, official email, CRAN page hosting stable version, Github development page.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Wallace Ecological Modeling Application Vignette","text":"wallace work, using latest version R (least later version 3.2.1). Download Windows Mac. Let’s first install load Wallace. Open either base R software RStudio run code . ’s code ’ll run use Wallace. Wallace GUI open default web browser R console occupied. can exit Wallace hitting Escape R console, closing browser window. note: close browser window running Wallace, session progress lost.  ’d like use R console running Wallace, open terminal window (MacOS/Linux) command prompt (Windows), initialize R, run lines . example Terminal MacOS .  Also, ’d like use Maxent Wallace, please note following. Wallace uses maxent() function package dismo. function requires user place maxent.jar file /java directory dismo package root folder. can download Maxent , locate maxent.jar, Maxent program , downloaded folder. can find directory path dismo/java running system.file('java', package=\"dismo\") R console. Simply copy maxent.jar paste folder. try run Maxent Wallace without file place, get warning message log window informs , Maxent run. Also, trouble installing rJava making work, bit troubleshooting Wallace Github repository README hopefully help.","code":"# install the package install.packages('wallace') # load the package library(wallace) # run the app run_wallace()"},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"orientation","dir":"Articles","previous_headings":"","what":"Orientation","title":"Wallace Ecological Modeling Application Vignette","text":"’ll begin “Obtain Occurrence Data” component, first little orientation. Please consult schematic showing different parts Wallace.  notice tabs along top Wallace interface: “components”, represent discrete steps analysis, stepping sequentially (1). First, click “Occ Data”. left side, toolbar user interface controls, like buttons, text inputs, etc. (2). can see “module” called Query Database currently selected. “Modules” discrete analysis options within component, can contributed researchers. ’ll see another module exists component: User-specified Occurrences. module lets upload occurrence data. Try choosing module instead notice toolbar changes, click back Query Database. Within toolbar, can find module name R packages uses (2a) control panel selected module (2b). right side visualization space (3), log window (3a) several tabs, including interactive map, occurrence records table, results window, guidance text windows component module levels (3b). stage analysis, results exist, data yet table, can view guidance text now. text written developers prepare users component module methodologically (tools ) theoretically (use ). guidance text also references scientific papers ecology literature detailed reading. Please get habit consulting undertaking analyses, give solid foundation moving forward.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"obtain-occurrence-data","dir":"Articles","previous_headings":"","what":"Obtain Occurrence Data","title":"Wallace Ecological Modeling Application Vignette","text":"Begin clicking guidance text first component Obtain Occurrence Data, modules. Let’s read get better understanding involved obtaining occurrence data, Wallace implements .   Now ’ve educated , let’s proceed getting occurrences. example, let’s download occurrence records Tremarctos ornatus (spectacled bear) GBIF. species concern listed “vulnerable” IUCN, range nicely delimited northern central Andes mountains. Set maximum number occurrences 200 click Query Database button. download complete, notice message log window. searched 200 records, found 66 records coordinate information (latitude, longitude) duplicates. wanted 200 records information crucial SDMs, increase maximum occurrences search try .  Now click “Occs Tbl” tab view information records. developers chose fields displayed based general relevance studies species ranges. can click Download button get .csv file records, original database fields every downloaded record (filtering).","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"process-occurrence-data","dir":"Articles","previous_headings":"","what":"Process Occurrence Data","title":"Wallace Ecological Modeling Application Vignette","text":"next component, Process Occs, gives access data-cleaning tools. data downloaded raw, almost always erroneous points. basic knowledge species’ range can help us remove obvious errors. see occurrence points T. ornatus, South American species mostly occupying Andes mountains, fall California, Japan, even coast Africa Antarctic. databases like GBIF accumulate lots data various sources, inevitably dubious localities may represent, example, museum location instead coordinates associated specimen, incorrect coordinates reason. order eliminate obviously erroneous records, select points want keep analysis clicking module Select Occurrences Map. Click polygon icon map draw polygon around points found South America.  done, click “Finish” polygon toolbar, Select Occurrences. map zoom points ’ve selected.  Alternatively, can also remove occurrences ID module Remove Occurrences ID. Tremarctos ornatus typically inhabits mid- high-elevation areas. zooming bit, can see occurrence points lowland areas may incorrect georeferences fall beyond species’ accepted range. Note: vignette, disregard possibility points represent true lowland sightings T. ornatus, purposes research, assumptions made trivially require investigation. remove points, click find unique ID (“occID”) geographic coordinates, enter ID click Remove Occurrence remove .  Even removing likely erroneous points, points left may clustered due sampling bias. often leads artifactually inflated spatial autocorrelation, can bias environmental signal occurrence data model attempt fit. example, might clustering points near cities data mostly citizen scientists, citizen scientists live near cities. points can cluster around roads field biologists took data either making observations driving gained access sites roads. Let’s click module Spatial Thin. lets attempt reduce presumed spatial bias running spatial thinning function points make sure ’re defined distance one another. use 10 km example.  now left 44 points analysis (may different). can zoom see function . Red points retained, blue points removed. can also download processed occurrence dataset .csv clicking Download button.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"obtain-environmental-data","dir":"Articles","previous_headings":"","what":"Obtain Environmental Data","title":"Wallace Ecological Modeling Application Vignette","text":"Next, need obtain environmental variables analysis. values variables extracted occurrence points, information provided model. data raster form, simply means big grid grid cell specifies value. Rasters can displayed surfaces maps (’ll see later). Click component “Env Data”. first module, WorldClim Bioclims, lets download climatic data WorldClim, global climate database interpolated climate surfaces derived weather station data multiple resolutions. coverage better areas weather stations (especially developed countries), uncertainty exists areas fewer stations. bioclim variables summaries temperature precipitation proposed general biological significance. Choose 2.5 arcmin bioclim variable resolution click Load Env Data button. first time use Wallace data downloaded hard drive; simply loaded local directory. Finer resolutions take longer download. finest resolution data (30 arcsec) served tile, thus tile corresponds map center downloaded. addition downloading rasters, Wallace also remove occurrence points environmental values (.e., points overlap rasters). Notice progress bar bottom-right corner.  rasters loaded “Results” tab display summary information (e.g. resolution, extent, cell number, etc.).  Note option specify subset total variables use analysis.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"process-environmental-data","dir":"Articles","previous_headings":"","what":"Process Environmental Data","title":"Wallace Ecological Modeling Application Vignette","text":"Now need choose study extent modeling. define region “background” points drawn model fitting. Background points meant sample total area available study species. Methods like Maxent known presence-background techniques compare predictor variable values background points occurrence points. making decisions study extent, want avoid areas species historically unable move —example, regions beyond barrier like mountain range large river species traverse. include areas, may send false signal model areas suitable. Please see guidance text details. can explore different options delineating study extent . begin, go module Select Study Region. two steps : 1) choosing shape study extent, 2) sampling background points. “Step 1”, choose “Minimum convex polygon”, set study region buffer distance 1 degree. Click Select button plot shape map.  Next, complete “Step 2”, clips rasters study extent samples background points. Set number background points 10,000 (bigger, extensive, samples better), click Sample button. Notice via arrow progress bar bottom-right corner.  Click Download button want zip file clipped rasters.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"partition-occurrences","dir":"Articles","previous_headings":"","what":"Partition occurrences","title":"Wallace Ecological Modeling Application Vignette","text":"built models yet, , make decisions partition data evaluation. order determine strength model’s predictive ability, theoretically need independent data validate . independent datasets exist, one solution partition data subsets assume independent , sequentially build model subsets one evaluate model left-subset. known k-fold cross-validation (k total number subsets), quite prevalent statistics, especially fields machine learning data science. sequential model- building exercise complete, Wallace summarizes (averages) statistics partitions builds model using  data. ’s whole literature best partition data modeling. One option simply partition randomly, spatial data run risk groups spatially independent . arguably better option partition using spatial blocking—example, drawing lines map divide data. Spatial partitioning k-fold cross-validation forces model predict regions distant used train model. Tremarctos ornatus, environmental conditions Andes Ecuador southwestern Colombia may differ considerably conditions southern Peru. model accurate predictions average withheld spatially partitioned data, likely good transferability, means can transfer well new values predictor variables (distant areas usually environmentally different close areas). Please refer guidance text details types partitioning offered Wallace. ’s example random k-fold, randomly assigns point partition group. , k = 4.  ’s example spatial blocking, assigns point one 4 spatially separate partition groups.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Wallace Ecological Modeling Application Vignette","text":"now ready build model. vignette, ’ll use Maxent, machine learning method can fit range functions patterns data, simple (.e. straight lines) complex (.e. curvy). details Maxent, please consult guidance text. example images show extensive modeling exercise, interest time, let’s choose following modeling options: L = Linear, e.g. temp + precip Q = Quadratic, e.g. temp^2 + precip^2 H = Hinge, e.g. piecewise linear functions, like splines Regularization way reduce model complexity. Higher values = smoother, less complex models. Basically, predictor variable coefficients shrunk progressively reach 0, drop model. variables greatest predictive contribution remain model. 3 feature class combinations (L, LQ, H) * 3 regularization multipliers (1, 2, 3) = 9 models. feature classes H enable substantial complexity response, takes bit longer run simpler models.  first time run , may get error message Maxent software dismo package folder. dismo package Wallace uses run Maxent R. Fortunately, case, Wallace notify log window need put file (maxent.jar). due particular way dismo things, control. however working alternative ways approach . Download file via link given put appropriate directory. click Run . results appear two tables evaluation statistics, allowing comparison different models just built. 9 rows per table: one feature class / regularization multiplier combinations selected (images ). first table, statistics models built 4 occurrence data partition groups averaged—labeled “test”. second table, statistics 4 groups displayed separately. choose “best” model? mountain literature , really single answer. AUC (omission rate) calculated using partitions, AIC instead calculated using model prediction full calibration background extent (thinned occurrence points). Although AIC incorporate cross-validation results, explicitly penalize model complexity—models parameters tend worse AIC score. ’s really user decide, guidance text references help learn . vignette, use sequential criteria cross-validation results. First, prioritize models omit many occurrence points predicted area. Sort results table “.10p.avg”, 10 percentile training presence threshold applied testing data (see guidance text details). set models, model lowest .10p.avg H_1 (hinge features regularization multiplier 1).  tie example chosen model highest “auc.val.avg” (average test AUC), case, model H_1 lowest . examine test AUC model, see reasonably high relative models.  can also find evaluation statistics individual partition table , comparison one lists averages.  example, chosen model lowest AICc score, ended H_3.5. Take moment find model lowest AICc compare one chose .","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"visualize","dir":"Articles","previous_headings":"","what":"Visualize","title":"Wallace Ecological Modeling Application Vignette","text":"module “Maxent Evaluation Plots” enables users evaluate performance statistics across models. , see regularization multiplier affects average test omission rate (using 10 percentile training presence threshold.)  also examine response curves, show predicted suitability (y-axis) changes based different values variable (x-axis). want see results particular model, can select using dropdown menu “Current Model”. one response curves model H_1, mean temperature wettest quarter (bio8). flat portion response curve indicates suitability remains stable lower temperatures, 20 degrees C (WorldClim values multiplied 10, 200 deg C x-axis really 20 deg C), suitability T. ornatus decreases sharply.  can also visualize model predictions map. Predictions suitability can continuous (range values) binary (thresholded just two values: 0 1). Please see module guidance information Maxent model output scales thresholding rules. mapped prediction model H_1, threshold.  mapped prediction model, time threshold set 10 percentile training presence. stricter two thresholding rules currently available. occurrence points may fall outside blue areas represent suitable areas T. ornatus. thresholded prediction used calculate 10 percentile training presence omission rate evaluation statistics. Try mapping prediction threshold set less strict minimum training presence instead, notice difference.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"project","dir":"Articles","previous_headings":"","what":"Project","title":"Wallace Ecological Modeling Application Vignette","text":"Next, can project model new locations future climate scenarios (years 2050 2070). “Projecting” simply means plugging new environmental values model (.e., used model building) getting new response (.e., suitability predictions new variable ranges). potentially confusing – didn’t cross-validation step ? cross-validation spatial partitioning sequentially forced models predict new areas, evaluation statistics summarized ability transfer accurately. However, final model used make predictions currently looking built data (exclude partition groups). variable ranges associated background points dataset used model-building process. now taking model projecting variable ranges potentially never used model-building. Thus, values different places times might completely new model, different may uncertain accuracy projection. Please see guidance text details “non-analog conditions”. H_1 low omission rate (rarely fails predict known occurrences) high average testing AUC (good transferability). , model H_1 projected year 2070 severe climate scenario: representative concentration pathway (RCP) 8.5. Notice also several global circulation models (GCMs) choose —represent different efforts model future climate. used CCSM4 tutorial. See module guidance text RCPs GCMs. project model, draw polygon using draw toolbar click “Finish”. choose year, GCM RCP click Project button build new map. rasters come WorldClim database, GCMs raster data RCP. continuous prediction. example, note northernmost suitable area present seems contracted southward, suitability seems lower overall, also becomes confined higher elevations.  projection made binary 10 percentile training presence threshold. can see differences present future projection bit clearly now.  mentioned, may areas within new ranges values high uncertainty different values used model-building. order visualize areas , can plot MESS map. MESS stands (M)ultivariate (E)nvironmental (S)imilarity (S)urface: please see module guidance text details. MESS projection. darker values correspond areas similar used model-building, lighter ones much different. can see future climate values high elevation similar, whereas lower elevations west towards coast different places, especially Colombia. may therefore interpret projected suitability areas high uncertainty.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"extracting-the-code","dir":"Articles","previous_headings":"","what":"Extracting the code","title":"Wallace Ecological Modeling Application Vignette","text":"major advantage Wallace compared GUI-based software can extract code used run analysis. using Wallace, lots R code running background. option allows download simplified version code form condensed annotated R script. can use script rerun analysis session, share , modify . script can downloaded several ways, R Markdown format, convenient format combining R code text, can run directly R. .pdf downloads, version TeX necessary installed system. Please see text page details. download script, select Rmd click Download.  Now, .Rmd file contains complete analysis. R Markdown files combine regular text code chunks. Modules Wallace indicated headers denoted ###. quick reference Rmd syntax, see  might want open new R window try running code. Remember later sections code may depend things done earlier, may run skip ahead. Also remember close Wallace session ’ll lose progress web browser (.Rmd unaffected). use RStudio, can open Rmd click knit compile workflow sharable html document. Note can change anything like code build upon workflow. envision future versions Wallace enable upload modified .Rmds Wallace fill options chose pick left previous analysis GUI. Also, although don’t anything built Wallace post-processing models present version, can work R session modifying .Rmd build analysis. Examples post-processing stacking models get estimates species richness, comparing models estimate niche overlap. currently working partners specialize , future versions Wallace likely include capabilities engage post-processing models.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Wallace Ecological Modeling Application Vignette","text":"Thus ends Wallace vignette. hope learned application, features, modeling species distributions niches general. hate repetitive, highly encourage read guidance text, follow recommended publications, hopefully let lead relevant publications can inform . Also, please reach us email websites mentioned Introduction. ’d love hear thoughts, opinions, suggestions make Wallace better users.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v1.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Wallace Ecological Modeling Application Vignette","text":"Wallace recognized finalist 2015 Ebbe Nielsen Challenge Global Biodiversity Information Facility (GBIF), received prize funding. material based upon work supported National Science Foundation Grant Numbers DBI-1661510 (RPA), DBI-1650241 (RPA), DEB-1119915 (RPA), DEB-1046328 (MEA), DBI-1401312 (RM). opinions, findings, conclusions recommendations expressed material author(s) necessarily reflect views National Science Foundation. Additional sources funding JMK include CUNY Science Scholarship CUNY Graduate Center Provost Digital Innovation Grant.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"prefacio","dir":"Articles","previous_headings":"","what":"Prefacio","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Bienvenidos la viñeta de Wallace EcoMod v2.0. Esta viñeta fue escrita específicamente para la versión 2.0. Si usted está usando una versión diferente puede que algunas cosas coincidan. Haga clic aquí para la viñeta de la versión 1.0 (en inglés) y aquí para ver esta viñeta en inglés. Anticipamos que esta viñeta (y otras en el futuro) para el paquete wallace serán actualizadas o se les agregarán apéndices de manera regular de acuerdo al desarrollo continuo del paquete. En esta viñeta encontrará los nombres de las pestañas, botones y opciones en inglés como las puede ver en su interfaz gráfica y su respectiva traducción al español dentro de corchetes cuadrados ([ ]).","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"introdución","dir":"Articles","previous_headings":"","what":"Introdución","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Wallace es una interfaz gráfica de usuario (GUI por sus iniciales en inglés) basada en R (paquete de R wallace) para el modelado ecológico que se concentra actualmente en la construcción, evaluación y visualización de modelos de nicho y de distribución de especies. Nos referiremos estos modelos como modelos de distribución de especies (MDEs) y los explicaremos en detalle aquí. lo largo de la lectura, le indicaremos algunas fuentes de información más detallada dentro de la aplicación (por ejemplo las pestañas que contienen los textos guía de componentes y módulos, Component Guidance y Module Guidance en la aplicación). Wallace tiene muchas características que creemos lo convierten un buen ejemplo de la siguiente generación de programas científicos, ya que es: 1) asequible, 2) abierto, 3) expandible, 4) flexible, 5) interactivo, 6) instructivo y 7) reproducible. La aplicación, construida con un paquete de R llamado shiny, cuenta con un mapa interactivo que permite acercarse, alejarse, y moverse en el mapa, y tiene también gráficas y tablas dinámicas. Los datos para los modelos pueden ser descargados de bases de datos en línea o cargados por el usuario. La mayoría de resultados pueden ser descargados, incluyendo la opción de guardar el código de R para reproducir sus análisis. Para más detalles, incluyendo sobre MDEs, por favor diríjase nuestra publicación inicial en Methods Ecology Evolution1 y nuestra publicación de seguimiento en Ecography2. Kass, J.M., Vilela, B., Aiello-Lammens, M.E., Muscarella, R., Merow, C., Anderson, R.P. (2018). Wallace: flexible platform reproducible modeling species niches distributions built community expansion. Methods Ecology Evolution, 9(4),1151-1156. https://doi.org/10.1111/2041-210X.12945 Kass, J.M., Pinilla-Buitrago, G.E, Paz, ., Johnson, B.., Grisales-Betancur, V., Meenan, S.., Attali, D., Broennimann, O., Galante, P.J., Maitner, B.S., Owens, H.L., Varela, S., Aiello-Lammens, M.E., Merow, C., Blair, M.E., Anderson R.P. (2022). wallace 2: shiny app modeling species niches distributions redesigned facilitate expansion via module contributions. Ecography, 2023(3), e06547. https://doi.org/10.1111/ecog.06547. La página principal del proyecto Wallace tiene los enlaces nuestro grupo de Google, el correo electrónico oficial, la página de CRAN con la versión estable, y la página de desarrollo en GitHub. Wallace también tiene un canal de YouTube con diversos tutoriales en video y seminarios grabados en varios idiomas. Si usted utiliza Wallace en sus cursos nos encantaría conocer su experiencia. Por favor tómese un momento para completar esta corta encuesta (en inglés o en español)- Taller externo y encuesta curricular de Wallace.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"instalación-del-paquete","dir":"Articles","previous_headings":"Configuración","what":"Instalación del paquete","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Para que wallace funcione usted debe estar usando la versión 3.5.0 o posterior de R. Descargue para Windows o Mac aquí. Para instalar y cargar Wallace v2.0, abra la interfaz gráfica de R o RStudio y ejecute el siguiente código. Es el único código que debe ejecutar para usar wallace. La interfaz gráfica de Wallace GUI se abrirá en su explorador predeterminado, y la consola de R estará ocupada mientras wallace está en ejecución. La consola de R muestra mensajes sobre paquetes de R o mensajes de error en caso de complicaciones, que incluyen información valiosa para la solución de problemas. Si planea hacer alguna pregunta en el grupo de Google (preferible) o por correo, por favor incluya estos mensajes de error de la consola. Si usted quiere utilizar la consola de R mientras está ejecutando wallace, debe abrir otra sesión de R, o alternativamente una ventana de la Terminal (MacOS-Linux) o el Símbolo del sistema (Windows) e iniciar R. continuación podrá ejecutar las líneas anteriores.  Un ejemplo usando la Terminal en MacOS. Para salir de Wallace, use la tecla ‘Escape’ desde la consola de R y cierre la ventana del explorador, o haga clic en el botón de salida en la esquina superior derecha de la interfaz gráfica. Nota: Si usted cierra la ventana del explorador donde está ejecutando Wallace, su sesión será terminada y todo el progreso se perderá. Vea Guardar y Cargar Sesión para información sobre cómo guardar su trabajo y restablecer sus análisis.","code":"# Instalar Wallace desde CRAN install.packages(\"wallace\")  # o instalar Wallace desde GitHub install.packages(\"remotes\") remotes::install_github(\"wallaceEcoMod/wallace\")  # Cargar Wallace library(wallace)  # Ejecutar Wallace run_wallace()"},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"configurando-la-versión-java-de-maxent","dir":"Articles","previous_headings":"Configuración","what":"Configurando la versión Java de Maxent","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Wallace v2.0 incluye dos opciones para realizar modelos de Maxent: maxnet y maxent.jar. El primero, es una implementación de Maxent en R y ajusta el modelo usando el paquete glmnet. Esta es la implementación predeterminada y requiere el uso de Java (ver Phillips et al. 2017). El segundo, que es la implementación original en Java, ejecuta la función maxent() en el paquete dismo, que su vez utiliza las herramientas del paquete rJava. Cuando se usa dismo para ejecutar maxent.jar, el usuario debe asegurarse de poner el archivo maxent.jar file en la carpeta /java dentro de la carpeta del paquete dismo. Usted puede descargar Maxent aquí y encontrar el archivo maxent.jar en la carpeta de descargas. Usted puede encontrar la ruta dismo /java ejecutando system.file(‘java’, package=“dismo”) en la consola de R. Simplemente copie el archivo maxent.jar y peguelo en esta carpeta. Si trata de ejecutar Maxent en Wallace sin el archivo en la carpeta correcta, aparecerá un mensaje de advertencia en la ventana de registro y Maxent se ejecutará. También, si tiene problemas para instalar rJava y hacerlo funcionar, existe un texto de ayuda para solucionar problemas en el archivo README del repositorio de Wallace en Github.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"orientation","dir":"Articles","previous_headings":"","what":"Orientación","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Empezaremos con una orientación sobre la interfaz de Wallace. Después de ejecutar run_wallace(), Wallace abre en el explorador la página de Intro [Introducción]. La pestaña “” [ “Acerca de” ] contiene información de contexto sobre el programa. La pestaña “Team” [“Equipo”] tiene detalles sobre los desarrolladores y colaboradores que contribuyeron Wallace. La pestaña de “Use” (“Cómo usarlo”) tiene un breve manual de usuario. Este manual es una versión resumida de este tutorial sin el ejemplo. La pestaña “Load Prior Session” [“Cargar sesión anterior”] es para cargar una sesión anterior, este tema lo trataremos más adelante. En la parte superior, en el panel naranja están los Components [Componentes], que representan los pasos del análisis. Cada uno de estos botones de componentes abren el paso correspondiente. Dentro de cada componente hay varios Módulos, los cuales son opciones de análisis discretas dentro de los componentes. la izquierda, en el panel gris, está el flujo de trabajo de Wallace o WORKFLOW, que resalta la versión utilizada, los componentes (numerados), y los módulos incluídos actualmente (con puntos de enumeración). Haga clic en el botón del componente Occ Data, seleccione un módulo y consulte el esquema aquí abajo que muestra las diferentes partes de la interfaz de Wallace.  (1) Estos son los componentes. Usted irá visitandolos secuencialmente. Wallace v2 incluye ahora un botón de Soporte (1a), esté contiene enlaces al grupo de Google, correo electrónico, sitio web y la página de Github para reportar problemas. También al botón de salida (1b), que finalizará la sesión. (2) Esta es la barra de herramientas con todos los controles de la interfaz para el usuario, como botones, entradas de texto, etc. Usted puede ver que el módulo Query Database (Present) [Consultar base de datos (Presente)] está seleccionado actualmente. Verá que otros dos módulos existen para este componente: Query Database (Paleo) [Consultar base de datos (Paleo)] y User-specified [Especificado por el usuario]. Este último módulo le permite cargar sus propios datos de ocurrencia. Intente escoger este y vea cómo la barra de herramientas cambia, vuelva hacer clic en Query Database (Present) [Consultar base de datos (Presente)]. Tanto el Componente como el Módulo tienen botones ‘?’ al lado del texto del título. Hacer clic en estos botones lo enviará los textos guía respectivos. Dentro de esta barra de herramientas puede encontrar el nombre del módulo y los paquetes de R que utiliza (2a), también el panel de control para el módulo seleccionado (2b). Los módulos pueden recibir aportes de otros investigadores y desarrolladores; los links CRAN y su documentación están abajo. (3) El lado derecho es el espacio de visualización. Cualquier función utilizada generará un mensaje en la ventana de registro (3a). Esta ventana también mostrará mensajes de error. Wallace v2 permite ahora que el usuario cargue múltiples especies. Si múltiples especies están cargadas, puede cambiar la especie seleccionada usando el menú desplegable de especies (3b). El espacio de visualización incluye múltiples pestañas (3c), incluyendo un mapa interactivo, la tabla de ocurrencias, los resultados, los textos de guía de módulo y componente, y una pestaña para guardar las salidas y la sesión actual. En este punto del análisis, existen resultados, y usted tiene datos para la tabla, pero puede ver el texto guía para el Component y el Module [Componente y Módulo]. Este texto fue escrito por los desarrolladores para preparar los usuarios para cada componente y módulo de forma teórica (¿por qué debería usar las herramientas?) y metodológica (¿qué hacen las herramientas?). El texto guía también tiene una lista de referencias de artículos científicos para una lectura más detallada. Por favor acostumbrese consultarlos antes de realizar cualquier análisis —y discutirlos con sus pares—pues esto le dará un fundamento más sólido para avanzar. La siguiente pestaña en el espacio de visualización es Save [Guardar]. En cualquier momento lo largo del flujo de trabajo, seleccionar “Save session” [Guardar sesión] en esta pestaña guardará el progreso como un archivo .rds. Este archivo puede ser cargado de nuevo en wallace para continuar el análisis. Si en cualquier momento durante la viñeta usted necesita una pausa, avance Guardar y Cargar Sesión para aprender como salvar y cargar su sesión de Wallace. En esta pestaña también podrá descargar y guardar sus resultados. El código de la sesión, los metadatos, y las citas de los paquetes pueden ser descargados en el Componente: Reproduce [Reproducir]. Ahora empecemos nuestros análisis. Vamos modelar los rangos de dos especies de mamíferos del género Bassaricyon, que son miembros de la familia Procyonidae que incluye los mapaches. Bassaricyon neblina, conocido como el olinguito, que se encuentra en las áreas montanas tropicales en el oeste de Colombia y Ecuador en América del Sur. Este olinguito fue reconocido como una especie nueva en el 2013 cuando fue identificado partir de especímenes de museo, y es actualmente una especie de preocupación listada como “casi amenazada” por la UICN (Helgen et al. 2020). Bassaricyon alleni, conocido como el olingo de las tierras bajas del este, es un pariente del olinguito con un rango de distribución más grande lo largo del norte de América del Sur; actualmente se encuentra listado como “Preocupación menor” por la UICN (Helgen et al. 2016).","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"obtener-datos-de-ocurrencia","dir":"Articles","previous_headings":"","what":"Obtener datos de ocurrencia","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Asegúrese de estar en el primer componente (Obtain Occurrence Data [Obtener datos de ocurrencia]) y haga clic para leer el texto de guía del componente. Hay tres módulos disponibles para obtener datos de ocurrencias: Query Database (Present) [Consultar base de datos (presente)], Query Database (Paleo) [Consultar base de datos (Paleo)], y User-Specified [Datos del usuario]. Escoja un módulo y haga clic en el texto guía del módulo. Note que el texto guía del módulo cambia cuando selecciona otro de los tres módulos. Lea estas guías para entender mejor cómo los datos de ocurrencia se obtienen comúnmente y cómo wallace los implementa.  Nota: partir del 01 September 2023, el módulo Query Database (Paleo) [Consultar base de datos (Paleo)], estará disponible temporalmente. Procedemos obtener datos de ocurrencia. Usaremos ocurrencias del presente (en contraste con los del pasado obtenidos mediante datos fósiles, etc.) y por lo tanto usaremos el módulo: Query Database (Present)[Consultar base de datos (presente)]. Hay una selección de bases de datos para escoger, como también una opción para obtener solo las ocurrencias con información sobre la incertidumbre de las coordenadas (esto puede ser útil para filtrar más adelante). Si usted tiene un ID de usuario de GBIF, marcar la casilla “Include Data Source” [Incluir fuente de los datos] le permitirá iniciar sesión con su nombre de usuario y contraseña. Para que esto funcione, debe instalar el paquete de R occCite antes de ejecutar Wallace. Dado que occCite es un paquete sugerido, este será instalado automáticamente como otras dependencias. Escoja GBIF (Global Biodiversity Information Facility—una de los más grandes repositorios para datos de biodiversidad), deje la casilla de incertidumbre sin marcar, escriba Bassaricyon neblina en la casilla del nombre científico, ponga el máximo de ocurrencias en 200, y haga clic en Query Database [Consultar base de datos]. Después de completar la descarga, la ventana de registro tendrá la información de los análisis realizados. Su búsqueda deberá retornar al menos 58 registros (números encontrados al momento de escribir esta guía), pero después de tener en cuenta los registros sin coordenadas (latitud, longitud) y eliminar registros duplicados, deberían quedar al menos 43. Esta especie tiene relativamente pocos registros, entonces poner el máximo en 200 es suficiente, pero para modelar con especies con muchos datos, 200 puede ser un número adecuado para muestrear el rango conocido y el número máximo puede ser aumentado. **Los números pueden ser diferentes medida que se añaden más registros GBIF.  Ahora haga clic sobre la pestaña “Occurrences” [Ocurrencias] para obtener más información sobre los registros. Los desarrolladores escogieron los campos que son mostrados basados en su relevancia general para los estudios sobre el rango de distribución de las especies. Note que puede descargar la tabla completa con todos los campos originales.  Haga clic en la pestaña “Save” [Guardar]. La primera casilla le permite descargar su sesión. Está disponible en todos los componentes y módulos (Vea Guardar y Cargar Sesión para más detalles). Las opciones de descarga debajo de la casilla de “Save Session” cambian de acuerdo al componente seleccionado. Aquí, puede obtener un archivo .csv con los registros adquiridos. La primera opción descargará la base de datos original con todos los campos para todos los registros descargados (pre-filtrado). La segunda opción descarga la tabla actual. La tercera opción, “Download data” [Descargar todos los datos], está disponible en este punto pero esto cambiará después de incluir la segunda especie. Nota para usuarios de Chrome: Si el mapa está cargando correctamente después de descargar un objeto, específicamente si el cuadrante de la esquina carga pero el resto del mapa está gris, cerrar la barra de descarga en la parte inferior de la página debería reiniciar el mapa y arreglar el problema.  Una mejora importante en Wallace v2.0 sobre versiones anteriores es la posibilidad de analizar múltiples especies (por separado) en la misma sesión. Vamos añadir otra especie para modelar. Aparte de GBIF, usted puede consultar otras bases de datos para obtener registros de ocurrencias de especies como Vertnet (para datos de vertebrados), y la nueva adición BIEN (para datos botánicos). En el segundo módulo, Query Database (Paleo) [Consultar base de datos (Paleo)], puede consultar las bases de datos de PaleobioDB para registros fósiles seleccionando un intervalo de tiempo y especies. Puede que sea necesario descargar paquetes específicos antes de ejecutar Wallace para usar estas bases de datos (p. ej., BIEN y paleobioDB). Si usted tiene sus propios datos de ocurrencias, los puede importar usando el tercer módulo, User-specified [Especificado por el usuario]. Su archivo de ocurrencias debe ser un .csv con las columnas “scientific_name”, “longitude”, y “latitude”. Estas columnas deben ser nombradas explícitamente y en inglés. Puede haber otras columnas pero estas deben ser las tres primeras. También tiene la opción de especificar el delimitador y separador de su archivo. Vamos continuar con los datos de ocurrencia de GBIF. Busque Bassaricyon alleni (de tierras bajas del este) en la base de datos, manteniendo el máximo en 200. Esto debería retornar al menos 81 registros y después de limpiarlos deberían quedar al menos 42 registros. Puede haber notado que la ventana de registro se ha actualizado, pero el mapa sigue igual. El mapa va cambiar automáticamente, porque Bassaricyon neblina está seleccionado aún en el menú de Especies. Cambié la especie Bassarricyon alleni para mostrar el mapa de sus registros.  Haga clic otra vez en la pestaña “Save” [Guardar]. Note que la tercera opción ya está disponible.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"obtener-datos-ambientales","dir":"Articles","previous_headings":"","what":"Obtener datos ambientales","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Ahora, necesitará obtener variables ambientales para el análisis. Los valores de las variables son extraídos para los registros de ocurrencia, y esta información se proporciona al modelo. Estos datos están en formato ráster, que significa simplemente una cuadrícula donde cada celda especifica un valor. Los rásteres pueden ser visualizados como cuadrículas de color en mapas (esto lo veremos más adelante). Haga clic en el componente Env Data. El primer módulo, WorldClim Bioclims, le permite descargar variables bioclimáticas de WorldClim, una base de datos global de superficies climáticas interpoladas derivadas partir de datos de estaciones meteorológicas disponibles en diferentes resoluciones. La interpolación es mejor en áreas con más estaciones meteorológicas (especialmente en países desarrollados), y existe mayor incertidumbre en áreas con menos estaciones. Las variables bioclimáticas son resúmenes de temperatura y precipitación que han sido sugeridas como variables con un significado biológico general. Usted tiene la opción de especificar un subconjunto de las 19 variables para usar en el análisis. El segundo módulo, ecoClimate, es un módulo incluído en v2 que incluye reconstrucciones paleoclimáticas. Este da acceso capas del proyecto PMIP3 – CMIP5 de ecoClimate. Los usuarios pueden escoger entre diferentes Modelos Atmosféricos Oceánicos de Circulación General y escoger un escenario temporal para usar. Todas las capas de ecoClimate tienen una resolución de 0.5 grados, mientras que WorldClim permite opciones de resolución de 30 arcsec, 2.5 arcmin, 5 arcmin, o 10 arcmin. El tercer módulo, User-specified [Especificado por usuario], es para cargar sus propios rásteres en Wallace. Estas pueden ser variables continuas, numéricas, o categóricas para proporcionar al modelo. Vamos usar WorldClim. La primera vez que usted use Wallace, estos datos serán descargados una carpeta temporal en su disco duro; después de esto, serán simplemente cargadas desde esta carpeta local (esto será más rápido que descargarlas de internet). Usted también tiene la opción de guardarlas en memoria para un procesamiento más rápido –esto guarda los datos temporalmente como un RasterBrick en su RAM para que Wallace pueda tener acceso. Los rásteres en resoluciones más finas tomarán más tiempo en ser descargados. Los datos de resolución más fina, (30 arcsec) se entregan en grandes cuadrículas globales cuando se descargan través de R usando el paquete raster (que wallace usa) y una sola cuadrícula que corresponde al centro del mapa será descargada. Seleccione resolución de 30 arcsec y la latitud y longitud del centro del mapa le será entregada. Para visualizar que tan bien la cuadrícula cubre los puntos de ocurrencia, haga clic en la casilla “30 arcsec tile” y en la esquina inferior izquierda del mapa. Los puntos fuera de la cuadrícula serán excluidos; puede requerir disminuir el zoom para verlo en su totalidad.  Aunque usted podría descargar los rásteres globales resolución de 30 arcsec (muy pesados) del sitio web de WorldClim y cargarlos en Wallace (preferiblemente despues de cortarlas utilizando un programa de SIG o en R), vamos escoger las variables bioclimáticas con resolución de 2.5 arcmin que Wallace entrega de forma global para cubrir todos nuestros puntos de ocurrencia, y vamos dejar las 19 variables marcadas. Note que las decisiones tomadas aplicarán solo para la especie seleccionada en el Menú de especies, ser que la casilla “Batch” esté marcada. La casilla de “Batch” hará el análisis que usted ha definido en el módulo para todas las especies cargadas. Usted notará que esta opción aparece en muchos de los módulos. Si quiere realizar análisis individuales para cada especie (en este caso diferentes variables ambientales), deje la casilla “Batch” sin marcar. Nota: la opción por lotes (batch) está disponible para la resolución de 30 arcsec dado que puede requerir cargar diferentes cuadrantes. Marque la casilla Batch y Load Env Data [Cargar datos ambientales]. Note que aparece una barra de progreso en la esquina inferior derecha.  Después de cargar los rásteres, la pestaña de “Results” [resultados] mostrará información de resumen sobre estos (p. ej., resolución, extensión, número de celdas, etc.). Adicionalmente la descarga de los rásteres, Wallace eliminará cualquier ocurrencia que tenga valores ambientales (es decir puntos que se sobrelapan con celdas con datos en los rásteres).  Puede descargar sus variables ambientales en la sección Download Data [Descargar datos] de la pestaña “Save” [Guardar].","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"procesar-datos-de-ocurrencias","dir":"Articles","previous_headings":"","what":"Procesar datos de ocurrencias","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"El siguiente componente, Process Occs, le da acceso algunas herramientas para limpieza de datos. Los datos que usted descargó de GBIF son brutos, y casi siempre tendrán algunos puntos erróneos. Conocimientos básicos sobre el rango de la especie de interés pueden ayudarnos eliminar los errores más obvios. Para bases de datos como GBIF que acumulan grandes cantidades de datos provenientes de diferentes fuentes, hay inevitablemente algunas localidades dudosas. Por ejemplo, las coordenadas pueden corresponder la ubicación del museo en vez de la localidad de colecta, o la latitud y longitud pueden estar invertidas. Para eliminar estos registros evidentemente errados, seleccione solo los puntos que usted quiere conservar en el análisis con el módulo Select Occurrences Map [Seleccionar ocurrencias en el mapa]. Alternativamente, usted puede también remover registros específicos usando el ID en el módulo Remove Occurrences ID [Eliminar ocurrencias por ID]. Incluso después de eliminar los puntos problemáticos, los que quedan pueden estar agrupados causa de sesgos de muestreo. Esto conduce muchas veces una autocorrelación espacial inflada artificialmente lo cual puede sesgar la señal ambiental para los datos de ocurrencias que el modelo va intentar ajustar. Por ejemplo, pueden existir agrupaciones de puntos cerca de las ciudades porque los datos provienen en su mayoría de ciencia ciudadana con personas que viven cerca o alrededor de ciudades. O, los puntos pueden concentrarse alrededor de vías pues los biólogos de campo que los tomaron estaban haciendo observaciones mientras manejaban o accedían las localidades de muestreo usando esa ruta. El último módulo, Spatial thin [Adelgazado especial] va ayudar reducir los efectos del sesgo de muestreo. diferencia de otros componentes, en Process Occs los módulos son excluyentes y pueden ser usados en cualquier orden. Asegúrese de que Bassaricyon alleni está en el menú de especies. Vamos practicar usando los dos primeros módulos con esta especie. En el primer módulo, vamos usar la herramienta de dibujo de polígonos para seleccionar las ocurrencias . La herramienta de dibujo de polígono es útil para dibujar extensiones y la veremos también en otros módulos más adelante. Haga clic en el ícono de polígono en la barra de herramientas del mapa.  Esto abre la herramienta de dibujo. Haga clic para empezar dibujar —cada clic conecta con el anterior por medio de una línea. Dibuje un polígono alrededor de América del Sur, omitiendo los registros de Bolivia. Si comete un error dibujando, puede dar clic en “Delete last point” [Eliminar el último punto] o “Cancel” [Cancelar] para volver empezar. Para terminar de dibujar, haga clic de nuevo en el primer punto que realizó, o haga clic en “Finish” [Finalizar] en la barra de herramientas de dibujo. Esto termina el polígono para usar en los análisis. Ahora haga clic en “Select Occurrences” [Seleccionar Ocurrencias] y va ver que el punto en Bolivia desaparece. Para eliminar el polígono con sombreado azul, haga clic en el ícono de papeleras y haga clic en “Clear ” [Limpiar todo]. Si está contento o cometió un error, el botón rojo “Reset” [Restablecer] en la interfaz del módulo revierte la sesión los puntos originales. Dado que se eliminó el registro de Bolivia de forma arbitraria, haga clic en restablecer para volver al conjunto de datos original.  Ahora vamos eliminarlo de nuevo, esta vez usando el segundo módulo, Remove Occurrences ID [Eliminar ocurrencias por ID]. Haga clic en el registro de Bolivia. Va aparecer información sobre el registro empezando con el OccID. En este caso es OccID #18 (puede ser un número diferente para usted). Otra información de la tabla de atributos va estar disponible. Por ejemplo, el registro tiene información (NA) sobre el código de la institución, estado/provincia, o base. Dado que conocemos el número de OccID, podemos encontrar la información completa asociada en la pestaña de Ocurrencias. Haga clic ahí y encuentre el registro. Aquí podemos ver que se trata de un espécimen preservado del Museum Southwestern Biology (MSB). Regrese al mapa. Ingrese “18” en el ID para ser removido y haga clic en “Remove Occurrence” [Eliminar ocurrencia]. Usted verá que una vez más el punto desaparece. Haga clic en restablecer para recuperarlo.  continuación, haga clic en el módulo Spatial Thin [Filtrado espacial]. Esto le permite intentar reducir los efectos del sesgo espacial al ejecutar una función de adelgazamiento de los puntos para filtrar los que se encuentran una distancia menor el uno del otro que una distancia definida por el usuario. Vamos usar “10 km” como un ejemplo y adelgazar para cada especie por separado usando otra vez la opción “Batch”.  Ahora nos hemos quedado con 35 puntos para Bassaricyon alleni y 21 para Bassaricyon neblina (sus números pueden ser diferentes). Puede hacer zoom para ver lo que hizo la función. Los puntos rojos fueron retenidos mientras que los puntos azules fueron removidos. Descargue los conjuntos de datos procesados como un archivo .csv haciendo clic en la pestaña “Save” [Guardar]. Recordatorio: los datos descargados son solo para la especie seleccionada actualmente en el menú.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"procesar-datos-ambientales","dir":"Articles","previous_headings":"","what":"Procesar datos ambientales","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Ahora tenemos que elegir la extensión de estudio para modelar. Esto definirá la región de la cual los puntos de “background” [fondo] serán seleccionados para el ajuste del modelo. Se supone que los puntos de fondo deben muestrear los ambientes en la totalidad del área disponible para la especie de estudio. Métodos como Maxent son conocidos como técnicas de presencia-fondo porque comparan los valores de las variables predictoras para los puntos de fondo con los de los puntos de ocurrencia (diferencia de las técnicas de presencia-ausencia que requieren datos de ausencia). Al tomar decisiones sobre la extensión del estudio, queremos evitar áreas las cuales históricamente la especie ha podido moverse —por ejemplo, regiones más allá de una barrera física como una cadena montañosa o un gran río que la especie puede cruzar. Incluir estas áreas puede enviar una señal errónea al modelo de que esas áreas son idóneas ambientalmente. Al igual que para cada paso del análisis, por favor vea el texto guía relevante para más detalles. Aquí, usted puede explorar las diferentes opciones para delimitar la extensión del estudio. Cada módulo tiene dos pasos: 1) escoger la forma de la extensión del fondo, y 2) muestrear los puntos de fondo. Para empezar, vaya al módulo Select Study Region [Seleccionar la región de estudio]. Baje “Step 1” [Paso 1], intente diferentes opciones y vea cómo cada una dibuja la forma del fondo. Intente aumentar y disminuir la zona de amortiguamiento (“buffer”) para ver cómo afecta la forma. Ahora seleccione la especie B. neblina en el menú de especies y en el módulo Select study region [seleccionar región de estudio] escoja la opción minimum convex polygon [polígono mínimo convexo]. Usaremos una zona de amortiguamiento de 0.7° de distancia. Ahora cambie la especie B. alleni y use una zona de point buffers [amortiguamiento de puntos] con una distancia de 0.7°.  Alternativamente, puede dibujar su propio polígono (use la misma herramienta para dibujar polígonos que probamos en el Componente: Process occs). Si tiene un archivo especificando la extensión del fondo, puede cargarlo usando el módulo User-specified Study Region [Región de estudio especificada por el usuario]. Este módulo puede aceptar un shapefile (debe incluir los archivos .shp, .shx, .dbf) o un archivo .csv con las coordenadas de los vértices del polígono con los campos en el siguiente orden: longitud, latitud. Note que el polígono que usted dibuje o la forma que usted cargue debe contener todos los puntos de ocurrencia. continuación, complete el “Step 2” [Paso 2] , el cual corta los rásteres al área de estudio y muestrea los puntos de fondo. Establezca el número de puntos de fondo en 10,000 (muestras más grandes pueden ser apropiadas para áreas de estudio más grandes o para resoluciones más finas; vea el texto guía del componente), marque la casilla “Batch”, y haga clic en el botón “Sample” [Muestrear].  Puede encontrar que pedir 10,000 puntos de fondo excede el número de celdas disponibles en el área de fondo. El número de puntos disponibles le será dado en la ventana de registro, y ese número puede ser usado en vez de 10,000. Un archivo .zip de los rásteres cortados (p. ej., los datos ambientales cortados al área de fondo que usted acaba de crear) estarán disponibles para descargar en la pestaña de “Save” [Guardar]. Asegúrese de cambiar de especies en el menú para descargar un archivo para cada una.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"caracterizar-el-espacio-ambiental","dir":"Articles","previous_headings":"","what":"Caracterizar el espacio ambiental","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"El Componente: Characterize Environmental Space [Caracterizar el espacio ambiental] contiene análisis para múltiples especies y es opcional. diferencia de otros componentes que le permiten usar los módulos en cualquier orden, los módulos dentro de Characterize Environmental Space [Caracterizar el espacio ambiental] son secuenciales y deben ser utilizados en orden (usted puede usar el módulo Occurrence Density Grid [Grilla de Densidad de Ocurrencias] sin utilizar primero el módulo Environmental Ordination [Ordenación Ambiental]). Antes de empezar el análisis con el Módulo: Environmental Ordination [Ordenación Ambiental], debe seleccionar dos especies para trabajar. Si tiene más de dos especies cargadas, seleccione dos del menú de especies. Dado que solo tenemos dos cargadas, haga clic en el menú de especies y seleccione la segunda especie. Ambos nombres aparecerán en la caja de manera simultánea—actualmente esta funcionalidad solo está disponible para el componente Characterize Environmental Space [Caracterizar el espacio ambiental].  El Módulo: Environmental Ordination [Ordenación Ambiental], permite realizar un Análisis de Componentes Principales (PCA por sus siglas en inglés), el cual maximiza la variación contenida en las variables predictoras en menos variables. Para realizar un PCA, seleccione las variables disponibles para ambas especies marcando o marcando las variables bioclimáticas. Escoja entre “Occurrences ” [Solo ocurrencias] o “Occurrences & Background” [Ocurrencias y Fondo] para la selección de gráficas y determine los componentes para los ejes x y y. La gráfica de dispersión del PCA [PCA scatter plot] aparecerá en la pestaña de Results [resultados].  También puede ver el PCA correlation circle [círculo de correlación del PCA], PCA scree plot [gráfica de sedimentación], y el resumen de los resultados del PCA [PCA results summary]. Para más información sobre estas estadísticas y cómo evaluar los resultados, consulte el texto guía.    Ahora, ejecute el módulo Occurrence Density Grid [Grilla de densidad de ocurrencia]. Este calcula y grafica cual es la parte del espacio ambiental que está más densamente ocupada por cada especie y la disponibilidad de condiciones ambientales presentes en el rango del fondo. Las áreas más oscuras representan mayor densidad de ocurrencia. Las áreas dentro de las líneas sólidas representan las condiciones ambientales disponibles en el rango del fondo, las áreas dentro de las líneas punteadas representan el 50% de las más frecuentes.  Ahora calcule el Niche overlap [Sobrelape de nicho]…  Esta cuantificación del sobrelape de nicho está basada en las densidades de ocurrencia y fondo en el espacio ambiental disponible estimado en el Módulo: Occurrence Density Grid [Grilla de densidad de ocurrencia]. Este sobrelape está cuantificado usando la métrica de Schoener’s D. Las condiciones ambientales ocupadas por el nicho de la especie 1 se muestran en azul y las condiciones ambientales ocupadas por el nicho de la especie 2 en rojo. Las condiciones ambientales ocupadas por ambas especies, o el sobrelape, aparecen en morado. En el Similarity Test [Test de Similitud], si el sobrelape observado (línea roja) es superior al 95% de los sobrelapes simulados (valor-p < 0.05), podemos considerar que las dos especies son más similares que lo esperado en un escenario al azar que es lo que vemos aquí. De nuevo, consulte el texto guía del módulo para obtener ayuda para entender e interpretar los resultados. Descargue los resultados del PCA (.zip), grilla de densidad (.png), y gráfica de sobrelape (.png) de la pestaña “Save” [Guardar].","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"dividir-ocurrencias","dir":"Articles","previous_headings":"","what":"Dividir Ocurrencias","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Aún hemos construido modelos, pero antes de hacerlo, vamos tomar decisiones sobre cómo dividir nuestros datos para la evaluación. Para poder determinar la habilidad predictiva del modelo, en teoría usted necesita datos independientes para evaluarlo. Cuando existen conjuntos de datos independientes, una solución es dividir sus datos en subconjuntos que asumimos son independientes los unos de los otros, después, se construyen modelos secuencialmente usando todos los subconjuntos menos uno y se evalúa el rendimiento del modelo con el subconjunto que se dejó por fuera. Esto se conoce como validación cruzada en k-grupos (k-fold cross-validation, dónde k es el número total de subconjuntos, o ‘grupos’) Esto es muy prevalente en estadística, especialmente en los campos de aprendizaje automático y ciencia de datos. Después de que se completa este ejercicio de construcción secuencial de modelos, Wallace promedia las estadísticas de rendimiento del modelo sobre todas las iteraciones y finalmente construye un modelo usando todos los datos. Existe mucha literatura alrededor de cuál es la mejor forma de dividir datos para la evaluación de modelos. Una opción, es simplemente dividir los datos de manera aleatoria, pero con datos espaciales corremos el riesgo de que los grupos sean espacialmente independientes los unos de los otros. El método de “jackknife” (“dejar uno afuera”) es recomendado para especies con tamaños de muestreo pequeños y se usó previamente para modelar la distribución de Bassaricyon neblina (Gerstner et al. 2018) pero puede usar muchos recursos computacionales y tener largos tiempos de procesamiento. Otra opción es realizar particiones espaciales—por ejemplo, dibujando líneas en el mapa para dividir los datos. La división espacial con validación cruzada de k-grupos fuerza al modelo predecir en áreas distantes de las áreas usadas para entrenar el modelo (note que Wallace también excluye los puntos de fondo de las regiones que corresponden la partición utilizada). Para Bassaricyon alleni, las condiciones ambientales en Colombia y Ecuador pueden diferir considerablemente de las condiciones en Bolivia. Si en promedio el modelo hace predicciones precisas en los datos divididos y retenidos espacialmente, este tiene potencialmente una alta transferibilidad, es decir, que puede transferirse nuevos valores de las variables predictoras (dado que áreas alejadas geográficamente son usualmente más diferentes ambientalmente que áreas más cercanas). Como siempre, por favor vea el texto guía para más detalles sobre todos los tipos de particiones ofrecidos en Wallace. Aquí tenemos un ejemplo de jackknife (k = n), que asigna cada punto su propia partición, entonces el número de grupos es igual al número total de ocurrencias.  Ahora aquí está un ejemplo de división espacial, esta asigna cada punto uno de las cuatro particiones espaciales separadas.  Vamos usar este último método para una computación más rápida, pero se recomienda leer el texto guía y otra literatura –– ¡y hablar con sus pares!—para tomar decisiones informadas sobre los métodos de partición. Divida las ocurrencias para ambas especies usando el Módulo: Spatial Partition [Partición Espacial] y la opción Block (k = 4).","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"guardar-y-cargar-sesión","dir":"Articles","previous_headings":"","what":"Guardar y Cargar Sesión","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Antes de empezar modelar, vamos explorar una de las grandes características de Wallace v2, esta es la habilidad de parar y guardar su progreso para continuar más tarde. Si quiere saltarse este paso (y arriesgarse perder todo su trabajo excepto los datos y resultados que haya descargado si ocurre algún error), puede avanzar la sección Modelar. Haga clic en ‘Save Session’ [Guardar Sesión] en la pestaña “Save” [Guardar]. Esta pestaña está disponible desde cualquiera de los Componentes. Esta opción guardará su progreso en un archivo RDS (.rds), un tipo de archivo utilizado para guardar objetos de R. Después de guardar, puede hacer clic en el símbolo de detener en la esquina superior derecha o cerrar la ventana del explorador y salir de R/RStudio. Nota: si la sesión de Wallace se cierra antes de guardar los resultados y/o la sesión todo el trabajo se perderá. Cuando esté listo para reanudar la sesión, vuelva cargar Wallace. En el componente Intro, use la pestaña “Load Prior Session” [Cargar sesión previa] para importar su archivo de sesión .rds.  Una caja aparecerá – es un mensaje de alerta de Wallace, pero en este caso está indicando que la sesión fue cargada. Puede ser necesario volver cargar las variables usando los componentes Occ Data y Env Data. Ahora puede continuar con los análisis previos.","code":"library(wallace) run_wallace()"},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"model","dir":"Articles","previous_headings":"","what":"Modelar","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Estamos listos para construir un modelo de distribución. Wallace v2.0 provee dos opciones de algoritmos; Maxent y BIOCLIM. Para esta viñeta, usaremos Maxent, un método de aprendizaje automático que puede ajustar un rango de funciones, desde simples (líneas rectas) hasta complejas (curvas o líneas que cambian de dirección; estas pueden volverse dentadas si la complejidad se controla), los patrones de los datos. Para más detalles sobre Maxent, por favor consulte la página web de Maxent y el texto guía. Maxent está disponible través del paquete maxnet o través de Java con la opción maxent.jar. Para demorarnos más y evitar problemas relacionados con Java, aquí usaremos las siguientes opciones de modelado: Escoja maxnet Seleccione L, LQ, y H como “feature classes” [clases de características]. Estas son las formas que pueden ser ajustadas los datos: L = Lineal, p.ej. temp + precip Q = Cuadrática, p.ej. temp2 + precip2 H = Hinge, e.g. funciones lineales por partes, como “splines” o ranuras (piense en una serie de líneas que se conectan las unas con las otras) eleccione “regularization multipliers” [multiplicadores de regularización] entre 0.5 y 4 con un “step value” [Valor de incremento] de 0.5. La regularización es una penalidad sobre la complejidad del modelo. Valores más altos = modelos menos complejos, más suaves. Básicamente, todos los coeficientes de las variables predictoras se van disminuyendo hasta que algunos llegan 0, ahí salen del modelo. Solo las variables con mayores contribuciones predictivas se quedan en el modelo. Deje “” seleccionado para las variables categóricas. Esta opción es para indicar si alguna de sus variables predictoras es categórica como por ejemplo clases de vegetación o suelos. Si usted hubiese cargado variables categóricas, marcaría esta casilla e indicaría cuál de los rásteres es categórico. En “Clamping?”[extrapolación restringida] escoja “TRUE” [verdadero]. Esto va restringir las predicciones del modelo (es decir que mantendrá los valores ambientales más extremos que los presentes en los datos de fondo dentro de los límites de los datos de fondo). Si usted escoge la opción “TRUE” [verdadero]en la categoría “Parallel?” [Paralelo] puede indicar sobre cuántos núcleos quiere ejecutar en el procesamiento en paralelo. Vamos construir un modelo para Bassaricyon neblina, pero note que la opción Batch puede ser marcada para ejecutar esta selección para todas las especies cargadas. Asegúrese de que Bassaricyon neblina esté seleccionada en el menú de especies y que la opción Batch está marcada antes de dar clic en el botón Run [Ejecutar]. Las 3 clases de características (L, LQ, H) * 8 multiplicadores de regularización (0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4) = 24 modelos candidatos. Las clases de características Hinge (H) van permitir cierta complejidad en la respuesta, por lo cuál estos tomarán un poco más de tiempo ejecutándose que otros modelos más simples.  Los resultados aparecen en dos tablas de estadísticas de evaluación que facilitan la comparación entre los modelos que usted acaba de construir. La primera tabla muestra las estadísticas para el modelo completo y los promedios de las particiones. Esta tabla debe tener 24 filas, una para cada una de las combinaciones de clases de características y multiplicadores de regularización. En la primera tabla, las estadísticas de los modelos construidos partir de los cuatro grupos de datos divididos (un grupo retenido para cada iteración) son promediados. En la segunda tabla, se muestran las estadísticas para cada grupo de las particiones que fueron promediadas en la primera tabla, por lo tanto esta contiene 96 filas (cada uno de los 4 grupos para cada uno de los 24 modelos).  ¿Cómo escogemos el “mejor” modelo? Hay una gran cantidad de literatura al respecto de esto, y realmente hay una sola respuesta para todos los conjuntos de datos. Las estadísticas de rendimiento del modelo, es decir, AUC (Area Curve- Área bajo la curva), (Omission Rate - Tasa de omisión), y CBI (Continuous Boyce Index) fueron calculadas y promediadas sobre las diferentes particiones y el AICc (Criterio de información de Akaike corregido) fue calculado usando la predicción del modelo en el área de fondo completa (y todos los puntos de ocurrencia filtrados). Aunque AICc incorpora los resultados de la validación cruzada, si penaliza explícitamente la complejidad del modelo—por lo tanto, modelos con más parámetros tienden tener peores puntajes de AICc. Es realmente una decisión del usuario y el texto guía tiene algunas referencias que deberían ayudarle aprender más sobre el tema. La tabla de métricas de evaluación se puede ordenar. Primero, vamos priorizar los modelos que omitieron pocos puntos de ocurrencia en el área predicha durante la validación cruzada. Organice la tabla de resultados en orden ascendente partir de la columna “.10p.avg”, o la tasa de omisión promedio cuando se aplica un umbral del décimo percentil de las presencias de entrenamiento al conjunto de datos (retenido) de validación (vea el texto guía para más detalles). Estamos priorizando los valores bajos de “.10p.avg” pues preferimos un modelo que omita muchas de las ocurrencias retenidas al realizar una predicción del rango.  Vamos mirar también los valores de AUC de validación promedio (dónde los valores más altos son mejores)…  y AICc (dónde valores bajos son mejores)…  En nuestro ejemplo, si hubiésemos escogido el modelo con el puntaje de AICc más bajo, habríamos terminado escogiendo el LQ_2. Nota: Sus valores pueden ser diferentes. Al lado de los resultados de Evaluation [Evaluación] usted puede acceder al archivo de Lambdas de Maxent (este archivo contiene los pesos para cada clase de característica y para cada variable) para cada uno de los modelos (puede cambiar el modelo candidato en la caja desplegable “Select model” [seleccionar modelo], cambiar el modelo aquí cambia la salida del archivo Lambda).  Utilice la pestaña “Save” [Guardar] para descargar las tablas de evaluación.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"visualizar","dir":"Articles","previous_headings":"","what":"Visualizar","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Hay cuatro módulos para la visualización. Vamos dejar el primero, Map Prediction [Mapear la predicción], para el final. Vamos saltarnos el cuarto módulo, BIOCLIM Envelope Plot [Gráfica de sobre ambiental de BIOCLIM], dado que utilizamos Maxent en vez de BIOCLIM. El módulo Maxent Evaluation Plots [Gráficas de evaluación de Maxent], permite los usuarios evaluar las estadísticas de rendimiento de los modelos. Las gráficas aparecen en la pestaña de Results [Resultados]. Abajo puede ver como las clases de características y los multiplicadores de regularización afectan los valores de AUC de validación promedio.  También deberíamos explorar las Response Curves [Curvas de respuesta], que muestran como la idoneidad de hábitat predicha (eje y) cambia con base los diferentes valores de cada variable (eje x). Para estas curvas, se muestra la respuesta marginal de una variable cuando las demás se mantienen en sus valores promedio. Si quiere ver los resultados para un modelo en particular, selecciónelo usando el menú desplegable bajo la caja de especies. Aquí abajo puede ver una curva de respuesta para el modelo LQ_2 para la precipitación promedio del mes más seco(bio14).  Por supuesto, puede visualizar también las predicciones del modelo en el mapa. Las predicciones de idoneidad de hábitat pueden ser continuas (un rango de valores desde bajo hasta alto) o binarias (cortadas con un umbral dos valores: 0, idóneo y 1, idóneo) . Estamos visualizando predicciones hechas con la transformación “cloglog”, esta convierte la salida cruda de Maxent (tasa de ocurrencia relativa) una escala probabilística entre 0 y 1 para aproximarse la probabilidad de presencia (dado supuestos claves). Por favor vea el texto guía del módulo para obtener información sobre los tipos de escalamientos en la salida de Maxent y los umbrales. Aquí está la predicción mapeada para el modelo LQ_2, sin umbral, con una salida de tipo cloglog.  Aquí abajo está la predicción mapeada del mismo modelo, esta vez con un umbral del décimo percentil del valor de presencia en datos de entrenamiento (el valor de idoneidad que usamos para calcular las tasas de omisión arriba para seleccionar los modelos). Algunos de los puntos de ocurrencia van caer fuera de las regiones azules que representan áreas idóneas para Bassaricyon neblina. Para el valor de presencia de entrenamiento del décimo percentil, dado que representa la idoneidad más pequeña predicha, pero el valor que deja por fuera el 10% más bajo, la omisión esperada sería de 0.1 (es decir el 10% es omitido).  Intente mapear la predicción usando el umbral menos estricto de ‘minimum training presence’ [presencia de entrenamiento mínima] y note la diferencia. También puede usar un umbral basado en el cuantil de presencias de entrenamiento omitidas. Intente cambiar el valor del cuantil y note el cambio en la predicción.  Puede haber notado que la opción “batch” está disponible para este componente. Los usuarios deben seleccionar modelos óptimos relativamente cada especie, y por lo tanto las predicciones sólo pueden ser mapeadas individualmente. Puede descargar las gráficas de evaluación para Maxent o BIOCLIM, las curvas de respuesta, y mapas de predicciones en la pestaña ”Save” [Guardar]. Note que esto va descargar la gráfica actual. Por ejemplo, si usted quisiera descargar el mapa de predicción continua, debe realizar el mapeo de nuevo dado que el último mapa está usando un umbral.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"transferencia-del-modelo","dir":"Articles","previous_headings":"","what":"Transferencia del Modelo","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"continuación, puede transferir el modelo nuevas áreas o escenarios climáticos pasados/futuros. “Transferir” significa simplemente hacer predicciones con el modelo seleccionado usando nuevos valores ambientales (es decir valores usados para la construcción del modelo) y obtener predicciones de idoneidad para nuevos rangos de las variables. Nota: Esto también se conoce como “proyectar” un modelo, pero lo confunda con el término usado en SIG para cambiar el sistema de coordenadas de un mapa. Esto es potencialmente confuso porque en el paso de validación cruzada también hicimos transferencias nuevas condiciones. El paso de validación cruzada forzó los modelos predecir nuevas áreas de manera iterativa (y por lo tanto probablemente nuevos ambientes), y las estadísticas de evaluación resumen la habilidad de una configuración particular del modelo para producir modelos que se transfieren de forma precisa. Sin embargo, el modelo final que usamos para realizar las predicciones que estamos visualizando se construyó con todos los datos (excluyó ninguna de las particiones o de las áreas geográficas que les corresponden). Entonces los rangos de las variables asociados con todos los puntos de fondo en nuestro conjunto de datos fueron usados en el proceso de construcción del modelo. Ahora estamos utilizando ese modelo y transfiriendolo rangos de variables que pueden haber sido usados en la construcción del modelo (es decir que están representados en los datos de entrenamiento). Entonces, estos valores ambientales para diferentes áreas y periodos podrían ser completamente nuevos para nuestro modelo, incluso potencialmente tan diferentes que podemos estar seguros sobre la precisión de nuestra predicción. Esto es porque aunque las variables de respuesta siguen siendo las mismas, predicciones para valores más extremos que los datos de entrenamiento pueden resultar en predicciones de idoneidad inesperadas. Por esta razón, frecuentemente se usa “clamping” [o la extrapolación restringida] para restringir las transferencias de los modelos (ver abajo). Por favor vea el texto guía para más información al respecto de estas “condiciones -análogas”. Empecemos con el módulo Transfer New Extent [Transferir un nuevo rango] y veamos si Perú tiene áreas idóneas para el olinguito. En el Paso 1, use la herramienta de dibujo de polígono para dibujar alrededor de Perú con una zona de amortiguamiento o buffer de 1-grado y haga clic en “Create” [Crear]. Alternativamente, usted puede cargar un shapefile o un archivo CSV con información sobre los vértices de un polígono con los campos “longitude, latitude” [longitud y latitud pero debe tenerlos en ese orden y con los nombres en inglés] para usar como región de estudio.  En el Paso 2, seleccione un umbral para hacer predicciones binarias o “threshold” [sin umbral] para una predicción continua y haga clic en “Transfer”. Aquí, vemos una muy baja idoneidad para la mayor parte de Perú para el olinguito. Nota: Para remover el borde del polígono de la predicción, haga clic en el ícono de basura y “Clear ” [Limpiar todo].  Si utilizó las variables de WorldClim o ecoClimate como variables ambientales, puede usar el módulo Transfer New Time [Transferir un nuevo periodo]. En el Paso 1, hay tres opciones para escoger una región de estudio: dibujar un polígono, usar la misma región del modelo, o cargar un polígono. En el Paso 2, usted tiene la opción de escoger WorldClim o Ecoclimate como fuente de las variables. Esta decisión depende de su selección inicial de variables ambientales en el Componente: Env Data. Para WorldClim, seleccione un periodo de tiempo, un modelo de circulación global (GCM por sus iniciales en inglés), una trayectoria de concentración representativa (RCP, por sus iniciales en inglés), y un umbral. Note que hay varios GCMs para escoger—estos representan diferentes esfuerzos para modelar el clima futuro. todos los GCMs tienen datos en forma ráster para todos los RCPs. Vea el texto guía de este módulo para saber más sobre RCPs y GCMs. Nota: algunas bases de datos han retirado los RCPs y los han reemplazado con Trayectorias Socioeconómicas Compartidas (SSPs, por sus iniciales en inglés), entonces tenga en cuenta que en la literatura puede encontrar terminología relacionada los SSPs en vez de los RCPs. Para ecoClimate, puede seleccionar un Modelo de Circulación General Atmosférico Oceánico (AOGCM, por sus iniciales en inglés), escenario temporal y umbral. El tercer módulo, Transfer User Environments [Transferir ambientes de usuario], le da los usuarios la opción de proyectar su modelo sus propias variables ambientales cargadas. El primer paso es el mismo que el anterior (seleccionar la región de estudio), pero en el segundo paso los usuarios pueden cargar rásteres de un solo formato (.tif, .asc) para usar como nuevos datos para la proyección del modelo. Los rásteres deben tener la misma extensión y resolución (tamaño del píxel), y los nombres de los archivos deben corresponder los de las variables ambientales usadas para el modelado. Para ayudarlo, hay un mensaje “files must named : …” [Sus archivos deben estar nombrados así: …] indicando los nombres correctos usar para los archivos. Vamos saltarnos los módulos Transfer New Time [Transferir nuevo periodo] y Transfer User Environments [Transferir ambientes de usuario] y pasar Calculate Environmental Similarity [Calcular similitud ambiental]. Al transferir un modelo, pueden existir áreas dentro de nuestro nuevo rango de valores que tienen alta incertidumbre porque son muy diferentes de los valores usados para construir el modelo. Para visualizar estas áreas, podemos usar el cuarto módulo, Calculate Environmental Similarity, [Calcular similitud ambiental] para graficar un mapa de MESS. Esta es una superficie de similitud ambiental multivariada (las siglas por sus iniciales en inglés: (M)ultivariate (E)nvironmental (S)imilarity (S)urface), y el mapa muestra en una escala continua las diferencias ambientales con los datos de entrenamiento usados para construir el modelo, donde valores más positivos son más similares (azul) y valores más negativos son más diferentes (rojo); por favor lea el texto guía de este módulo para más detalles. Podemos ver que los valores climáticos del futuro grandes elevaciones son más similares nuestros datos de entrenamiento que los de elevaciones bajas hacia la costa. Podemos interpretar que la idoneidad predicha en estas últimas tiene una incertidumbre más alta.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"reproducir","dir":"Articles","previous_headings":"","what":"Reproducir","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Una gran ventaja de Wallace es la reproducibilidad. La primera opción dentro de este componente es la de descargar el código para ejecutar el análisis. Mientras estábamos usando Wallace, un código de R se ha estado ejecutando en el fondo, evidenciado por los mensajes que han aparecido en la consola de R. Esta opción le permite descargar una versión simplificada de este código como un script condensado y anotado de R. Este script sirve como documentación para el análisis y puede ser compartido. También se puede ejecutar para reproducir los análisis, o editar para cambiar algunos aspectos. El script puede ser descargado en diferentes formatos pero el R Markdown (.Rmd), es un formato conveniente para combinar código fuente de R y textos de anotación y, se puede ejecutar directamente en R. Para descargas en .pdf, el programa TeX debe estar instalado en su sistema. Por favor vea el texto en esta página para más detalles. Para descargar el script, seleccione Rmd y haga clic en Download [Descargar].  Ahora, debe tener un archivo .Rmd que contiene todo su análisis. Los módulos de Wallace son indicados como encabezados y marcados con los símbolos ###.  Tal vez quiera abrir una nueva ventana de R e intentar ejecutar una parte de este código. Recuerde que varias secciones de este código son dependientes de las primeras secciones, entonces puede que ejecuten si se adelanta . Note que cualquier análisis del componente Env Space aparecerá al final del archivo. También recuerde que si cierra su sesión de Wallace perderá su progreso en el explorador web (pero su archivo .RMD se verá afectado). Si usa RStudio, puede abrir este Rmd y hacer clic en knit [tejer] para compilar el flujo de trabajo en un archivo html que puede compartir. También puede descargar los Metadatos. Wallace genera y provee varios tipos de objetos de metadatos que facilitan la documentación y reproducibilidad registrando las decisiones metodológicas del usuario (p. ej., configuración de parámetros) y los guarda en un objeto “Range Model Metadata Standards” [Estándar de metadatos de modelos de rango]. Esto será descargado en un archivo comprimido (.zip) y contiene un archivo CSV(.csv) para cada especie.   El último módulo disponible en el componente Reproduce [Reproducir] es Reference packages [Referenciar paquetes]. Aquí, puede descargar las citas para todos los paquetes de R utilizados en el análisis. Para darle crédito las personas por los paquetes que hacen posible el funcionamiento de Wallace (y para documentar sus análisis correctamente), es crítico citar los paquetes y versiones. Recuerde, Wallace es modular y su objetivo es facilitar el acceso y uso de muchos paquetes de R que son producidos por la comunidad de investigadores en biogeografía. Por favor promueva esto citando los paquetes… ¡y piense en la posibilidad de crear uno propio y añadirlo una futura versión de Wallace algún día!","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"conclusión","dir":"Articles","previous_headings":"","what":"Conclusión","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Actualmente estamos trabajando con varios socios en nuevas adiciones, así que manténgase conectado para futuras versiones de Wallace. Hasta entonces, siempre puede trabajar en R después de la sesión modificando el .Rmd y construyendo sobre los análisis. Gracias por seguir el tutorial de Wallace v2. Esperamos que haya aprendido más sobre la aplicación actualizada, sus características, y el modelado de las distribuciones de especies y nichos en general. nos gusta ser repetitivos, pero realmente lo alentamos leer el texto guía, buscar las publicaciones recomendadas y ojalá dejar que estas lo lleven otras publicaciones relevantes para más información. También, recuerde discutir estos tópicos con sus pares. Lo invitamos unirse al grupo de Google de Wallace–nos encantaría escuchar sus opiniones y sugerencias sobre cómo hacer Wallace mejor para todos los usuarios. Los miembros pueden publicar para toda la comunidad y recibir anuncios de actualizaciones. Si usted encuentra un problema con el software, puede reportarlo en la página de problemas de GitHub o usando el formato de reporte.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"agradecimientos","dir":"Articles","previous_headings":"","what":"Agradecimientos","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Wallace fue reconocido como finalista en el Ebbe Nielsen Challenge Global Biodiversity Information Facility (GBIF) del 2015, y recibió fondos del premio. Este material está basado en trabajo apoyado por la National Science Foundation números de becas DBI-1661510 (RPA; Robert P. Anderson), DBI-1650241 (RPA), DEB-1119915 (RPA), DEB-1046328 (MEA; Matthew E. Aiello-Lammens), DBI-1401312 (RM; Robert Muscarella), y fondos de la National Aeronautics Space Administration beca 80NSSC18K0406 (MEB; Mary E. Blair). Cualquier opinión, conclusiones o recomendaciones expresadas en este material son las de los autores y reflejan necesariamente las de NSF o NASA.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"recursos-en-inglés","dir":"Articles","previous_headings":"","what":"Recursos (en inglés)","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Sitio web de Wallace https://wallaceecomod.github.io/ ENM2020 W19T2 Online open access Ecological Niche Modeling Course .T. Peterson, summary modeling, includes Walkthrough Wallace V1 https://www.youtube.com/watch?v=kWNyNd2X1uo&t=1226s Saber más sobre Olingos y el Olinguito https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3760134/ Gerstner et al. (2018). Revised distributional estimates recently discovered olinguito (Bassaricyon neblina), comments natural taxonomic history. https://doi.org/10.1093/jmammal/gyy012","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2-esp.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Tutorial de Wallace Aplicación de modelado Ecológico v2.0","text":"Phillips, S.J., Anderson, R.P., Dudík, M., Schapire, R.E., Blair, M.E. (2017). Opening black box: open-source release Maxent. Ecography, 40(7), 887-893. https://doi.org/10.1111/ecog.03049 Helgen et al Helgen, K., Kays, R., Pinto, C., Schipper, J. & González-Maya, J.F. (2020). Bassaricyon neblina (amended version 2016 assessment). IUCN Red List Threatened Species 2020: e.T48637280A166523067. https://www.iucnredlist.org/species/48637280/166523067 Helgen, K., Kays, R., Pinto, C. & Schipper, J. (2016). Bassaricyon alleni. IUCN Red List Threatened Species 2016: e.T48637566A45215534. https://www.iucnredlist.org/species/48637566/45215534 Hijmans, R.J., Cameron, S.E., Parra, J.L., Jones, P.G., Jarvis, . (2005). high resolution interpolated climate surfaces global land areas. International Journal Climatology, 25(15), 1965-1978. https://doi.org/10.1002/joc.1276 Lima-Ribeiro, M.S., Varela, S., González-Hernández, J., Oliveira, G., Diniz-Filho, J..F., Terribile, L.C. (2015). ecoClimate: database climate data multiple models past, present, future Macroecologists Biogeographers. Biodiversity Informatics 10, 1-21. https://www.ecoclimate.org/ GBIF.org (2022). GBIF Home Page. Available : https://www.gbif.org [19 April 2022]. Aiello-Lammens M.E., Boria R.., Radosavljevic ., Vilela B., Anderson R.P. (2015). spThin: R package spatial thinning species occurrence records use ecological niche models. Ecography, 38(5), 541-545. https://doi.org/10.1111/ecog.01132 Gerstner, B.E., Kass, J.M., Kays, R., Helgen, K.M., Anderson, R.P. (2018). Revised distributional estimates recently discovered olinguito (Bassaricyon neblina), comments natural taxonomic history. Journal Mammalogy, 99(2,3), 321-332. https://doi.org/10.1093/jmammal/gyy012 Kass, J., Muscarella, R., Galante, P.J., Bohl, C.L., Pinilla-Buitrago, G.E., Boria, R.., Soley-Guardia, M., Anderson, R.P. (2021). ENMeval 2.0: Redesigned customizable reproducible modeling species’ niches distributions. Methods Ecology Evolution, 12(9), 1602-1608. https://doi.org/10.1111/2041-210X.13628 Merow, C., Smith, M.J., Silander, J.. (2013). practical guide MaxEnt modeling species’ distributions: , inputs settings matter. Ecography, 36(10), 1058-1069. https://doi.org/10.1111/j.1600-0587.2013.07872.x","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"preface","dir":"Articles","previous_headings":"","what":"Preface","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Welcome Wallace EcoMod v2.0 vignette. vignette written specifically v2.0, using different version, things may match . Click v1.0 vignette vignette Spanish. Additionally, anticipate vignette (future) wallace package updated appended regularly accordance ongoing development.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Wallace R-based GUI application (R package wallace) ecological modeling currently focuses building, evaluating, visualizing models species niches distributions. refer models species distribution models (SDMs), explain length —read , pointed sources detailed information within application (Component Guidance Module Guidance tabs) reference. Wallace many qualities think make good example next-generation scientific software: ’s 1) accessible, 2) open, 3) expandable, 4) flexible, 5) interactive, 6) instructive, 7) reproducible. application, constructed R package shiny, features pannable/zoomable map dynamic plots tables. Data models can downloaded online databases uploaded user. results can downloaded, including option save R code can reproduce analysis. details, including SDMs, please see initial publication1 Methods Ecology Evolution follow-publication2 Ecography. Kass, J.M., Vilela, B., Aiello-Lammens, M.E., Muscarella, R., Merow, C., Anderson, R.P. (2018). Wallace: flexible platform reproducible modeling species niches distributions built community expansion. Methods Ecology Evolution, 9(4),1151-1156. https://doi.org/10.1111/2041-210X.12945 Kass, J.M., Pinilla-Buitrago, G.E, Paz, ., Johnson, B.., Grisales-Betancur, V., Meenan, S.., Attali, D., Broennimann, O., Galante, P.J., Maitner, B.S., Owens, H.L., Varela, S., Aiello-Lammens, M.E., Merow, C., Blair, M.E., Anderson R.P. (2022). wallace 2: shiny app modeling species niches distributions redesigned facilitate expansion via module contributions. Ecography, 2023(3), e06547. https://doi.org/10.1111/ecog.06547. Wallace project’s main page links Google Group, official email, CRAN page hosting stable version, GitHub development page. Wallace also YouTube channel various tutorial videos recorded seminars. use Wallace teaching, like hear experiences. Please take moment complete short survey: Wallace external workshop curriculum survey.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"installing-the-package","dir":"Articles","previous_headings":"Setup","what":"Installing the package","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"wallace work, using R version 3.5.0 later. Download Windows Mac. install load Wallace v2.0.6, open either R GUI RStudio run code . ’s code ’ll run use wallace. Wallace GUI open default web browser, R console occupied Wallace running. R console displays messages regarding R-package information error messages complications arise, including valuable information troubleshooting. intend ask question Google Group (preferred) email, please include errors messages console. ’d like use R console running Wallace, open another R session, alternatively terminal window (MacOS/Linux) command prompt (Windows) initialize R, run lines .  example Terminal MacOS. exit Wallace, hit ‘Escape’ R console close browser window, click quit button top right corner GUI. Note: close browser window running Wallace, session progress lost. See Save & Load Session save work able restart analysis.","code":"# Install Wallace from CRAN install.packages(\"wallace\")  # OR install Wallace from GitHub install.packages(\"remotes\") remotes::install_github(\"wallaceEcoMod/wallace\")  # THEN load Wallace library(wallace) # AND Run Wallace run_wallace()"},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"setting-up-java-version-of-maxent","dir":"Articles","previous_headings":"Setup","what":"Setting up Java version of Maxent","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Wallace v2.0 includes two options run Maxent models: maxnet maxent.jar. former, R implementation Maxent fits model leveraging package glmnet, now default require running Java (see Phillips et al. 2017). latter, original Java implementation, runs maxent() function package dismo, turn relies tools package rJava. using dismo run maxent.jar, user must place maxent.jar file /java directory dismo package root folder. can download Maxent find maxent.jar, runs Maxent, downloaded folder. can find directory path dismo/java running system.file(‘java’, package=“dismo”) R console. Simply copy maxent.jar paste folder. try run Maxent Wallace without file place, get warning message log window Maxent run. Also, trouble installing rJava making work, bit troubleshooting Wallace Github repository README hopefully help.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"orientation","dir":"Articles","previous_headings":"","what":"Orientation","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"’ll begin orientation Wallace interface. running run_wallace(), Wallace opens Intro page. “” tab contains background information program. “Team” tab details developers collaborators contributed Wallace. “Use” tab contains brief user manual, abridged version vignette without worked example. “Load Prior Session” tab loading prior session, cover later. top orange panel Components, represent steps analysis. component tabs opens corresponding step. Within component several Modules, discrete analysis options within components. left gray panel Wallace WORKFLOW, outlining version number, components (numbered), modules (bulleted) currently included. Click component tab Occ Data, select module, consult schematic showing different parts Wallace interface.  (1) components. stepping sequentially . Wallace v2 now includes Support button (1a), links Google Group, email, website, Github page report issues, well quit button (1b), end session. (2) toolbar user interface controls, buttons, text inputs, etc. can see module Query Database (Present) currently selected. ’ll see two modules exist component: Query Database (Paleo) User-specified. last module lets upload occurrence data. Try choosing instead notice toolbar changes, click back Query Database (Present). Component Module question mark buttons (?) next title text. Clicking link respective guidance texts. Within toolbar, can find module name R packages uses (2a), well control panel selected module (2b). Modules can contributed researchers developers; CRAN links documentation bottom. (3) right side visualization space. functions performed trigger message log window (3a). window also display error messages. Wallace v2.0 now allows user load multiple species. multiple species loaded, toggle select species using species drop-menu (3b). visualization space includes several tabs (3c), including interactive map, occurrence records table, results window, model component guidance text windows, tab saving outputs current session. stage analysis, results exist, data yet table, can view Component Guidance Module Guidance text now. text written developers prepare users component module theoretically (use tools) methodologically (tools ). guidance text also references scientific papers literature detailed reading. Please get habit consulting undertaking analyses—discussing peers—-give solid foundation moving forward. next tab visualization space Save. point along workflow, selecting “Save session” within tab save progress .rds file. file can loaded back wallace resume analysis. point vignette need pause, jump Save & Load Session learn save load Wallace session. tab also able download save results. session code, metadata, package citations can downloaded within Component: Reproduce. Now let’s begin analysis. ’ll modeling ranges two mammal species genus Bassaricyon, members family Procyonidae includes raccoons. Bassaricyon neblina, olinguito, found tropical montane areas western Colombia Ecuador South America. olinguito gained species status 2013 identified existing museum specimens currently species concern listed “Near Threatened” IUCN (Helgen et al. 2020). Bassaricyon alleni, eastern lowland olingo, relative olinguito broader range throughout northern South America; currently listed “Least Concern” IUCN (Helgen et al. 2016).","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"obtain-occurrence-data","dir":"Articles","previous_headings":"","what":"Obtain Occurrence Data","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Make sure first component (Obtain Occurrence Data) click read component guidance text. three modules available obtaining occurrence data: Query Database (Present), Query Database (Paleo), User-Specified. Choose module click module guidance text. Notice module guidance text changes select among three modules. Read get better understanding occurrence data typically obtained wallace implements .  Note: 01 September 2023, Module: Query Database [Paleo] temporarily unavailable. Let’s proceed get occurrence data. ’ll using present occurrences (opposed deep past via fossil data, etc.) therefore use Module: Query Database (Present). selection databases choose , well option return occurrences contain information coordinate uncertainty (can useful filter later). GBIF User ID, checking “Include Data Source” box allow log username password download DOI dataset. order work, need install R-package occCite prior running Wallace. Since occCite suggested package, install automatically like package dependencies. Choose GBIF (Global Biodiversity Information Facility—one largest storehouses biodiversity data), keep uncertainty unchecked, type Bassaricyon neblina scientific name box, set maximum number occurrences 200, click Query Database. download complete, log window contain information analysis performed. search return least 58 records (numbers recorded time writing), accounting records without coordinate information (latitude, longitude) removing duplicate records, least 43 remain. species relatively records, setting maximum 200 sufficient, modeling data-rich species, 200 may enough adequately sampling known range, maximum can increased. **Numbers may different records added GBIF.  Now click “Occurrences” tab view information records. developers chose fields displayed based general relevance studies species ranges. Note can download full table fields.  Click “Save” tab. first save box allows download session. available components modules (See Save & Load Session section details). download options Save Session box change depending component selected. , can get .csv file records just acquired. first option download original database fields every downloaded record (filtering). second option downloads current table. third option, “Download data”, unavailable point, change include second species. Note Chrome users: find map loading incorrectly downloading object, specifically corner tile loads rest map gray, closing download bar bottom page reset map fix problem.  major improvement Wallace v2.0 previous versions ability consider multiple species (separately) session. Let’s add another species model. Aside GBIF, can query Vertnet (vertebrate data) newly added BIEN (botantical data) species occurrence records. second module Query Database (Paleo), can query PaleobioDB databases fossil records selecting time interval species. Specific packages may downloaded prior loading Wallace use (e.g., BIEN paleobioDB). occurrence data, can import using third module, User-specified. occurrence data file must .csv columns “scientific_name”, “longitude”, “latitude”, explicitly named order. may columns, must first three. also option specify delimiter separator file. ’ll continue GBIF occurrence data. Search database Bassaricyon alleni (eastern lowland olingo), keeping max set 200. return least 81 records cleaning come least 42 records. might noticed log window updated, map remains . map change automatically, Bassaricyon neblina still selected Species menu. Toggle species show map Bassarricyon alleni.  Click back “Save” tab. Notice third option now available.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"obtain-environmental-data","dir":"Articles","previous_headings":"","what":"Obtain Environmental Data","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Next, need obtain environmental variables analysis. values variables extracted occurrence records, information provided model. data raster form, simply means large grid grid cell specifies value. Rasters can displayed colored grids maps (’ll see later). Click component Env Data. first module, WorldClim Bioclims, lets download bioclimatic variables WorldClim, global climate database interpolated climate surfaces derived weather station data multiple resolutions. interpolation better areas weather stations (especially developed countries), uncertainty exists areas fewer stations. bioclim variables summaries temperature precipitation proposed general biological significance. option specify subset 19 total variables use analysis. second module, ecoClimate, module included v2 includes paleoclimate reconstructions. accesses climatic layers PMIP3 – CMIP5 projects ecoClimate. Users can select Atmospheric Oceanic General Circulation Models choose temporal scenario use. ecoClimate layers resolution 0.5 degrees, whereas WorldClim allows resolution options 30 arcsec, 2.5 arcmin, 5 arcmin, 10 arcmin. third module, User-specified, uploading rasters Wallace. can continuous, numerical, categorical variables provide model. ’ll using WorldClim. first time use Wallace, data downloaded temporary folder hard drive; , simply loaded local directory (quicker downloading web). also option save memory faster processing–saves data temporarily RasterBrick RAM Wallace access. Finer resolution rasters take longer download. finest resolution data (30 arcsec) served large global tiles downloading R raster package (wallace uses) single tile corresponds map center downloaded. Set resolution 30 arcsec latitude longitude map center given. visualize well tile cover occurrence points, click “30 arcsec tile” box bottom left corner map. points outside tile excluded; may need zoom see fully.  Although download (big) 30 arcsec global raster WorldClim website load Wallace (preferably cropping GIS software R), instead choose 2.5 arcmin bioclimatic variable resolution Wallace serves global extent cover occurrence points, keep 19 bioclimatic variables checked. Note selections made performed species selected Species Menu box, unless “Batch” box checked. “Batch” button perform analysis ’ve set module species uploaded. ’ll notice option many modules. want perform individualized analyses species (case, different environmental variables), leave “Batch” unchecked. Note: batch option available 30 arcsec resolution since different tiles may need accessed. Check Batch Load Env Data. Notice progress bar bottom-right corner.  rasters loaded, “Results” tab display summary information (e.g., resolution, extent, cell number, etc.). addition downloading rasters, Wallace also remove occurrence points environmental values (.e., points overlap grid cells data rasters).  can download environmental variables within Download Data section “Save” tab.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"process-occurrence-data","dir":"Articles","previous_headings":"","what":"Process Occurrence Data","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"next component, Process Occs, gives access data-cleaning tools. data retrieved GBIF raw, almost always erroneous points. basic knowledge species’ range can help us remove obvious errors. databases like GBIF accumulate lots data various sources, inevitably dubious localities. example, coordinates might specify museum location instead associated specimen, latitude longitude might inverted. order eliminate obviously erroneous records, select points want keep analysis module Select Occurrences Map. Alternatively, can also remove specific occurrences ID module Remove Occurrences ID. Even removing problematic points, left may clustered due sampling bias. often leads artifactually inflated spatial autocorrelation, can bias environmental signal occurrence data model attempt fit. example, might clustering points near cities data mostly citizen scientists live near . , points can cluster around roads field biologists took data either making observations driving gained access sites . last module, Spatial thin help reduce effects sampling bias. Unlike components, Process Occs modules exclusive, can used order. Make sure Bassaricyon alleni species menu. practice using first two modules species. first module, use polygon-drawing tool select occurrences. polygon drawing tool useful draw extents seen modules later well. Click polygon icon map toolbar.  opens drawing tool. Click begin drawing—click connects last line. Draw shape around South America, omitting record Bolivia. make mistake drawing, can click “Delete last point” “Cancel” start . finish drawing, click first point made, click “Finish” drawing tool. finalizes shape use analysis. Now click “Select Occurrences” see point Bolivia disappear. remove blue shaded polygon, click trashcan icon map toolbar hit “Clear ”. displeased made error, red “Reset” button module interface revert back original points. Since arbitrarily removed record Bolivia, click reset return original dataset.  now remove , time using second module, Remove Occurrences ID. pointer, click record Bolivia. Information record pop , starting OccID. case OccID #18 (may different number ). information attribute table available. example, record information (NA) institution code, state/province, basis. Since know OccID number, can find full information associated Occurrences tab. Click find record. can see preserved specimen Museum Southwestern Biology (MSB). Go back map. Enter “18” ID removed “Remove Occurrence”. see point disappear . Click reset get back .  Next, click module Spatial Thin. lets attempt reduce effects spatial sampling bias running thinning function points filter less defined distance one another. use “10 km” example thin species separately using “Batch” option .  now left 35 points Bassaricyon alleni 21 Bassaricyon neblina (numbers may different). can zoom see function . Red points retained blue ones removed. Download processed occurrence datasets .csv file clicking button “Save” tab. Reminder: data downloaded species currently species menu.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"process-environmental-data","dir":"Articles","previous_headings":"","what":"Process Environmental Data","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Now need choose study extent modeling. define region “background” points drawn model fitting. Background points meant sample environments total area available study species. Methods like Maxent known presence-background techniques compare predictor variable values background points occurrence points (opposed presence-absence techniques, require absence data). making decisions study extent, want avoid areas species historically unable move —example, regions beyond barrier like mountain range large river species cross. Including areas may send false signal model areas environmentally suitable. Like every step analysis, please see relevant guidance text details. can explore different options delineating study extent . module two steps: 1) choosing shape background extent, 2) sampling background points. begin, go module Select Study Region. “Step 1”, try different options see one draws background shape. Try increasing decreasing buffer see shape affected. Now set species B. neblina use Select study region minimum convex polygon 0.7° buffer distance. switch B. alleni use point buffers 0.7° buffer.  Alternatively, can draw polygon (using polygon drawing tool tested Component: Process occs). file specifying background extent, can upload User-specified Study Region module. module can accept shapefile (must include .shp, .shx, .dbf files) .csv file polygon vertex coordinates field order: longitude, latitude. Note polygon draw shape upload needs contain occurrence points. Next, complete “Step 2”, clips rasters study extent samples background points. Set number background points 10,000 (larger samples can appropriate larger extents finer resolution; see component guidance text), check “Batch”, click “Sample” button.  may find requesting 10,000 background points exceeds number grid cells background extent. available number points given log window, amount can used instead 10,000. .zip file clipped rasters (e.g., environmental data clipped extent background just created) available download “Save” tab. Make sure toggle species download file one.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"characterize-environmental-space","dir":"Articles","previous_headings":"","what":"Characterize Environmental Space","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Component: Characterize Environmental Space contains multi-species analyses optional. Unlike components let perform modules order, modules within Characterize Environmental Space sequential thus need performed consecutively (.e., can’t get Occurrence Density Grid without first performing Environmental Ordination). begin Module: Environmental Ordination analysis, need select two species work . two species uploaded, select two species menu drop-. Since two uploaded, click species menu box select second species. names appear box simultaneously—functionality currently available Characterize Environmental Space component.  Module: Environmental Ordination conducting ordination approach called Principal Component Analysis (PCA), maximizes variation contained predictor variables fewer ones. perform PCA, select variables available species checking/unchecking bioclimatic variables. Choose “Occurrences ” “Occurrences & Background” plot selection set x- y-axis components. PCA Scatter Plot appears Results tab.  can also view PCA correlation circle, PCA scree plot, PCA results summary. information statistics evaluate results, consult module guidance text.    Next, run Occurrence Density Grid. calculates plots part environmental space occupied densely species availability environmental conditions present within background extent. Darker areas represent higher occurrence density. Areas within solid lines represent environmental conditions available background extent, areas within dashed lines represent 50% frequent ones  calculate Niche overlap…  niche overlap quantification based occurrence background densities available environmental space estimated Module: Occurrence Density Grid. overlap quantified using Schoener’s D metric. environmental conditions covered niche species 1 shown blue, environmental conditions covered niche species 2 shown red, environmental conditions covered species, niche overlap, shown purple. Similarity Test, observed overlap (red line) higher 95% simulated overlaps (p-value < 0.05), can consider two species similar random, see . , consult module guidance texts help understand analyses help evaluating results. Download PCA results (.zip), density grid (.png), overlap plot (.png) “Save” tab.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"partition-occurrences","dir":"Articles","previous_headings":"","what":"Partition Occurrences","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"built distribution models yet, , make decisions partition data evaluation. order determine strength model’s predictive ability, theoretically need independent data test . independent datasets exist, one solution partition data subsets assume independent , sequentially build model subsets one evaluate performance model left-subset. known k-fold cross-validation (k total number subsets, ‘folds’), quite prevalent statistics, especially fields machine learning data science. sequential model-building exercise complete, Wallace averages model performance statistics itinerations builds model using data. whole literature best partition data evaluating models. One option simply partition randomly, spatial data run risk groups spatially independent . jackknife method (“leave-one-”) recommended species small sample sizes previously used modeling Bassaricyon neblina (Gerstner et al. 2018) may long computational times. Another option partition spatially—example, drawing lines map divide data. Spatial partitioning k-fold cross-validation forces model predict regions distant used train model (note Wallace also excludes background points regions corresponding withheld partition). Bassaricyon alleni, environmental conditions Colombia Ecuador may differ considerably conditions Bolivia. model accurate predictions average withheld spatially partitioned data, likely good transferability, means can transfer well new values predictor variables (distant areas usually environmentally different close ones). always, please refer guidance text details types partitioning offered Wallace.  ’s example jacknife (k = n), assigns point partition group, number bins equals number occurrences.  Now example spatial blocking, assigns point one four spatially separate partition groups.  ’ll use last method now faster computation, recommended review guidance text literature––talk peers!—make informed decision partition methods. Partition species using Module: Spatial Partition Block (k = 4) option.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"save-load-session","dir":"Articles","previous_headings":"","what":"Save & Load Session","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"go Modeling, let’s explore one great features Wallace v2, ability stop save progress continued later. want skip step (risk losing everything error occurs except data results downloaded), can move Model. Click ‘Save Session’ within “Save” tab. tab available Components. save progress RDS (.rds) file, file type used save R objects. saved, can hit stop sign upper right corner close browser window exit R/RStudio. Note: Wallace session closed saving results /session, work lost. ready resume, load Wallace . Intro component, use “Load Prior Session” tab import .rds session file.  box pop – looks like Wallace warning messages, case indicating session loaded. may necessary reload variables, using Occ Data Env Data previously carried . can now carry previous analysis.","code":"library(wallace) run_wallace()"},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"model","dir":"Articles","previous_headings":"","what":"Model","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"now ready build distribution model. Wallace v2.0 provides two algorithm options; Maxent BIOCLIM. vignette, ’ll use Maxent, machine learning method can fit range functions patterns data, simple (.e., straight lines) complex (.e., curvy lines can change direction; can get jagged complexity controlled). details Maxent, please consult Maxent website abnd guidance text. Maxent available run maxnet package Java maxent.jar option. interest time avoid Java-related issues, let’s choose following modeling options: Choose maxnet Select L, LQ, H feature classes. shapes can fit data: L = Linear, e.g. temp + precip Q = Quadratic, e.g. temp^2 + precip^2 H = Hinge, e.g. piecewise linear functions, like splines (think series lines connected together) Select regularization multipliers 0.5 4 step value 0.5. Regularization penalty model complexity. Higher values = smoother, less complex models. Basically, predictor variable coefficients shrunk progressively reach 0, drop model. variables greatest predictive contribution remain model. Keep “” selected categorical variables. option indicate predictor variables categorical, like soil vegetation classes. loaded categorical variables, check indicate rasters categorical. Set Clamping? “TRUE”. clamp model predictions (.e., keep environmental values extreme present background data within bounds background data). set Parallel? “TRUE”, can indicate number cores parallel processing. construct model Bassaricyon neblina, note Batch feature can checked run selections species uploaded. Make sure Bassaricyon neblina selected species menu Batch unchecked hitting Run. 3 feature class combinations (L, LQ, H) x 8 regularization multipliers (0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4) = 24 candidate models. hinge feature class (H) enable substantial complexity response, takes bit longer run simpler models.  results appear two tables evaluation statistics, allowing comparison different models just built. first table shows statistics full model partition averages. 24 rows: one feature class / regularization multiplier combinations. first table, statistics models built 4 occurrence data partition groups (one withheld iteration) averaged. second table, partition group statistics averaged first table shown, thus contains 96 rows (4 folds 24 models).  choose “best” model? mountain literature , really single answer datasets. model performance statistics AUC (Area Curve), (Omission Rate), CBI (Continuous Boyce Index) calculated averaged across partitions, AICc (corrected Akaike information criterion) instead calculated using model prediction full background extent (thinned occurrence points). Although AICc incorporate cross-validation results, explicitly penalize model complexity—hence, models parameters tend worse AICc score. ’s really user decide, guidance text references help learn . evaluation metrics table can sorted. First, prioritize models omitted occurrence points predicted area cross-validation. Sort results table ascending order “.10p.avg”, average omission rate applying 10-percentile training presence threshold (withheld) validation data (see guidance text details). prefer model omit many withheld occurrences makes range prediction, prioritizing low values “.10p.avg”.  Let’s also look average validation AUC values (higher values better).  AICc (lower values better)… example, chosen model lowest AICc score, ended LQ_2. Note: values may different. Next Evaluation results, can access Maxent Lambdas file (describe weights feature classes variable) models (changing candidate model drop-box changes output).  Use “Save” tab download evaluation tables.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"visualize","dir":"Articles","previous_headings":"","what":"Visualize","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"four modules Visualization. ’ll save first, Map Prediction, last. ’ll skip fourth module, BIOCLIM Envelope Plot, since used Maxent instead BIOCLIM. module Maxent Evaluation Plots, enables users evaluate performance statistics across models. Graphs appear Results tab. , see feature class regularization multiplier selections affect average validation AUC values.  also examine response curves, show predicted suitability (y-axis) changes based different values variable (x-axis). curves, marginal response one variable shown variables held mean values. want see results particular model, select using dropdown menu species box. response curve model LQ_2 mean precipitation driest month (bio14).  course, can also visualize model predictions map. Predictions suitability can continuous (range values low high) binary (thresholded two values: 0, unsuitable 1, suitable). visualizing predictions made “cloglog” transformation, converts raw Maxent output (relative occurrence rate) probabilistic scale 0 1 approximate probability presence (given key assumptions). Please see module guidance information Maxent model output scalings thresholding rules. mapped prediction model LQ_2, threshold, cloglog output.  mapped prediction model, time threshold set 10-percentile training presence value (occurrence suitability value used calculate omission rates help us select models). occurrence points fall outside blue regions represent suitable areas Bassaricyon neblina. 10-percentile training presence value, represents lowest predicted suitability, value greater 10% lowest, expected omission 0.1 (.e., 10% omitted).  Try mapping prediction threshold set less strict ‘minimum training presence’ notice difference. can also threshold quantile training presences omitted. Try setting quantile different values notice change prediction.  may noticed batch option available component. Users need select optimal models relative species, therefore predictions can mapped individually. can download Maxent BIOCLIM evaluation plots, response curves, map predictions ”Save” tab. Note download current plot. instance, wanted download continuous prediction, ’ll plot , since last plotted threshold map.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"model-transfer","dir":"Articles","previous_headings":"","what":"Model Transfer","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Next, can transfer model new locations past/future climate scenarios. “Transferring” simply means making predictions selected model using new environmental values (.e., used model building) getting suitability predictions new variable ranges. Note: can also referred “projecting” model, confuse GIS term typically used changing coordinate reference system map. potentially confusing cross-validation step used also transferred new conditions. spatial cross-validation step iteratively forced models predict new areas (thus likely new environments), evaluation statistics summarized ability particular model settings result models transfer accurately. However, final model used make predictions visualizing built data (exclude partition groups geographic areas correspond ). variable ranges associated background points dataset used model-building process. now taking model transferring variable ranges might used model-building (.e., represented training data). Thus, environmental values different places times completely new model, even potentially different may uncertain accuracy prediction. although modeled variable responses remain , predictions variable values extreme training data can result unexpected suitability predictions. reason, clamping often used constrain model transfers (see ). Please see guidance text orientation regarding “non-analog conditions”. Let’s begin Transfer New Extent see Peru suitable areas olinguito. Step 1, use polygon drawing tool draw around Peru 1-degree buffer hit “Create”. Alternatively, can upload shapefile CSV file records vertices fields “longitude, latitude” use study region.  Step 2, choose threshold make binary prediction threshold continuous one Transfer. , see low suitability Peru olinguito. Note: remove outline polygon prediction, click Trashcan icon “Clear ”. initially used WorldClim ecoClimate environmental variables, can use Transfer New Time. Step 1, three options choose study region; draw polygon, use extent, upload polygon. Step 2, choice WorldClim Ecoclimate source variables. choice depends initial selection environmental variables Component: Env Data. WorldClim, select time period, global circulation model, representative concentration pathway (RCP), threshold. Notice also several global circulation models (GCMs) choose —represent different efforts model future climate. GCMs raster data RCP. See module guidance text RCPs GCMs. Note: databases phased RCPs Shared Socioeconomic Pathways (SSPs), advised literature might use SSP terminology instead RCP. ecoClimate, can select Atmospheric Oceanic General Circulation Model (AOGCM), temporal scenario, threshold. third module, Transfer User Environments, gives users option project model uploaded environmental data. first step (select study region), second step users can upload single-format rasters (.tif, .asc) use new data model projection. rasters must extent resolution (cell size), names files must correspond environmental variables used modeling. assist, message “files must named : …” indicating correct file names use. skip Transfer New Time Transfer User Environments move Calculate Environmental Similarity. transferring model, may areas within new ranges values high uncertainty different values used model-building. order visualize areas , can use fourth module, Calculate Environmental Similarity, plot MESS map. MESS stands (M)ultivariate (E)nvironmental (S)imilarity (S)urface, map shows continuous scale environmental difference training data used model-building, increasing positive values mean similar (blue), decreasing negative values mean different (red); please see module guidance text details. can see future climate values high elevation similar training data, whereas lower elevations towards coast different places. may therefore interpret predicted suitability areas higher uncertainty.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"reproduce","dir":"Articles","previous_headings":"","what":"Reproduce","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"major advantage Wallace reproducibility. first option within component downloading code run analysis. using Wallace, R code running background, evident messages printed R console. option allows download simplified version code form condensed annotated R script. script serves documentation analysis can shared. can also run reproduce analysis, edited change aspects . script can downloaded several file types, R Markdown format (.Rmd), convenient format combining R code notation text, can run directly R. .pdf downloads, software TeX necessary installed system. Please see text page details. download script, select Rmd click Download. Now, .Rmd file contains complete analysis. Modules Wallace indicated headers denoted ###.  might want open new R window try running code. Remember later sections code may depend things done earlier, may run skip ahead. Note Env Space analysis appear end file. Also remember close Wallace session ’ll lose progress web browser (.Rmd unaffected). use RStudio, can open Rmd click knit compile workflow shareable html document. can also download Metadata. Wallace generates provides variety metadata objects facilitate documentation reproducibility recording user’s methodological decisions (e.g., parameter settings) stores Range Model Metadata Standards object. download zip contain CSV file (.csv) species.   last module available Reproduce component Reference packages. , can download citations R-packages used analysis. give people credit underlying packages make Wallace possible (document analyses properly), critical cite packages version number. Remember, Wallace modular aims facilitate access use many R packages produced biogeography research community. Please promote citing packages…think making one adding future version Wallace someday!","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"currently working various partners exciting additions, stay tuned future versions Wallace. , can always work R session modifying .Rmd building analysis. Thank following Wallace v2 vignette. hope learned updated application, features, modeling species distributions niches general. hate repetitive, highly encourage read guidance text, follow recommended publications, hopefully let lead relevant publications can inform . Also, remember discuss topics peers. encourage join Wallace Google Group–’d love hear thoughts, opinions, suggestions make Wallace better users. Members can post community updated future announcements. find bug software, can reported GitHub issues page using bug reporting form.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Wallace recognized finalist 2015 Ebbe Nielsen Challenge Global Biodiversity Information Facility (GBIF), received prize funding. material based upon work supported National Science Foundation Grant Numbers DBI-1661510 (RPA; Robert P. Anderson), DBI-1650241 (RPA), DEB-1119915 (RPA), DEB-1046328 (MEA; Matthew E. Aiello-Lammens), DBI-1401312 (RM; Robert Muscarella), funding National Aeronautics Space Administration grant 80NSSC18K0406 (MEB; Mary E. Blair). opinions, findings, conclusions recommendations expressed material author(s) necessarily reflect views NSF NASA.","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"resources","dir":"Articles","previous_headings":"","what":"Resources","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Wallace website https://wallaceecomod.github.io/ ENM2020 W19T2 Online open access Ecological Niche Modeling Course .T. Peterson, summary modeling, includes Walkthrough Wallace V1 https://www.youtube.com/watch?v=kWNyNd2X1uo&t=1226s Learn Olingos Olinguito https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3760134/ Gerstner et al. (2018). Revised distributional estimates recently discovered olinguito (Bassaricyon neblina), comments natural taxonomic history. https://doi.org/10.1093/jmammal/gyy012","code":""},{"path":"http://wallaceecomod.github.io/wallace/articles/tutorial-v2.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Wallace Ecological Modeling Application v2.0 Vignette","text":"Phillips, S.J., Anderson, R.P., Dudík, M., Schapire, R.E., Blair, M.E. (2017). Opening black box: open-source release Maxent. Ecography, 40(7), 887-893. https://doi.org/10.1111/ecog.03049 Helgen et al Helgen, K., Kays, R., Pinto, C., Schipper, J. & González-Maya, J.F. (2020). Bassaricyon neblina (amended version 2016 assessment). IUCN Red List Threatened Species 2020: e.T48637280A166523067. https://www.iucnredlist.org/species/48637280/166523067 Helgen, K., Kays, R., Pinto, C. & Schipper, J. (2016). Bassaricyon alleni. IUCN Red List Threatened Species 2016: e.T48637566A45215534. https://www.iucnredlist.org/species/48637566/45215534 Hijmans, R.J., Cameron, S.E., Parra, J.L., Jones, P.G., Jarvis, . (2005). high resolution interpolated climate surfaces global land areas. International Journal Climatology, 25(15), 1965-1978. https://doi.org/10.1002/joc.1276 Lima-Ribeiro, M.S., Varela, S., González-Hernández, J., Oliveira, G., Diniz-Filho, J..F., Terribile, L.C. (2015). ecoClimate: database climate data multiple models past, present, future Macroecologists Biogeographers. Biodiversity Informatics 10, 1-21. https://www.ecoclimate.org/ GBIF.org (2022). GBIF Home Page. Available : https://www.gbif.org [19 April 2022]. Aiello-Lammens M.E., Boria R.., Radosavljevic ., Vilela B., Anderson R.P. (2015). spThin: R package spatial thinning species occurrence records use ecological niche models. Ecography, 38(5), 541-545. https://doi.org/10.1111/ecog.01132 Gerstner, B.E., Kass, J.M., Kays, R., Helgen, K.M., Anderson, R.P. (2018). Revised distributional estimates recently discovered olinguito (Bassaricyon neblina), comments natural taxonomic history. Journal Mammalogy, 99(2,3), 321-332. https://doi.org/10.1093/jmammal/gyy012 Kass, J., Muscarella, R., Galante, P.J., Bohl, C.L., Pinilla-Buitrago, G.E., Boria, R.., Soley-Guardia, M., Anderson, R.P. (2021). ENMeval 2.0: Redesigned customizable reproducible modeling species’ niches distributions. Methods Ecology Evolution, 12(9), 1602-1608. https://doi.org/10.1111/2041-210X.13628 Merow, C., Smith, M.J., Silander, J.. (2013). practical guide MaxEnt modeling species’ distributions: , inputs settings matter. Ecography, 36(10), 1058-1069. https://doi.org/10.1111/j.1600-0587.2013.07872.x","code":""},{"path":"http://wallaceecomod.github.io/wallace/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jamie M. Kass. Author. Gonzalo E. Pinilla-Buitrago. Author. Andrea Paz. Author. Bethany . Johnson. Author. Valentina Grisales-Betancur. Author. Dean Attali. Author. Matthew E. Aiello-Lammens. Author. Cory Merow. Author. Mary E. Blair. Author, maintainer. Robert P. Anderson. Author. Sarah . Meenan. Contributor. Olivier Broennimann. Contributor. Peter J. Galante. Contributor. Brian S. Maitner. Contributor. Hannah L. Owens. Contributor. Sara Varela. Contributor. Bruno Vilela. Contributor. Robert Muscarella. Contributor.","code":""},{"path":"http://wallaceecomod.github.io/wallace/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kass, J.M., Pinilla-Buitrago, G.E., Paz, ., Johnson, B.., Grisales-Betancur, V., Meenan, S.., Attali, D., Broennimann, O., Galante, P.J., Maitner, B.S., Owens, H., Varela, S., Aiello-Lammens, Merow, C., M.E., Blair, M.E. & Anderson, R.P. (2023). wallace 2: shiny app modeling species niches distributions redesigned facilitate expansion via module contributions. Ecography, e06547. <https://doi.org/10.1111/ecog.06547>","code":"@Article{,   title = {wallace 2: a shiny app for modeling species niches and distributions redesigned to facilitate expansion via module contributions},   author = {{J. M. Kass} and {G. E. Pinilla-Buitrago} and {A. Paz} and {B. A. Johnson} and {V. Grisales-Betancur} and {S. I. Meenan} and {D. Attali} and {O. Broennimann} and {P. J. Galante} and {B. S. Maitner} and {H. L. Owens} and {S. Varela} and {M. E. Aiello-Lammens} and {C. Merow} and {M. E. Blair} and {R. P. Anderson}},   journal = {Ecography},   year = {2023},   volume = {2023(3)},   number = {e06547},   pages = {1-9},   url = {https://onlinelibrary.wiley.com/doi/10.1111/ecog.06547}, }"},{"path":"http://wallaceecomod.github.io/wallace/index.html","id":"wallace-v211","dir":"","previous_headings":"","what":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","title":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","text":"Wallace modular platform reproducible modeling species niches distributions, written R. application guides users complete analysis, acquisition data visualizing model predictions interactive map, thus bundling complex workflows single, streamlined interface. Install Wallace via CRAN run application following R code. Development versions can downloaded Github following R code.","code":"install.packages(\"wallace\") library(wallace) run_wallace() install.packages(\"devtools\") devtools::install_github(\"wallaceEcoMod/wallace\") library(wallace) run_wallace()"},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/index.html","id":"update-r-and-rstudio-versions","dir":"","previous_headings":"Before using Wallace","what":"Update R and RStudio versions","title":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","text":"Please make sure installed latest versions R (Mac OS, Windows) RStudio (Mac OS / Windows: choose free version).","code":""},{"path":"http://wallaceecomod.github.io/wallace/index.html","id":"how-to-run-maxent-with-maxentjar","dir":"","previous_headings":"Before using Wallace","what":"How to run Maxent with maxent.jar","title":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","text":"Wallace v2.1.1 includes two options run Maxent models: maxnet maxent.jar. former, R implementation fits model package glmnet, now default require package rJava (see Phillips et al. 2017). latter, Java implementation, runs maxent() function package dismo. function requires user place maxent.jar file /java directory dismo package root folder. can download Maxent , locate maxent.jar, Maxent program , downloaded folder. can find directory path dismo/java running system.file('java', package=\"dismo\") R console. Simply copy maxent.jar paste folder. try run Maxent Wallace without file place, get warning message log window Maxent run.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/index.html","id":"rjava-and-java-versions-just-for-maxentjar-option","dir":"","previous_headings":"Potential Issues","what":"rJava and Java versions (just for maxent.jar option)","title":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","text":"Wallace uses rJava package run program maxent.jar. package rJava load properly version Java computer (32-bit 64-bit) match R installation using. example, running 64-bit R, please make sure Java also 64-bit, else rJava unable load. Install latest version Java , 64-bit Windows users make sure select “Windows Offline (64-bit)”. currently 64-bit download Mac OS. Mac users running OSX Yosemite problems, see StackOverflow post tips get rJava working . need install Java first time, can follow instructions Mac Windows.","code":""},{"path":"http://wallaceecomod.github.io/wallace/index.html","id":"problems-viewing-tables","dir":"","previous_headings":"Potential Issues","what":"Problems viewing tables","title":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","text":"reason unable view tables Wallace, please install (force necessary) development version htmlwidgets running code: devtools::install_github(\"ramnathv/htmlwidgets\"). able view tables now.","code":""},{"path":"http://wallaceecomod.github.io/wallace/index.html","id":"windows-users-pdf-download-of-session-code","dir":"","previous_headings":"Potential Issues","what":"Windows Users: PDF download of session code","title":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","text":"PDF downloading session code working , please follow following instructions, taken : - Step 1: Download Install MiKTeX http://miktex.org/2.9/setup - Step 2: Run Sys.getenv(\"PATH\") R studio. command returns path Rstudio trying find pdflatex.exe. Windows (64-bit), return “C:Files.exe”. pdflatex.exe located location Rstudio gives error code 41. - Step 3: set path variable run: Sys.setenv(PATH=paste(Sys.getenv(\"PATH\"),\"C:/Program Files/MiKTeX 2.9/miktex/bin/x64/\",sep=\";\")).","code":""},{"path":"http://wallaceecomod.github.io/wallace/index.html","id":"windows-users-only-for-github-installation","dir":"","previous_headings":"Potential Issues","what":"Windows Users: Only for Github installation","title":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","text":"using Windows, please download install RTools installing devtools package. install RTools, please make sure add “C:” PATH variable (instructions ). Additionally, using devtools Windows machines, known bug sometimes results inability download package dependencies. happens , please install packages dependencies directly CRAN.","code":""},{"path":"http://wallaceecomod.github.io/wallace/index.html","id":"any-other-problems-with-install_github","dir":"","previous_headings":"Potential Issues","what":"Any other problems with install_github()","title":"A Modular Platform for Reproducible Modeling of Species Niches \n    and Distributions","text":"Although recommended way install CRAN, trying install Github version problems, follow steps. 1. Download zip file repository page. 2. Unzip open wallace.Rproj file RStudio. 3. right-hand pane, click Build, Install & Restart. 4. Type run_wallace() console press Enter.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/clearAll.html","id":null,"dir":"Reference","previous_headings":"","what":"clearAll — clearAll","title":"clearAll — clearAll","text":"internal use. Clean everything leaflet map.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/clearAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clearAll — clearAll","text":"","code":"clearAll(map)"},{"path":"http://wallaceecomod.github.io/wallace/reference/clearAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clearAll — clearAll","text":"map leaflet map","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/create_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Wallace module — create_module","title":"Create a Wallace module — create_module","text":"Create template new Wallace module.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/create_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Wallace module — create_module","text":"","code":"create_module(id, dir, map = FALSE, result = FALSE, rmd = FALSE, save = FALSE)"},{"path":"http://wallaceecomod.github.io/wallace/reference/create_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Wallace module — create_module","text":"id id module. dir directory new module created. map Whether module support modifying map. result Whether module support showing information Result tab. rmd Whether module add Rmd code Session Code download. save Whether module custom data save user saves current session.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/ecoClimate_getdata.html","id":null,"dir":"Reference","previous_headings":"","what":"ecoClimate_getdata — ecoClimate_getdata","title":"ecoClimate_getdata — ecoClimate_getdata","text":"download ecoClimate layers. info www.ecoclimate.org","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/ecoClimate_getdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ecoClimate_getdata — ecoClimate_getdata","text":"","code":"ecoClimate_getdata(AOGCM, Baseline, Scenario, logger)"},{"path":"http://wallaceecomod.github.io/wallace/reference/ecoClimate_getdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ecoClimate_getdata — ecoClimate_getdata","text":"AOGCM Select AOGCM. Options : \"CCSM\", \"CNRM\", \"MIROC\", \"COSMOS\", \"FGOALS\", \"GISS\", \"IPSL\", \"MRI\", \"MPI\" Baseline Select baseline climatic layers. Options : \"Pre-industrial\" (piControl-1760), \"Historical\" (1900-1949), \"Modern\" (1950-1999) Scenario Select temporal scenario. Options : \"LGM\" (21,000 years ago), \"Holo\" (6,000 years ago), \"Present\", \"Future 2.6\" (rcp 2.6), \"Future 4.5\" (rcp 4.5), \"Future 6\" (rcp 6), \"Future 8.5\" (rcp 8.5) logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/ecoClimate_getdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ecoClimate_getdata — ecoClimate_getdata","text":"","code":"if (FALSE) { CCSM_mod_present <- ecoclimate_getdata(\"CCSM\", \"Modern\", \"Present\") dev.new() plot(CCSM_mod_present) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/ecoClimate_select.html","id":null,"dir":"Reference","previous_headings":"","what":"ecoClimate_select — ecoClimate_select","title":"ecoClimate_select — ecoClimate_select","text":"select bioclimatic variables set extent want (crop raster stack study extent)","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/ecoClimate_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ecoClimate_select — ecoClimate_select","text":"","code":"ecoClimate_select(map_climate, Sels=c(1:19), extent=c(-180, 180, -90, 90))"},{"path":"http://wallaceecomod.github.io/wallace/reference/ecoClimate_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ecoClimate_select — ecoClimate_select","text":"map_climate raster stack variables Sels vector integer numbers. 1 bio1, 2 bio2, etc. e.g. Sels= c(1,12,6) selecting bio1, bio12 bio6 extent vector. xmin, xmax, ymin, ymax. e.g. c()","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/ecoClimate_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ecoClimate_select — ecoClimate_select","text":"","code":"if (FALSE) { CCSM_mod_present <- ecoclimate_getdata(\"CCSM\", \"Modern\", \"Present\") Europe_CCSM_m_p_bio1_12 <- ecoClimate_select(CCSM_mod_present, c(1, 12),                                              extent = c(-20, 80, 20, 80)) dev.new() plot(Europe_CCSM_m_p_bio1_12) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/ecospat.plot.nicheDEV.html","id":null,"dir":"Reference","previous_headings":"","what":"ecospat.plot.nicheDEV — ecospat.plot.nicheDEV","title":"ecospat.plot.nicheDEV — ecospat.plot.nicheDEV","text":"internal use. Plot occ density","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/ecospat.plot.nicheDEV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ecospat.plot.nicheDEV — ecospat.plot.nicheDEV","text":"","code":"ecospat.plot.nicheDEV(   z,   title = \"\",   name.axis1 = \"Axis 1\",   name.axis2 = \"Axis 2\",   cor = FALSE )"},{"path":"http://wallaceecomod.github.io/wallace/reference/ecospat.plot.nicheDEV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ecospat.plot.nicheDEV — ecospat.plot.nicheDEV","text":"z gridclim object species distribution created ecospat.grid.clim.dyn()/espace_occDens(). title title plot. name.axis1 label first axis. name.axis2 label second axis. cor Correct occurrence densities species prevalence environments range (TRUE = yes, FALSE = ).","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_ecoClimate.html","id":null,"dir":"Reference","previous_headings":"","what":"envs_ecoClimate Obtain ecoClimate variables — envs_ecoClimate","title":"envs_ecoClimate Obtain ecoClimate variables — envs_ecoClimate","text":"download ecoClimate variables. See www.ecoclimate.org.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_ecoClimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"envs_ecoClimate Obtain ecoClimate variables — envs_ecoClimate","text":"","code":"envs_ecoClimate(bcAOGCM, bcScenario, ecoClimSel, logger = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_ecoClimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"envs_ecoClimate Obtain ecoClimate variables — envs_ecoClimate","text":"bcAOGCM Name Atmospheric Oceanic Global Circulation Model. Options : \"CCSM\", \"CNRM\", \"MIROC\", \"FGOALS\", \"GISS\", \"IPSL\",\"MRI\", \"MPI\" bcScenario Select temporal scenario want download. Options : \"LGM\" (21,000 years ago), \"Holo\" (6,000 years ago), \"Present\", \"Future 2.6\" (rcp 2.6), \"Future 4.5\" (rcp 4.5), \"Future 6\" (rcp 6), \"Future 8.5\" (rcp 8.5) ecoClimSel Numeric vector list variables select. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_ecoClimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"envs_ecoClimate Obtain ecoClimate variables — envs_ecoClimate","text":"rasterStack selected variables","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_ecoClimate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"envs_ecoClimate Obtain ecoClimate variables — envs_ecoClimate","text":"function called module envs download ecoClimate   variables www.ecoclimate.org. variables downloaded   selected user bcSel resolution fixed 0.5 degrees.   function currently gets variables Dropbox process takes   significantly time datasets. returns rasterStack   selected variables.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_ecoClimate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"envs_ecoClimate Obtain ecoClimate variables — envs_ecoClimate","text":"Sara Varela <sara_varela@yahoo.com> Jamie M. Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_ecoClimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"envs_ecoClimate Obtain ecoClimate variables — envs_ecoClimate","text":"","code":"bcAOGCM <- \"CCSM\" bcScenario <- \"LGM\" ecoClimSel <- c(1,2,3) if (FALSE) { varsEcoClimate <- envs_ecoClimate(bcAOGCM, bcScenario, ecoClimSel) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_userEnvs.html","id":null,"dir":"Reference","previous_headings":"","what":"envs_userEnvs — envs_userEnvs","title":"envs_userEnvs — envs_userEnvs","text":"Load user provided rasters","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_userEnvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"envs_userEnvs — envs_userEnvs","text":"","code":"envs_userEnvs(rasPath, rasName, doBrick = FALSE, logger = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_userEnvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"envs_userEnvs — envs_userEnvs","text":"rasPath character. Path rasters, must full path including file name extension rasName character. Vector raster names assigned loaded rasters doBrick logical. Converts downloaded rasters brick faster processing logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_userEnvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"envs_userEnvs — envs_userEnvs","text":"rasterStack rasterBrick (doBrick = TRUE) user   provided rasters","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_userEnvs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"envs_userEnvs — envs_userEnvs","text":"function called module envs load user provided raster   variables use analyses. returns either rasterStack   rasterBrick loaded variables appropriate names analyses.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_userEnvs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"envs_userEnvs — envs_userEnvs","text":"Jamie Kass <jamie.m.kass@gmail.com > Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_userEnvs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"envs_userEnvs — envs_userEnvs","text":"","code":"if (FALSE) { pathRast <- list.files(system.file(\"extdata/wc\", package = \"wallace\"),                        pattern = \".tif$\", full.names = TRUE) nameRast <- list.files(system.file(\"extdata/wc\", package = \"wallace\"),                        pattern = \".tif$\", full.names = FALSE) userEnvs <- envs_userEnvs(rasPath = pathRast, rasName = nameRast) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_worldclim.html","id":null,"dir":"Reference","previous_headings":"","what":"envs_worldclim Obtain WorldClim variables — envs_worldclim","title":"envs_worldclim Obtain WorldClim variables — envs_worldclim","text":"download WorldClim variables. See www.worldclim.com.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_worldclim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"envs_worldclim Obtain WorldClim variables — envs_worldclim","text":"","code":"envs_worldclim(bcRes, bcSel, mapCntr, doBrick = FALSE, logger = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_worldclim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"envs_worldclim Obtain WorldClim variables — envs_worldclim","text":"bcRes numeric. Resolution climatic layers. Currently available resolutions 0.5, 2.5 10. bcSel character. Vector bionames selected. mapCntr numeric. Vector longitude latitude tile. Required bcRes 0.5, resolutions world data downloaded. doBrick logical. Converts downloaded rasters brick faster processing. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_worldclim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"envs_worldclim Obtain WorldClim variables — envs_worldclim","text":"rasterStack rasterBrick (doBrick=TRUE) downloaded  worldclim rasters requested resolution.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_worldclim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"envs_worldclim Obtain WorldClim variables — envs_worldclim","text":"function called module envs download   WorldClim variables www.worldclim.com. variables downloaded   selected user bcSel resolution bcRes.   returns either rasterStack rasterBrick selected variables   appropriate names analyses.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_worldclim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"envs_worldclim Obtain WorldClim variables — envs_worldclim","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/envs_worldclim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"envs_worldclim Obtain WorldClim variables — envs_worldclim","text":"","code":"if (FALSE) { bcRes <- 10 # (10 arcmin) envar <- c('bio05', 'bio06', 'bio13', 'bio14') arcmin10 <- envs_worldclim(bcRes, bcSel = envar) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_nicheOv.html","id":null,"dir":"Reference","previous_headings":"","what":"espace_nicheOv Niche Overlap — espace_nicheOv","title":"espace_nicheOv Niche Overlap — espace_nicheOv","text":"Function evaluates niche overlap two species   occurrence density grid computed","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_nicheOv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"espace_nicheOv Niche Overlap — espace_nicheOv","text":"","code":"espace_nicheOv(   z1,   z2,   iter = 100,   equivalency = FALSE,   similarity = TRUE,   logger = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_nicheOv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"espace_nicheOv Niche Overlap — espace_nicheOv","text":"z1 ecospat niche object species 1 espace_occDens. z2 ecospat niche object species 2 espace_occDens. iter numeric. Number iterations. equivalency logical. Whether run equivalency test. Default FALSE. similarity logical. Whether run similarity test. Default TRUE. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_nicheOv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"espace_nicheOv Niche Overlap — espace_nicheOv","text":"list 4 elements set TRUE. Elements overlap   (Schoener's D), USE (ecospat.niche.dyn.index), equiv simil.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_nicheOv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"espace_nicheOv Niche Overlap — espace_nicheOv","text":"niche overlap quantification based occurrence densities   densities environmental conditions available background extent   estimated module Occurrence Density Grid. function   computes 4 different things; Schoener's D, unfilling, stability,   expansion indices (Guisan et al. 2014 TREE), tests niche   equivalency niche similarity.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_nicheOv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"espace_nicheOv Niche Overlap — espace_nicheOv","text":"Jamie Kass <jamie.m.kass@gmail.com> Olivier Broennimann <olivier.broennimann@unil.ch>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_nicheOv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"espace_nicheOv Niche Overlap — espace_nicheOv","text":"","code":"if (FALSE) { sp.name1 <- \"Bassaricyon_alleni\" sp.name2 <- \"Bassaricyon_neblina\" envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE))  occs.z1 <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                     package = \"wallace\")) occs.z2 <- read.csv(system.file(\"extdata/Bassaricyon_neblina.csv\",                     package = \"wallace\"))  bgPts.z1 <- read.csv(system.file(\"extdata/Bassaricyon_alleni_bgPoints.csv\",                      package = \"wallace\")) bgPts.z2 <- read.csv(system.file(\"extdata/Bassaricyon_neblina_bgPoints.csv\",                      package = \"wallace\"))  occsExt.z1 <- raster::extract(envs, occs.z1[, c(\"longitude\", \"latitude\")]) occsExt.z2 <- raster::extract(envs, occs.z2[, c(\"longitude\", \"latitude\")]) bgExt.z1 <- raster::extract(envs, bgPts.z1[, c(\"longitude\", \"latitude\")]) bgExt.z2 <- raster::extract(envs, bgPts.z2[, c(\"longitude\", \"latitude\")]) pcaZ <- espace_pca(sp.name1, sp.name2,                    occsExt.z1, occsExt.z2,                    bgExt.z1, bgExt.z2) occDens <- espace_occDens(sp.name1, sp.name2, pcaZ) nicheOv <- espace_nicheOv(z1 = occDens[[sp.name1]],                           z2 = occDens[[sp.name2]],                           iter = 100, equivalency = TRUE,                           similarity = TRUE) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_occDens.html","id":null,"dir":"Reference","previous_headings":"","what":"Occurrence density grid — espace_occDens","title":"Occurrence density grid — espace_occDens","text":"calculates part environmental space densely   populated species & availability environmental conditions   background","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_occDens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Occurrence density grid — espace_occDens","text":"","code":"espace_occDens(sp.name1, sp.name2, pca, logger = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_occDens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Occurrence density grid — espace_occDens","text":"sp.name1 character name species 1 analyzed. sp.name2 character name species 2 analyzed. pca pca output pca component ( list format) logger stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_occDens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Occurrence density grid — espace_occDens","text":"Returns list 2 lists (one species). list   ecospat niche object contains 10 species specific slots   information outputed ecospat::grid.clim.dyn. z.uncor density   occurrence species z.cor occupancy environment   species. input parameters individual slots.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_occDens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Occurrence density grid — espace_occDens","text":"function implements density estimation region   environmental space (gridded 100*100 pixels). occurrence   density estimated using kernel density approach. density   environmental conditions background calculated way.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_occDens.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Occurrence density grid — espace_occDens","text":"Jamie Kass <jamie.m.kass@gmail.com > Olivier Broennimann <olivier.broennimann@unil.ch>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_occDens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Occurrence density grid — espace_occDens","text":"","code":"if (FALSE) { sp.name1 <- \"Bassaricyon_alleni\" sp.name2 <- \"Bassaricyon_neblina\" envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE))  occs.z1 <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                     package = \"wallace\")) occs.z2 <- read.csv(system.file(\"extdata/Bassaricyon_neblina.csv\",                     package = \"wallace\"))  bgPts.z1 <- read.csv(system.file(\"extdata/Bassaricyon_alleni_bgPoints.csv\",                      package = \"wallace\")) bgPts.z2 <- read.csv(system.file(\"extdata/Bassaricyon_neblina_bgPoints.csv\",                      package = \"wallace\"))  occsExt.z1 <- raster::extract(envs, occs.z1[, c(\"longitude\", \"latitude\")]) occsExt.z2 <- raster::extract(envs, occs.z2[, c(\"longitude\", \"latitude\")]) bgExt.z1 <- raster::extract(envs, bgPts.z1[, c(\"longitude\", \"latitude\")]) bgExt.z2 <- raster::extract(envs, bgPts.z2[, c(\"longitude\", \"latitude\")]) pcaZ <- espace_pca(sp.name1, sp.name2,                    occsExt.z1, occsExt.z2,                    bgExt.z1, bgExt.z2) occDens <- espace_occDens(sp.name1, sp.name2, pcaZ) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"espace_pca Principal component analysis — espace_pca","title":"espace_pca Principal component analysis — espace_pca","text":"Principal component analysis reduce dimensionality   environmental space","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"espace_pca Principal component analysis — espace_pca","text":"","code":"espace_pca(   sp.name1,   sp.name2 = NULL,   occs.z1,   occs.z2 = NULL,   bgPts.z1,   bgPts.z2 = NULL,   logger = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"espace_pca Principal component analysis — espace_pca","text":"sp.name1 character. Name species 1 analyzed. sp.name2 character. Name species 2 analyzed. Default NULL. occs.z1 table occurrences environmental values sp1. occs.z2 table occurrences environmental values sp2. Default NULL. bgPts.z1 table background points environmental values sp1. bgPts.z2 table background points environmental values sp2. Default NULL. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"espace_pca Principal component analysis — espace_pca","text":"list 14 elements classes dudi pca dudi.pca","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_pca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"espace_pca Principal component analysis — espace_pca","text":"function called component espace calibrate PCA   2 species environmental space. using within Wallace,   GUI parameters obtained model object, particular, table   occurrences environmental values table background points   environmental values. User must careful tables must contain   environmental variables point coordinates outputted model   objects. PCA calibrated whole set background points.   provided species name(s) used logger messages   querying selecting occurrences.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_pca.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"espace_pca Principal component analysis — espace_pca","text":"Jamie Kass <jamie.m.kass@gmail.com> Olivier Broennimann <olivier.broennimann@unil.ch>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/espace_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"espace_pca Principal component analysis — espace_pca","text":"","code":"if (FALSE) { sp.name1 <- \"Bassaricyon_alleni\" sp.name2 <- \"Bassaricyon_neblina\" envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE))  occs.z1 <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                     package = \"wallace\")) occs.z2 <- read.csv(system.file(\"extdata/Bassaricyon_neblina.csv\",                     package = \"wallace\"))  bgPts.z1 <- read.csv(system.file(\"extdata/Bassaricyon_alleni_bgPoints.csv\",                      package = \"wallace\")) bgPts.z2 <- read.csv(system.file(\"extdata/Bassaricyon_neblina_bgPoints.csv\",                      package = \"wallace\"))  occsExt.z1 <- raster::extract(envs, occs.z1[, c(\"longitude\", \"latitude\")]) occsExt.z2 <- raster::extract(envs, occs.z2[, c(\"longitude\", \"latitude\")]) bgExt.z1 <- raster::extract(envs, bgPts.z1[, c(\"longitude\", \"latitude\")]) bgExt.z2 <- raster::extract(envs, bgPts.z2[, c(\"longitude\", \"latitude\")]) pcaZ <- espace_pca(sp.name1, sp.name2,                    occsExt.z1, occsExt.z2,                    bgExt.z1, bgExt.z2) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/fmtSpN.html","id":null,"dir":"Reference","previous_headings":"","what":"fmtSpN — fmtSpN","title":"fmtSpN — fmtSpN","text":"internal use. Format species name underscore","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/fmtSpN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fmtSpN — fmtSpN","text":"","code":"fmtSpN(spN)"},{"path":"http://wallaceecomod.github.io/wallace/reference/fmtSpN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fmtSpN — fmtSpN","text":"spN Species name","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/getRasterVals.html","id":null,"dir":"Reference","previous_headings":"","what":"getRasterVals — getRasterVals","title":"getRasterVals — getRasterVals","text":"Retrieve value range prediction raster plotting","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/getRasterVals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getRasterVals — getRasterVals","text":"","code":"getRasterVals(r, type = \"raw\")"},{"path":"http://wallaceecomod.github.io/wallace/reference/getRasterVals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getRasterVals — getRasterVals","text":"r raster type Maxent prediction type. can \"raw\", \"logistic\" \"cloglog\"","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/hlSpp.html","id":null,"dir":"Reference","previous_headings":"","what":"hlSpp — hlSpp","title":"hlSpp — hlSpp","text":"internal use. Green bold species name Windows Log","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/hlSpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hlSpp — hlSpp","text":"","code":"hlSpp(spN)"},{"path":"http://wallaceecomod.github.io/wallace/reference/hlSpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hlSpp — hlSpp","text":"spN Species name","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_bioclim.html","id":null,"dir":"Reference","previous_headings":"","what":"model_bioclim Generate Bioclim model — model_bioclim","title":"model_bioclim Generate Bioclim model — model_bioclim","text":"function generates BIOCLIM model using   ENMeval 2.0","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_bioclim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"model_bioclim Generate Bioclim model — model_bioclim","text":"","code":"model_bioclim(occs, bg, user.grp, bgMsk, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/model_bioclim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"model_bioclim Generate Bioclim model — model_bioclim","text":"occs data frame cleaned processed occurrences obtained components occs: Obtain occurrence data , poccs: Process occurrence data. bg coordinates background points used modeling. user.grp list two vectors containing group assignments occurrences (occs.grp) background points (bg.grp). bgMsk RasterStack RasterBrick environmental layers cropped masked match provided background extent. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN character. Species name used logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_bioclim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"model_bioclim Generate Bioclim model — model_bioclim","text":"Function returns ENMevaluate object evaluated models   selection appropriate fields.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_bioclim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"model_bioclim Generate Bioclim model — model_bioclim","text":"function generates model ENMeval using user provided partition   occurrences previous components GUI.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/model_bioclim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"model_bioclim Generate Bioclim model — model_bioclim","text":"Jamie M. Kass <jkass@gradcenter.cuny.edu> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_bioclim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"model_bioclim Generate Bioclim model — model_bioclim","text":"","code":"if (FALSE) { envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE)) occs <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                  package = \"wallace\")) bg <- read.csv(system.file(\"extdata/Bassaricyon_alleni_bgPoints.csv\",                package = \"wallace\")) partblock <- part_partitionOccs(occs, bg, method = 'block') m <- model_bioclim(occs, bg, partblock, envs) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/model_maxent.html","id":null,"dir":"Reference","previous_headings":"","what":"model_maxent Generate maxent.jar or maxnet model — model_maxent","title":"model_maxent Generate maxent.jar or maxnet model — model_maxent","text":"functions generates maxent.jar maxnet models using   ENMeval 2.0 user provided tuning parameters.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_maxent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"model_maxent Generate maxent.jar or maxnet model — model_maxent","text":"","code":"model_maxent(   occs,   bg,   user.grp,   bgMsk,   rms,   rmsStep,   fcs,   clampSel,   algMaxent,   catEnvs = NULL,   parallel = FALSE,   numCores = NULL,   logger = NULL,   spN = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/model_maxent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"model_maxent Generate maxent.jar or maxnet model — model_maxent","text":"occs data frame cleaned processed occurrences obtained components occs: Obtain occurrence data , poccs: Process occurrence data. bg coordinates background points used modeling. user.grp list two vectors containing group assignments occurrences (occs.grp) background points (bg.grp). bgMsk RasterStack RasterBrick environmental layers cropped masked match provided background extent. rms vector range regularization multipliers used ENMeval run. rmsStep step used defining regularization multipliers used provided range. fcs feature classes tested ENMeval run. clampSel Boolean use clamping model. algMaxent character. algorithm used modeling. selection \"maxnet\" \"maxent.jar\". catEnvs categorical predictor variables included must provide names. parallel logical. Whether use parallel generation models. Default FALSE numCores numeric. using parallel many cores use. Default NULL. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN character. Species name used logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_maxent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"model_maxent Generate maxent.jar or maxnet model — model_maxent","text":"Function returns ENMevaluate object evaluated models   selection appropriate fields.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_maxent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"model_maxent Generate maxent.jar or maxnet model — model_maxent","text":"function generates model ENMeval using user provided partition   occurrences previous components GUI. User can activate   clamping input tuning arguments used model building.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/model_maxent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"model_maxent Generate maxent.jar or maxnet model — model_maxent","text":"Jamie M. Kass <jkass@gradcenter.cuny.edu> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/model_maxent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"model_maxent Generate maxent.jar or maxnet model — model_maxent","text":"","code":"if (FALSE) { envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE)) occs <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                  package = \"wallace\")) bg <- read.csv(system.file(\"extdata/Bassaricyon_alleni_bgPoints.csv\",                package = \"wallace\")) partblock <- part_partitionOccs(occs, bg, method = 'block') rms <- c(1:2) rmsStep <- 1 fcs <- c('L', 'LQ') m <- model_maxent(occs = occs, bg = bg, user.grp = partblock,                   bgMsk = envs, rms = rms, rmsStep, fcs,                   clampSel = TRUE, algMaxent = \"maxnet\",                   parallel = FALSE) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/mxNonzeroCoefs.html","id":null,"dir":"Reference","previous_headings":"","what":"mxNonzeroCoefs — mxNonzeroCoefs","title":"mxNonzeroCoefs — mxNonzeroCoefs","text":"internal use. Pulls non-zero, non-redundant (removes hinge/product/threshold) predictor names","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/mxNonzeroCoefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mxNonzeroCoefs — mxNonzeroCoefs","text":"","code":"mxNonzeroCoefs(mx, alg)"},{"path":"http://wallaceecomod.github.io/wallace/reference/mxNonzeroCoefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mxNonzeroCoefs — mxNonzeroCoefs","text":"mx Model object alg Maxent version used. can \"maxent.jar\" \"maxnet\"","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_queryDb.html","id":null,"dir":"Reference","previous_headings":"","what":"occs_queryDb Query online database for species occurrence records. — occs_queryDb","title":"occs_queryDb Query online database for species occurrence records. — occs_queryDb","text":"Queries given database occurrence data provided species","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_queryDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"occs_queryDb Query online database for species occurrence records. — occs_queryDb","text":"","code":"occs_queryDb(   spNames,   occDb,   occNum = NULL,   doCitations = FALSE,   gbifUser = NULL,   gbifEmail = NULL,   gbifPW = NULL,   RmUncertain = FALSE,   logger = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_queryDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"occs_queryDb Query online database for species occurrence records. — occs_queryDb","text":"spNames character. Species Latin name, format \"Genus species\". occDb character. Biodiversity database query; current choices \"gbif\", \"vertnet\", \"BIEN\" occNum numeric. Maximum number occurrence records return doCitations logical. Set TRUE use `occCite` get complete list original data sources citable format gbifUser specify using `occCite` GBIF get complete list original data sources citable format. , well `gbifEmail` `gbifPW` constraints imposed GBIF obtain complete set metadata associated occurrence records stored used `wallace` purposes. gbifEmail specify using `occCite` GBIF get complete list original data sources citable format. gbifPW specify using `occCite` GBIF get complete list original data sources citable format. RmUncertain specify occurrences without uncertainty information removed (default FALSE) logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_queryDb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"occs_queryDb Query online database for species occurrence records. — occs_queryDb","text":"list lists one list per species occurrence records.   individual species list appropriate fields analysis","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_queryDb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"occs_queryDb Query online database for species occurrence records. — occs_queryDb","text":"function called module occs_queryDb query database   species occurrence records, subset records coordinates,   remove records duplicate coordinates, select columns fields   appropriate studies biogeography.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_queryDb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"occs_queryDb Query online database for species occurrence records. — occs_queryDb","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com> Hannah Owens Andrea Paz <paz.andreita@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_queryDb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"occs_queryDb Query online database for species occurrence records. — occs_queryDb","text":"","code":"if (FALSE) { occs_queryDb(spName = \"Bassaricyon alleni\", occDb = \"gbif\", occNum = 10) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_userOccs.html","id":null,"dir":"Reference","previous_headings":"","what":"occs_userOccs Loads user provided occurrence records — occs_userOccs","title":"occs_userOccs Loads user provided occurrence records — occs_userOccs","text":"Load user database species occurrence records. Returns list lists,   one per species provided database species list set   appropriate fields","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_userOccs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"occs_userOccs Loads user provided occurrence records — occs_userOccs","text":"","code":"occs_userOccs(txtPath, txtName, txtSep = \",\", txtDec = \".\", logger = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_userOccs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"occs_userOccs Loads user provided occurrence records — occs_userOccs","text":"txtPath path database including database name extension txtName name database without extension. Database must least three columns named 'scientific_name', 'longitude', 'latitude' txtSep field separator used database (read.delim) txtDec decimal separator used coordinates database logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_userOccs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"occs_userOccs Loads user provided occurrence records — occs_userOccs","text":"List lists. One list per species occurrence records.   individual species list appropriate fields analysis","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_userOccs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"occs_userOccs Loads user provided occurrence records — occs_userOccs","text":"function called module occs_queryDb load user provided database species occurrence records, subset records coordinates, remove records duplicate coordinates, select columns fields appropriate studies biogeography.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_userOccs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"occs_userOccs Loads user provided occurrence records — occs_userOccs","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/occs_userOccs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"occs_userOccs Loads user provided occurrence records — occs_userOccs","text":"","code":"txtPath <- system.file(\"extdata/Bassaricyon_alleni.csv\", package = \"wallace\") txtName <- 'Bassaricyon_alleni' user.occs <- occs_userOccs(txtPath, txtName) #> <font color=\"#003300\"><b><i>Bassaricyon alleni<\/i> | <\/b><\/font>Data uploaded from <i>'Bassaricyon_alleni'<\/i>: Duplicated records removed [0]. Remaining records [35]."},{"path":"http://wallaceecomod.github.io/wallace/reference/part_partitionOccs.html","id":null,"dir":"Reference","previous_headings":"","what":"part_partitionOccs Partition occurrence data — part_partitionOccs","title":"part_partitionOccs Partition occurrence data — part_partitionOccs","text":"function partitions occurrence data background points   according user-selected method.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/part_partitionOccs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"part_partitionOccs Partition occurrence data — part_partitionOccs","text":"","code":"part_partitionOccs(   occs,   bg,   method,   kfolds = NULL,   bgMask = NULL,   aggFact = NULL,   logger = NULL,   spN = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/part_partitionOccs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"part_partitionOccs Partition occurrence data — part_partitionOccs","text":"occs data frame cleaned processed occurrences obtained components occs: Obtain occurrence data , poccs: Process occurrence data. bg coordinates background points used modeling. method character. Partitioning method used, one 5 options:  (1) 'jack' Non-spatial Partition - jackknife   (2) 'rand' Non-spatial Partition - random k-fold   (3) 'block' spatial Partition - block   (4) 'cb1' spatial Partition - checkerboard 1 (K=2)   (5) 'cb2' spatial Partition - checkerboard 2 (K=4) kfolds numeric. Number partitions create selected method random k-fold (must >=2). method keep default NULL. bgMask RasterStack RasterBrick environmental layers cropped masked. aggFact numeric. Aggregation factor used using checkerboard partition (must >= 1). logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN data frame cleaned occurrences obtained component occs: Obtain occurrence data. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/part_partitionOccs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"part_partitionOccs Partition occurrence data — part_partitionOccs","text":"list two vectors containing group assignments occurrences   (occs.grp) background points (bg.grp).","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/part_partitionOccs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"part_partitionOccs Partition occurrence data — part_partitionOccs","text":"function used partition occurrence data component. user-selected method used partition occurrence background points   different groups model testing. list group assignments occurrences background points   returned.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/part_partitionOccs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"part_partitionOccs Partition occurrence data — part_partitionOccs","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com> Andrea Paz <paz.andreita@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/part_partitionOccs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"part_partitionOccs Partition occurrence data — part_partitionOccs","text":"","code":"if (FALSE) { envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE)) occs <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                  package = \"wallace\")) bg <- read.csv(system.file(\"extdata/Bassaricyon_alleni_bgPoints.csv\",                package = \"wallace\")) partblock <- part_partitionOccs(occs, bg, method = 'rand', kfold = 4) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgExtent.html","id":null,"dir":"Reference","previous_headings":"","what":"penvs_bgExtent Generate background extent — penvs_bgExtent","title":"penvs_bgExtent Generate background extent — penvs_bgExtent","text":"function generates background area according user-   provided method.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgExtent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"penvs_bgExtent Generate background extent — penvs_bgExtent","text":"","code":"penvs_bgExtent(occs, bgSel, bgBuf, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgExtent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"penvs_bgExtent Generate background extent — penvs_bgExtent","text":"occs data frame cleaned processed occurrences obtained components occs: Obtain occurrence data , poccs: Process occurrence data. bgSel character. Method background building. Must one three options: 'bounding box' , 'point buffers' ' minimum convex polygon'. bgBuf numeric. Buffer distance degrees used building background area. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN data frame cleaned occurrences obtained component occs: Obtain occurrence data. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgExtent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"penvs_bgExtent Generate background extent — penvs_bgExtent","text":"SpatialPolygons object contains occurrences occs","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgExtent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"penvs_bgExtent Generate background extent — penvs_bgExtent","text":"function used select study region component. ,   user can select three methods ('bounding box', 'point buffers'   ' minimum convex polygon') determine background extent based   observed occurrences. function returns SpatialPolygonsDataFrame   object desired extent.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgExtent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"penvs_bgExtent Generate background extent — penvs_bgExtent","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com> Bethany . Johnson <bjohnso005@citymail.cuny.edu>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgExtent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"penvs_bgExtent Generate background extent — penvs_bgExtent","text":"","code":"occs <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                  package = \"wallace\"))[, 2:3] occs$occID <- 1:nrow(occs) bgExt <- penvs_bgExtent(occs, bgSel = 'bounding box', bgBuf = 0.5) #> Study extent: bounding box. Buffered by 0.5 degrees."},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgMask.html","id":null,"dir":"Reference","previous_headings":"","what":"penvs_bgMask Mask environmental data — penvs_bgMask","title":"penvs_bgMask Mask environmental data — penvs_bgMask","text":"functions crops masks environmental data   provided background area.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgMask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"penvs_bgMask Mask environmental data — penvs_bgMask","text":"","code":"penvs_bgMask(occs, envs, bgExt, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgMask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"penvs_bgMask Mask environmental data — penvs_bgMask","text":"occs data frame cleaned processed occurrences obtained components occs: Obtain occurrence data , poccs: Process occurrence data. envs RasterStack RasterBrick environmental layers processed. determines output type. bgExt SpatialPolygonsDataFrame background area used processing. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN species name used logger messages","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgMask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"penvs_bgMask Mask environmental data — penvs_bgMask","text":"RasterStack RasterBrick environmental layers cropped   masked match provided background extent.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgMask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"penvs_bgMask Mask environmental data — penvs_bgMask","text":"function used select study region component. ,    environmental layers used modeling cropped masked    provided background area. background area determined    function penvs_bgExtent component. function returns    provided environmental layers cropped masked provided    format (either rasterBrick rasterStack).","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgMask.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"penvs_bgMask Mask environmental data — penvs_bgMask","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgMask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"penvs_bgMask Mask environmental data — penvs_bgMask","text":"","code":"if (FALSE) { occs <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                  package = \"wallace\"))[, 2:3] occs$occID <- 1:nrow(occs) envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE)) bgExt <- penvs_bgExtent(occs, bgSel = 'bounding box', bgBuf = 0.5) bgMask <- penvs_bgMask(occs, envs, bgExt) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgSample.html","id":null,"dir":"Reference","previous_headings":"","what":"penvs_bgSample Sample background points — penvs_bgSample","title":"penvs_bgSample Sample background points — penvs_bgSample","text":"function samples background points area determined   rasterBrick RasterStack environmental layers previously cropped   masked user determined extent.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgSample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"penvs_bgSample Sample background points — penvs_bgSample","text":"","code":"penvs_bgSample(occs, bgMask, bgPtsNum, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgSample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"penvs_bgSample Sample background points — penvs_bgSample","text":"occs data frame cleaned processed occurrences obtained components occs: Obtain occurrence data , poccs: Process occurrence data. bgMask RasterStack RasterBrick environmental layers cropped masked. bgPtsNum numeric. Number points sampled area, sampled long <= non NA cells reference layer. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN data frame cleaned occurrences obtained component occs: Obtain occurrence data. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"penvs_bgSample Sample background points — penvs_bgSample","text":"dataframe containing point coordinates (longitude latitude). points within area provided RasterBrick RasterStack (bgMask). Maximum number points equal non NA cells layer reference brick stack.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgSample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"penvs_bgSample Sample background points — penvs_bgSample","text":"function used select study region component. , user   provided amount points randomly sampled RasterBrick   RasterStack environmental variables cropped masked given   background extent. maximum number points sampled number   non NA cells layer reference RasterBrick RasterStack   requested number points larger number cells   reference RasterBrick RasterStack proportion   requested returned.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgSample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"penvs_bgSample Sample background points — penvs_bgSample","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_bgSample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"penvs_bgSample Sample background points — penvs_bgSample","text":"","code":"if (FALSE) { occs <-  occs_queryDb(spName = \"Panthera onca\", occDb = \"gbif\",                       occNum = 100) occs <- as.data.frame(occs[[1]]$cleaned) envs <- envs_worldclim(bcRes = 10,                        bcSel = c(\"bio03\", \"bio04\", \"bio13\", \"bio14\"),                        doBrick = TRUE) bgExt <- penvs_bgExtent(occs, bgSel = 'bounding box', bgBuf = 0.5) bgMask <- penvs_bgMask(occs, envs, bgExt) bgsample <- penvs_bgSample(occs, bgMask, bgPtsNum = 1000) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_drawBgExtent.html","id":null,"dir":"Reference","previous_headings":"","what":"penvs_drawBgExtent: Draw background extent — penvs_drawBgExtent","title":"penvs_drawBgExtent: Draw background extent — penvs_drawBgExtent","text":"function generates background area according user   drawn polygon provided buffer.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_drawBgExtent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"penvs_drawBgExtent: Draw background extent — penvs_drawBgExtent","text":"","code":"penvs_drawBgExtent(   polyExtXY,   polyExtID,   drawBgBuf,   occs,   logger = NULL,   spN = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_drawBgExtent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"penvs_drawBgExtent: Draw background extent — penvs_drawBgExtent","text":"polyExtXY coordinates polygon endpoints obtained user drawn polygon GUI. polyExtID numeric. ID used generation polygon. drawBgBuf buffer used generating SpatialPolygonsDataFrame, maybe 0 >0. number must specified. occs data frame cleaned processed occurrences obtained components occs: Obtain occurrence data , poccs: Process occurrence data. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN data frame cleaned occurrences obtained component occs: Obtain occurrence data. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_drawBgExtent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"penvs_drawBgExtent: Draw background extent — penvs_drawBgExtent","text":"functions returns SpatialPolygons object based user specified coordinates (drawn map). SpatialPolygons object may larger specified drawBgBuf > 0. SpatialPolygons object include occurrences.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_drawBgExtent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"penvs_drawBgExtent: Draw background extent — penvs_drawBgExtent","text":"function used select study region component. , GUI,   user draws polygon used background extent may   include buffer given polygon. buffered poylgon must include   occurrences (occs) function return error. function   returns SpatialPolygonsDataFrame object desired extent (+ buffer).","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_drawBgExtent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"penvs_drawBgExtent: Draw background extent — penvs_drawBgExtent","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com> Bethany . Johnson <bjohnso005@citymail.cuny.edu>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_drawBgExtent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"penvs_drawBgExtent: Draw background extent — penvs_drawBgExtent","text":"","code":"occs <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                  package = \"wallace\"))[, 2:3] occs$occID <- 1:nrow(occs) longitude <- c(-27.78641, -74.09170, -84.01930, -129.74867,                -142.19085, -45.55045, -28.56050) latitude <- c(-40.40539, -37.02010, 2.28455, 40.75350,               56.35954, 54.55045, -7.11861) expertDrawPoly <- matrix(c(longitude, latitude), byrow = FALSE,                          ncol = 2) drawBgBf <- penvs_drawBgExtent(polyExtXY = expertDrawPoly, polyExtID = 1,                                drawBgBuf = 0.5, occs) #> Draw polygon with buffer of 0.5 degrees."},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_userBgExtent.html","id":null,"dir":"Reference","previous_headings":"","what":"penvs_userBgExtent: user provided background extent — penvs_userBgExtent","title":"penvs_userBgExtent: user provided background extent — penvs_userBgExtent","text":"function generates background area according user   provided polygon buffer.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_userBgExtent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"penvs_userBgExtent: user provided background extent — penvs_userBgExtent","text":"","code":"penvs_userBgExtent(   bgShp_path,   bgShp_name,   userBgBuf,   occs,   logger = NULL,   spN = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_userBgExtent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"penvs_userBgExtent: user provided background extent — penvs_userBgExtent","text":"bgShp_path path user provided shapefile csv vertex coordinates. bgShp_name name user provided shapefile csv vertex coordinates. userBgBuf buffer used creating background extent must >= 0. occs data frame cleaned processed occurrences obtained components occs: Obtain occurrence data , poccs: Process occurrence data. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN Species name.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_userBgExtent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"penvs_userBgExtent: user provided background extent — penvs_userBgExtent","text":"function returns SpatialPolygons object user   provided shape (+ buffer userBgBuf >0). polygon least   large enough contain occurrences.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_userBgExtent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"penvs_userBgExtent: user provided background extent — penvs_userBgExtent","text":"function used select study region component. , user   provides either shapefile csv vertex coordinates   desired shape background extent, user may include buffer   given polygon. buffered polygon must include occurrences   (occs) function return error. function returns   SpatialPolygons object desired extent (+ buffer).","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_userBgExtent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"penvs_userBgExtent: user provided background extent — penvs_userBgExtent","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com> Andrea Paz <paz.andreita@gmail.com> Bethany . Johnson <bjohnso005@citymail.cuny.edu>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/penvs_userBgExtent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"penvs_userBgExtent: user provided background extent — penvs_userBgExtent","text":"","code":"occs <- read.csv(system.file(\"extdata/Bassaricyon_neblina.csv\",                  package = \"wallace\"))[, 2:3] occs$occID <- 1:nrow(occs) pathShp <- list.files(system.file(\"extdata/shp\", package = \"wallace\"),                       full.names = TRUE) nameShp <- list.files(system.file(\"extdata/shp\", package = \"wallace\"),                       full.names = FALSE) userBgbf <- penvs_userBgExtent(bgShp_path = pathShp, bgShp_name = nameShp,                                userBgBuf = 0.2, occs = occs) #> Reading layer `Bassaricyon_neblina' from data source  #>   `/home/runner/work/_temp/Library/wallace/extdata/shp/Bassaricyon_neblina.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 1 feature and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -79.47486 ymin: -1.15418 xmax: -74.50839 ymax: 6.83333 #> CRS:           NA #> Study extent user-defined polygon buffered by 0.2 degrees."},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_removeByID.html","id":null,"dir":"Reference","previous_headings":"","what":"poccs_removeByID Remove occurrence by ID — poccs_removeByID","title":"poccs_removeByID Remove occurrence by ID — poccs_removeByID","text":"function removes user selected occurrences ID.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_removeByID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"poccs_removeByID Remove occurrence by ID — poccs_removeByID","text":"","code":"poccs_removeByID(occs, removeID, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_removeByID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"poccs_removeByID Remove occurrence by ID — poccs_removeByID","text":"occs data frame cleaned occurrences obtained component occs: Obtain occurrence data removeID ID occurrence removed occurrences dataframe. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL spN data frame cleaned occurrences obtained component occs: Obtain occurrence data. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_removeByID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"poccs_removeByID Remove occurrence by ID — poccs_removeByID","text":"new occurence dataframe without user selected occurrence   mantaining columns original dataframe analyses.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_removeByID.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"poccs_removeByID Remove occurrence by ID — poccs_removeByID","text":"function called remove occurrences ID module. allows   removal single occurrence flagged user map. function   return data frame occurrences relevant columns   analyses without occurrence selected user.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_removeByID.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"poccs_removeByID Remove occurrence by ID — poccs_removeByID","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_removeByID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"poccs_removeByID Remove occurrence by ID — poccs_removeByID","text":"","code":"occs <- read.csv(system.file(\"extdata/Bassaricyon_neblina.csv\",                  package = \"wallace\"))[, 2:3] occs$occID <- 1:nrow(occs) out.ID <- poccs_removeByID(occs, 11) #> Removed occurrence with occID = 11. Updated data has n = 17 records."},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_selectOccs.html","id":null,"dir":"Reference","previous_headings":"","what":"poccs_selectOccs Remove occurrences outside of polygon — poccs_selectOccs","title":"poccs_selectOccs Remove occurrences outside of polygon — poccs_selectOccs","text":"function removes occurrences outside user created   polygon.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_selectOccs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"poccs_selectOccs Remove occurrences outside of polygon — poccs_selectOccs","text":"","code":"poccs_selectOccs(occs, polySelXY, polySelID = 1, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_selectOccs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"poccs_selectOccs Remove occurrences outside of polygon — poccs_selectOccs","text":"occs data frame cleaned occurrences obtained component occs: Obtain occurrence data. polySelXY matrix longitude latitude describing expert drawn polygon. polySelID numeric. Polygon ID used SpatialPolygons creation, defaults 1. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN data frame cleaned occurrences obtained component occs: Obtain occurrence data. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_selectOccs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"poccs_selectOccs Remove occurrences outside of polygon — poccs_selectOccs","text":"new occurence dataframe including occurences inside provided polygon mantaining columns original dataframe analyses.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_selectOccs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"poccs_selectOccs Remove occurrences outside of polygon — poccs_selectOccs","text":"function called select occurrences map module.   allows removal occurrences outside user drawn polygon   map. function return data frame occurrences   relevant columns analyses without occurrences outside   polygon.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_selectOccs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"poccs_selectOccs Remove occurrences outside of polygon — poccs_selectOccs","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_selectOccs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"poccs_selectOccs Remove occurrences outside of polygon — poccs_selectOccs","text":"","code":"occs <- read.csv(system.file(\"extdata/Bassaricyon_neblina.csv\",                              package = \"wallace\"))[, 2:3] occs$occID <- 1:nrow(occs) longitude <- c(-71.58400, -78.81300, -79.34034, -69.83331,                -66.47149, -66.71319, -71.11931) latitude <- c(13.18379, 7.52315, 0.93105, -1.70167,               0.98391, 6.09208, 12.74980) expertAddedPoly <- matrix(c(longitude, latitude), byrow = FALSE, ncol = 2) out.occs <- poccs_selectOccs(occs, polySelXY = expertAddedPoly,                              polySelID = 1) #> Removing occurrence(s) with occID = c(1, 5, 11, 12, 13, 14, 15). Updated data has n = 11 records."},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_thinOccs.html","id":null,"dir":"Reference","previous_headings":"","what":"poocs_thinOccs Thin occurrences — poccs_thinOccs","title":"poocs_thinOccs Thin occurrences — poccs_thinOccs","text":"function thins observed occurrences user provided   distance.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_thinOccs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"poocs_thinOccs Thin occurrences — poccs_thinOccs","text":"","code":"poccs_thinOccs(occs, thinDist, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_thinOccs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"poocs_thinOccs Thin occurrences — poccs_thinOccs","text":"occs data frame cleaned occurrences obtained component occs: Obtain occurrence data thinDist distance kilometers used thinning. Number must positive. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN data frame cleaned occurrences obtained component occs: Obtain occurrence data. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_thinOccs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"poocs_thinOccs Thin occurrences — poccs_thinOccs","text":"Output data frame thinned occurences (occurences   distance >thinDist) columns occs","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_thinOccs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"poocs_thinOccs Thin occurrences — poccs_thinOccs","text":"function called component poccs: process occurrence data   thin occurrence data user specified distance. Providing output   preserved columns appropriate analyses maximized   number occurrences separated least provided distance.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_thinOccs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"poocs_thinOccs Thin occurrences — poccs_thinOccs","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/poccs_thinOccs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"poocs_thinOccs Thin occurrences — poccs_thinOccs","text":"","code":"occs <- read.csv(system.file(\"extdata/Bassaricyon_neblina.csv\",                              package = \"wallace\")) occs$occID <- 1:nrow(occs) out.thin <- poccs_thinOccs(occs = occs, thinDist = 30) #> Spatially thinning for species... #> Total records thinned (30 km) to 14 localities"},{"path":"http://wallaceecomod.github.io/wallace/reference/polyZoom.html","id":null,"dir":"Reference","previous_headings":"","what":"polyZoom — polyZoom","title":"polyZoom — polyZoom","text":"internal use. Zooms appropriately polygon","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/polyZoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"polyZoom — polyZoom","text":"","code":"polyZoom(xmin, ymin, xmax, ymax, fraction)"},{"path":"http://wallaceecomod.github.io/wallace/reference/polyZoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"polyZoom — polyZoom","text":"xmin Minimum longitude ymin Minimum latitude xmax Maximum longitude ymax Maximum latitude fraction Expand zoom fraction","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/popUpContent.html","id":null,"dir":"Reference","previous_headings":"","what":"popUpContent — popUpContent","title":"popUpContent — popUpContent","text":"internal use. Make new column leaflet marker popup content","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/popUpContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"popUpContent — popUpContent","text":"","code":"popUpContent(occs)"},{"path":"http://wallaceecomod.github.io/wallace/reference/popUpContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"popUpContent — popUpContent","text":"occs occurrence table","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/predictMaxnet.html","id":null,"dir":"Reference","previous_headings":"","what":"predictMaxnet — predictMaxnet","title":"predictMaxnet — predictMaxnet","text":"Create raster prediction maxnet model","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/predictMaxnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"predictMaxnet — predictMaxnet","text":"","code":"predictMaxnet(mod, envs, clamp, type)"},{"path":"http://wallaceecomod.github.io/wallace/reference/predictMaxnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"predictMaxnet — predictMaxnet","text":"mod Model object envs Environmental rasters clamp Use clamping. Boolean type Maxent prediction type. can \"raw\", \"logistic\" \"cloglog\"","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/printVecAsis.html","id":null,"dir":"Reference","previous_headings":"","what":"printVecAsis — printVecAsis","title":"printVecAsis — printVecAsis","text":"internal use. Print vector character string","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/printVecAsis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"printVecAsis — printVecAsis","text":"","code":"printVecAsis(x, asChar = FALSE)"},{"path":"http://wallaceecomod.github.io/wallace/reference/printVecAsis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"printVecAsis — printVecAsis","text":"x vector asChar exclude c notation beginning string","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/register_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a Wallace module — register_module","title":"Register a Wallace module — register_module","text":"running Wallace application run_wallace(), can register modules used Wallace.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/register_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a Wallace module — register_module","text":"","code":"register_module(config_file)"},{"path":"http://wallaceecomod.github.io/wallace/reference/register_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a Wallace module — register_module","text":"config_file path YAML file contains information one modules.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/remEnvsValsNA.html","id":null,"dir":"Reference","previous_headings":"","what":"remEnvsValsNA — remEnvsValsNA","title":"remEnvsValsNA — remEnvsValsNA","text":"internal use. Remove occs NA values","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/remEnvsValsNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remEnvsValsNA — remEnvsValsNA","text":"","code":"remEnvsValsNA(occs, occsEnvsVals, spN, logger)"},{"path":"http://wallaceecomod.github.io/wallace/reference/remEnvsValsNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remEnvsValsNA — remEnvsValsNA","text":"occs occurrence table occsEnvsVals Occurrence table environmental values spN Species name logger Wallace logger","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/reverseLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"reverseLabel — reverseLabel","title":"reverseLabel — reverseLabel","text":"internal use. Reverse label leaflet legends","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/reverseLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reverseLabel — reverseLabel","text":"","code":"reverseLabel(..., reverse_order = FALSE)"},{"path":"http://wallaceecomod.github.io/wallace/reference/reverseLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reverseLabel — reverseLabel","text":"... labelFormat parameters reverse_order Reverse order legends","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/run_wallace.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Wallace Application — run_wallace","title":"Run Wallace Application — run_wallace","text":"function runs Wallace application user's default web browser.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/run_wallace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Wallace Application — run_wallace","text":"","code":"run_wallace(launch.browser = TRUE, port = getOption(\"shiny.port\"))"},{"path":"http://wallaceecomod.github.io/wallace/reference/run_wallace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Wallace Application — run_wallace","text":"launch.browser Whether launch new browser window. port port shiny server listen . Defaults random available port.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/run_wallace.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run Wallace Application — run_wallace","text":"Please see official website (https://wallaceecomod.github.io/) details. questions application, please participate Google Group, email team directly: wallaceEcoMod@gmail.com.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/run_wallace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Wallace Application — run_wallace","text":"Jamie Kass <jkass@gradcenter.cuny.edu> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/run_wallace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Wallace Application — run_wallace","text":"","code":"if(interactive()) { run_wallace() }"},{"path":"http://wallaceecomod.github.io/wallace/reference/smartProgress.html","id":null,"dir":"Reference","previous_headings":"","what":"smartProgress — smartProgress","title":"smartProgress — smartProgress","text":"internal use. Either prints message console makes progress bar shiny app entry first param \"logs\" turns shiny functionality","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/smartProgress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"smartProgress — smartProgress","text":"","code":"smartProgress(logs, message, expr)"},{"path":"http://wallaceecomod.github.io/wallace/reference/smartProgress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"smartProgress — smartProgress","text":"logs Wallace logger message single-element character vector; message displayed user. expr work done.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/spName.html","id":null,"dir":"Reference","previous_headings":"","what":"spName — spName","title":"spName — spName","text":"internal use. Retrieves species name use internally   non-shiny functions","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/spName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spName — spName","text":"","code":"spName(spN)"},{"path":"http://wallaceecomod.github.io/wallace/reference/spName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spName — spName","text":"spN Species name","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/spurious.html","id":null,"dir":"Reference","previous_headings":"","what":"Spurious package call to avoid note of functions outside R folder — spurious","title":"Spurious package call to avoid note of functions outside R folder — spurious","text":"internal use.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/spurious.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spurious package call to avoid note of functions outside R folder — spurious","text":"","code":"spurious(x)"},{"path":"http://wallaceecomod.github.io/wallace/reference/spurious.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spurious package call to avoid note of functions outside R folder — spurious","text":"x x","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/vis_bioclimPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"vis_bioclimPlot Visualize bivariate plot of BIOCLIM model — vis_bioclimPlot","title":"vis_bioclimPlot Visualize bivariate plot of BIOCLIM model — vis_bioclimPlot","text":"functions creates bivariate plot two environmental   variables used modeling x y axes occurrences observations.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/vis_bioclimPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vis_bioclimPlot Visualize bivariate plot of BIOCLIM model — vis_bioclimPlot","text":"","code":"vis_bioclimPlot(x, a = 1, b = 2, p = 0.9)"},{"path":"http://wallaceecomod.github.io/wallace/reference/vis_bioclimPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vis_bioclimPlot Visualize bivariate plot of BIOCLIM model — vis_bioclimPlot","text":"x bioclim model including values environmental layer occurrence point numeric Environmental layer used x axis. Default layer 1. b numeric. Environmental layer used x axis. Default layer 2. p numeric. (0-1) percentile distribution used plotting envelope showing points outside envelope. Default 0.9","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/vis_bioclimPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vis_bioclimPlot Visualize bivariate plot of BIOCLIM model — vis_bioclimPlot","text":"bivariate plot environmental values occurrences. Includes   blue rectangle representing bioclimatic envelope given p. Occurrences   inside envelope layers (included plotted)   shown green circles outside envelope one ore   variables plotted orange triangles.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/vis_bioclimPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"vis_bioclimPlot Visualize bivariate plot of BIOCLIM model — vis_bioclimPlot","text":"bivariate plot x y axes representing two   environmental layers used modeling (user selected although 1 2   default). Occurrences used modeling shown differential   visualization outside selected percentile distribution   (variable). Plot also includes rectangle representing   bivariate bioclimatic envelope according provided percentile.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/vis_bioclimPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vis_bioclimPlot Visualize bivariate plot of BIOCLIM model — vis_bioclimPlot","text":"Jamie Kass <jkass@gradcenter.cuny.edu> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/vis_bioclimPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vis_bioclimPlot Visualize bivariate plot of BIOCLIM model — vis_bioclimPlot","text":"","code":"if (FALSE) { envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE)) occs <- read.csv(system.file(\"extdata/Bassaricyon_alleni.csv\",                  package = \"wallace\")) bg <- read.csv(system.file(\"extdata/Bassaricyon_alleni_bgPoints.csv\",                package = \"wallace\")) partblock <- part_partitionOccs(occs, bg, method = 'block') m <- model_bioclim(occs, bg, partblock, envs) bioclimPlot <- vis_bioclimPlot(x = m@models$bioclim,                                a = 1, b = 2, p = 1) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/wallace-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Wallace: A modular platform for reproducible ecological modeling — wallace-package","title":"Wallace: A modular platform for reproducible ecological modeling — wallace-package","text":"Wallace shiny app guides users complete   species niche/distributional modeling analysis, acquisition   species occurrence environmental data visualizing model predictions   interactive map (rleaflet), thus bundling complex workflows   single, streamlined GUI interface. New functionality, form    modules, can added Wallace via contributions user    community. addition, executable session code (R Markdown format) can    downloaded share others use supplementary information    scientific papers reports. application run via    function run_wallace.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/wallace-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wallace: A modular platform for reproducible ecological modeling — wallace-package","text":"Please see official website (https://wallaceecomod.github.io/)   details. questions application, please participate   Google Group,   email team directly: wallaceEcoMod@gmail.com.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/writeLog.html","id":null,"dir":"Reference","previous_headings":"","what":"writeLog — writeLog","title":"writeLog — writeLog","text":"internal use. Add text logger","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/writeLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"writeLog — writeLog","text":"","code":"writeLog(logger, ..., type = \"default\")"},{"path":"http://wallaceecomod.github.io/wallace/reference/writeLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"writeLog — writeLog","text":"logger logger write text . Can NULL function ... Messages write logger type One \"default\", \"error\", \"warning\"","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/write_csv_robust.html","id":null,"dir":"Reference","previous_headings":"","what":"write_csv_robust — write_csv_robust","title":"write_csv_robust — write_csv_robust","text":"internal use. Write Robust CSV","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/write_csv_robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_csv_robust — write_csv_robust","text":"","code":"write_csv_robust(x, ...)"},{"path":"http://wallaceecomod.github.io/wallace/reference/write_csv_robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_csv_robust — write_csv_robust","text":"x Table ... labelFormat parameters","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_area.html","id":null,"dir":"Reference","previous_headings":"","what":"xfer_area Transfer model to a new area — xfer_area","title":"xfer_area Transfer model to a new area — xfer_area","text":"Function transfers model generated previous components   new user drawn area.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xfer_area Transfer model to a new area — xfer_area","text":"","code":"xfer_area(   evalOut,   curModel,   envs,   xfExt,   alg,   outputType = NULL,   clamp = NULL,   logger = NULL,   spN = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xfer_area Transfer model to a new area — xfer_area","text":"evalOut ENMevaluate output previous module using available algorithms. curModel algorithm maxent, model selected user best optimal, terms feature class regularization multiplier (e.g 'L_1'). Else must 1. envs environmental layers used transferring model. must match layers used generating model model component. xfExt extent area transfer model. defined user map GUI provided SpatialPolygons object. alg character. modeling algorithm used model component. Can one : 'BIOCLIM', 'maxent.jar' 'maxnet'. outputType output type used algorithm maxnet maxent.jar. clamp logical. Whether transfer clamped unclamped model. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN Character used obtain species name logger messages","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xfer_area Transfer model to a new area — xfer_area","text":"list two elements: xferExt xferArea. first   RasterBrick RasterStack environmental variables cropped   area transfer. second element raster transferred model   specified output type.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xfer_area Transfer model to a new area — xfer_area","text":"functions transfers model created previous   components new area. area transfer user provided map   GUI. model transferred new area long   environmental variables available area. function returns   list including cropped environmental variables used transferring   transferred model.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xfer_area Transfer model to a new area — xfer_area","text":"Jamie Kass <jkass@gradcenter.cuny.edu> Andrea Paz <paz.andreita@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xfer_area Transfer model to a new area — xfer_area","text":"","code":"if (FALSE) { envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE)) # extent of transfer longitude <- c(-71.58400, -78.81300, -79.34034, -69.83331,                -66.47149, -66.71319, -71.11931) latitude <- c(13.18379, 7.52315, 0.93105,               -1.70167, 0.98391, 6.09208, 12.74980) selCoords <- matrix(c(longitude, latitude), byrow = FALSE, ncol = 2) polyExt <-   sp::SpatialPolygons(list(sp::Polygons(list(sp::Polygon(selCoords)),                       ID = 1))) # load model m <- readRDS(system.file(\"extdata/model.RDS\",                          package = \"wallace\")) modXfer <- xfer_area(evalOut = m, curModel = 1, envs,                      outputType = 'cloglog', alg = 'maxent.jar',                      clamp = TRUE, xfExt = polyExt) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"xfer_draw Draw extent of transfer — xfer_draw","title":"xfer_draw Draw extent of transfer — xfer_draw","text":"function creates polygon object coordinates user   drawn poylgon GUI.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xfer_draw Draw extent of transfer — xfer_draw","text":"","code":"xfer_draw(polyXfXY, polyXfID, drawXfBuf, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xfer_draw Draw extent of transfer — xfer_draw","text":"polyXfXY coordinates polygon endpoints obtained user drawn polygon polyXfID numeric .ID used generation polygon drawXfBuf buffer used generating SpatialPolygonsDataFrame, must >=0 . number must specified. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL spN character. Used obtain species name logger messages","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xfer_draw Draw extent of transfer — xfer_draw","text":"functions returns SpatialPolygons object based user   specified coordinates (drawn map). SpatialPolygonsDataFrame may   larger specified drawBgBuf > 0.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_draw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xfer_draw Draw extent of transfer — xfer_draw","text":"function used transfer model component. GUI, user   draws polygon used extent transfer may include   buffer given polygon. function returns   SpatialPolygonsDataFrame object desired extent (+ buffer).","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_draw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xfer_draw Draw extent of transfer — xfer_draw","text":"Gonzalo Pinilla <gepinillab@gmail.com> Bethany . Johnson <bjohnso005@citymail.cuny.edu>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xfer_draw Draw extent of transfer — xfer_draw","text":"","code":"longitude <- c(-27.78641, -74.09170, -84.01930, -129.74867,                -142.19085, -45.55045, -28.56050) latitude <- c(-40.40539, -37.02010, 2.28455, 40.75350,               56.35954, 54.55045, -7.11861) userDrawPoly <- matrix(c(longitude, latitude), byrow = FALSE,                        ncol = 2) drawXfBuf <- 0.5 polyXfID <- 1 polygonTest <- xfer_draw(polyXfXY = userDrawPoly, polyXfID,                          drawXfBuf) #> Draw polygon with buffer of 0.5 degrees."},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_mess.html","id":null,"dir":"Reference","previous_headings":"","what":"xfer_mess generate MESS map for transferred raster — xfer_mess","title":"xfer_mess generate MESS map for transferred raster — xfer_mess","text":"function generates MESS map new variables transferring based variables points used modeling previous components.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_mess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xfer_mess generate MESS map for transferred raster — xfer_mess","text":"","code":"xfer_mess(occs, bg, bgMsk, xferExtRas, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_mess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xfer_mess generate MESS map for transferred raster — xfer_mess","text":"occs data frame occurrences used modeling values environmental variables point. bg data frame points used background modeling values environmental variables point. bgMsk rasterBrick rasterStack environmental variables used modeling. must cropped masked extent used model training. xferExtRas rasterStack rasterBrick environmental variables used transferring. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN character. Used obtain species name logger messages","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_mess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xfer_mess generate MESS map for transferred raster — xfer_mess","text":"functions allows creation MESS map new provided variables transferring. variables either user uploaded selected WorldClim database. MESS map based occurrence background points used generating model environmental values points.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_mess.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xfer_mess generate MESS map for transferred raster — xfer_mess","text":"Jamie Kass <jkass@gradcenter.cuny.edu> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_mess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xfer_mess generate MESS map for transferred raster — xfer_mess","text":"","code":"if (FALSE) { envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                            package = \"wallace\"),                       pattern = \".tif$\", full.names = FALSE)) # load model m <- readRDS(system.file(\"extdata/model.RDS\",                          package = \"wallace\")) occsEnvs <- m@occs bgEnvs <- m@bg envsFut <- list.files(path = system.file('extdata/wc/future',                                          package = \"wallace\"),                       full.names = TRUE) envsFut <- raster::stack(envsFut) ## run function xferMess <- xfer_mess(occs = occsEnvs, bg = bgEnvs, bgMsk = envs,                       xferExtRas = envsFut) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_time.html","id":null,"dir":"Reference","previous_headings":"","what":"xfer_time Transfer model to a new time — xfer_time","title":"xfer_time Transfer model to a new time — xfer_time","text":"Function transfers model generated previous components   new time area using provided layers.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xfer_time Transfer model to a new time — xfer_time","text":"","code":"xfer_time(   evalOut,   curModel,   envs,   xfExt,   alg,   outputType = NULL,   clamp = NULL,   logger = NULL,   spN = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xfer_time Transfer model to a new time — xfer_time","text":"evalOut ENMevaluate output previous module using available algorithms. curModel algorithm maxent, model selected user best optimal, terms feature class regularization multiplier (e.g 'L_1'). Otherwise must 1. envs environmental layers different time used transferring model. must match layers used generating model model component. xfExt extent area transfer model. defined user map GUI provided SpatialPolygons object. alg modeling algorithm used model component. Can one : 'bioclim', 'maxent.jar' 'maxnet'. outputType output type used algorithm maxnet maxent.jar. clamp logical. Whether transfer clamped unclamped model. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN character. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xfer_time Transfer model to a new time — xfer_time","text":"list two elements: xferExt xferTime. first   RasterBrick RasterStack environmental variables cropped   area transfer. second element raster transferred model   specified output type.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xfer_time Transfer model to a new time — xfer_time","text":"functions allows transferring model created previous   components new time area. area transfer user provided   map GUI transfer time user selected. model   transferred new area time long environmental   variables available area. function returns list   including cropped environmental variables used transferring   transferred model.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xfer_time Transfer model to a new time — xfer_time","text":"Jamie Kass <jkass@gradcenter.cuny.edu> Andrea Paz <paz.andreita@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xfer_time Transfer model to a new time — xfer_time","text":"","code":"if (FALSE) { envs <- envs_userEnvs(rasPath = list.files(system.file(\"extdata/wc\",                                                        package = \"wallace\"),                                            pattern = \".tif$\",                                            full.names = TRUE),                       rasName = list.files(system.file(\"extdata/wc\",                                                        package = \"wallace\"),                                            pattern = \".tif$\",                                            full.names = FALSE)) ## extent to transfer # set coordinates longitude <- c(-71.58400, -78.81300, -79.34034, -69.83331, -66.47149, -66.71319,                -71.11931) latitude <- c(13.18379, 7.52315, 0.93105, -1.70167, 0.98391, 6.09208, 12.74980) # generate matrix selCoords <- matrix(c(longitude, latitude), byrow = FALSE, ncol = 2) polyExt <- sp::SpatialPolygons(list(sp::Polygons(list(sp::Polygon(selCoords)),                                                  ID = 1))) # load model m <- readRDS(system.file(\"extdata/model.RDS\",                          package = \"wallace\")) occsEnvs <- m@occs bgEnvs <- m@bg envsFut <- list.files(path = system.file('extdata/wc/future',                                          package = \"wallace\"),                       full.names = TRUE) envsFut <- raster::stack(envsFut) modXfer <- xfer_time(evalOut = m, curModel = 1,                      envs = envsFut, alg = 'maxent.jar',                      xfExt = polyExt, clamp = FALSE, outputType = 'cloglog') }"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userEnvs.html","id":null,"dir":"Reference","previous_headings":"","what":"xfer_userEnvs Transfer model to user specified area and time — xfer_userEnvs","title":"xfer_userEnvs Transfer model to user specified area and time — xfer_userEnvs","text":"function transfers model generated previous components   user uploaded environmental variables.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userEnvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xfer_userEnvs Transfer model to user specified area and time — xfer_userEnvs","text":"","code":"xfer_userEnvs(   evalOut,   curModel,   envs,   xfExt,   alg,   outputType = NULL,   clamp = NULL,   logger = NULL,   spN = NULL )"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userEnvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xfer_userEnvs Transfer model to user specified area and time — xfer_userEnvs","text":"evalOut ENMevaluate output previous module using available algorithms. curModel algorithm maxent, model selected user best optimal, terms feature class regularization multiplier (e.g 'L_1'). Otherwise must 1. envs user provided environmental layers (raster format) used transferring. xfExt extent area transfer model. must provided user shapefile SpatialPolygons object. alg modeling algorithm used model component. Can one : 'BIOCLIM', 'maxent.jar' 'maxnet'. outputType output type used algorithm maxnet maxent.jar. clamp logical. Whether transfer clamped unclamped model. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN character. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userEnvs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xfer_userEnvs Transfer model to user specified area and time — xfer_userEnvs","text":"functions allows transferring model created previous   components new time area provided user. transferring   time area user-provided. model transferred new   time area long environmental variables provided   available area match variables used model building.   function returns list including cropped environmental variables   used transferring transferred model.","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userEnvs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xfer_userEnvs Transfer model to user specified area and time — xfer_userEnvs","text":"Jamie Kass <jkass@gradcenter.cuny.edu> Andrea Paz <paz.andreita@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userEnvs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xfer_userEnvs Transfer model to user specified area and time — xfer_userEnvs","text":"","code":"if (FALSE) { ## extent to transfer # set coordinates longitude <- c(-71.58400, -78.81300, -79.34034, -69.83331, -66.47149, -66.71319,                -71.11931) latitude <- c(13.18379, 7.52315, 0.93105, -1.70167, 0.98391, 6.09208, 12.74980) # generate matrix selCoords <- matrix(c(longitude, latitude), byrow = FALSE, ncol = 2) polyExt <- sp::SpatialPolygons(list(sp::Polygons(list(sp::Polygon(selCoords)),                                                  ID = 1))) # load model m <- readRDS(system.file(\"extdata/model.RDS\",                          package = \"wallace\")) envsFut <- list.files(path = system.file('extdata/wc/future',                                          package = \"wallace\"),                       full.names = TRUE) envsFut <- raster::stack(envsFut) ### run function modXfer <- xfer_userEnvs(evalOut = m, curModel = 1, envs = envsFut,                          outputType = \"cloglog\", alg = \"maxent.jar\",                          clamp = FALSE, xfExt = polyExt) }"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userExtent.html","id":null,"dir":"Reference","previous_headings":"","what":"xfer_userExtent: user provided extent of transfer — xfer_userExtent","title":"xfer_userExtent: user provided extent of transfer — xfer_userExtent","text":"function generates area transfer according user   provided polygon buffer.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userExtent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xfer_userExtent: user provided extent of transfer — xfer_userExtent","text":"","code":"xfer_userExtent(bgShp_path, bgShp_name, userBgBuf, logger = NULL, spN = NULL)"},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userExtent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xfer_userExtent: user provided extent of transfer — xfer_userExtent","text":"bgShp_path path user provided shapefile csv vertex coordinates. bgShp_name name user provided shapefile csv vertex coordinates. userBgBuf numeric. Buffer used creating background extent must >= 0. logger Stores notification messages displayed Log Window Wallace GUI. Insert logger reactive list running shiny, otherwise leave default NULL. spN data frame cleaned occurrences obtained component occs: Obtain occurrence data. Used obtain species name logger messages.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userExtent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xfer_userExtent: user provided extent of transfer — xfer_userExtent","text":"function returns SpatialPolygons object user   provided shape (+ buffer userBgBuf >0).","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userExtent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xfer_userExtent: user provided extent of transfer — xfer_userExtent","text":"function used transfer component. , user provides   either shapefile csv vertex coordinates desired shape   extent transfer, user may include buffer given   polygon. function returns SpatialPolygons object desired   extent (+ buffer).","code":""},{"path":[]},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userExtent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xfer_userExtent: user provided extent of transfer — xfer_userExtent","text":"Jamie Kass <jamie.m.kass@gmail.com> Gonzalo E. Pinilla-Buitrago <gepinillab@gmail.com> Andrea Paz <paz.andreita@gmail.com> Bethany . Johnson <bjohnso005@citymail.cuny.edu>","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/xfer_userExtent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xfer_userExtent: user provided extent of transfer — xfer_userExtent","text":"","code":"pathShp <- list.files(system.file(\"extdata/shp\", package = \"wallace\"),                       full.names = TRUE) nameShp <- list.files(system.file(\"extdata/shp\", package = \"wallace\"),                       full.names = FALSE) xferUser <- xfer_userExtent(bgShp_path = pathShp, bgShp_name = nameShp,                             userBgBuf = 1) #> Reading layer `Bassaricyon_neblina' from data source  #>   `/home/runner/work/_temp/Library/wallace/extdata/shp/Bassaricyon_neblina.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 1 feature and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -79.47486 ymin: -1.15418 xmax: -74.50839 ymax: 6.83333 #> CRS:           NA #> Transferring extent user-defined polygon buffered by 1 degrees."},{"path":"http://wallaceecomod.github.io/wallace/reference/zoom2Occs.html","id":null,"dir":"Reference","previous_headings":"","what":"zoom2Occs — zoom2Occs","title":"zoom2Occs — zoom2Occs","text":"internal use. Zoom occ pts.","code":""},{"path":"http://wallaceecomod.github.io/wallace/reference/zoom2Occs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"zoom2Occs — zoom2Occs","text":"","code":"zoom2Occs(map, occs)"},{"path":"http://wallaceecomod.github.io/wallace/reference/zoom2Occs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"zoom2Occs — zoom2Occs","text":"map leaflet map occs occurrences table","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-211","dir":"Changelog","previous_headings":"","what":"wallace 2.1.1","title":"wallace 2.1.1","text":"CRAN release: 2023-12-07 Fixed bug occ density grid & niche overlap Updated licensing Updated developers & pkg maintainer","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-210","dir":"Changelog","previous_headings":"","what":"wallace 2.1.0","title":"wallace 2.1.0","text":"CRAN release: 2023-09-25 Removed rgeos (package expiring) Updated team bios Added clarification occs_queryDb guidance text Added error msgs xfer_time","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-206","dir":"Changelog","previous_headings":"","what":"wallace 2.0.6","title":"wallace 2.0.6","text":"CRAN release: 2023-09-14 Removed paleobioDB (package CRAN) Removed rgdal (package expiring) Changed Maintainer e-mail","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-205","dir":"Changelog","previous_headings":"","what":"wallace 2.0.5","title":"wallace 2.0.5","text":"CRAN release: 2023-04-15 added try() test_envs_worldclim.R fixed broken links guidance texts refs fixed typo thinOccs documentation","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-204","dir":"Changelog","previous_headings":"","what":"wallace 2.0.4","title":"wallace 2.0.4","text":"CRAN release: 2023-03-14 Added Spanish translation vignette Updates v2 vignette skip_on_cran() added several tests","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-203","dir":"Changelog","previous_headings":"","what":"wallace 2.0.3","title":"wallace 2.0.3","text":"CRAN release: 2023-01-16 Fix conditional test occs_queryDB","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-202","dir":"Changelog","previous_headings":"","what":"wallace 2.0.2","title":"wallace 2.0.2","text":"CRAN release: 2023-01-05 Workaround test fails download data vertnet ecoClimate","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-201","dir":"Changelog","previous_headings":"","what":"wallace 2.0.1","title":"wallace 2.0.1","text":"CRAN release: 2022-12-15 Add install.packages CRAN vignette Remove BISON option download occurrences due longer available spooc package (.e. rbison archived CRAN, BISON data available via GBIF).","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-200","dir":"Changelog","previous_headings":"","what":"wallace 2.0.0","title":"wallace 2.0.0","text":"CRAN release: 2022-12-08 new version? Stop start work whenever want: version allows save session partway workflow restart . Try via “Save session” tab think something matches way run analyses (intermediate--advanced users). Greater reproducibility regarding occurrence records: step towards greater documentation reproducibility biodiversity informatics, version Wallace provides option querying GBIF receiving DOI data provided. already registered GBIF user, check “Include Data Source Citations” option Query Database (Present) module OccData component. Cross-time transfers: later interested transferring models estimates future (past) climate, try updated Transfer component. version now data WorldClim EcoClimate (also reconstructed data past). Make original model climatic data source like use transferring across time periods. Make models multiple species Wallace session: advancement supports two important functionalities: comparisons species environmental space (see ). interested either , try making models one species now. get data , OccData component either run query multiple times scientific names separated commas. , later components use pull-menu top center interface indicate species want work . Environmental space comparisons: may directly linked conservation many advances, version now several modules EnvSpace component, allows users examine characteristics environmental space across species, like niche overlap. matches research interests (academic purposes, study invasive species, example), try . Redesigned R-markdown functionalities: way version Wallace redesigned, now makes documentation files new way (Reproduce component). addition making sure can download documentation ways readable humans (like pdf), helpful development team users download executable RMD code confirm runs successfully R (intermediate--advanced users). Summary new features: General - Several species session General - New download sub-tab component General - Save reload session Occs - PaleobioDB - Fossil occs (New module!) Occs - BIEN (New option!) Occs - GBIF OccCite (New option!) Occs - Delimitator Separator (New option!) Envs - EcoClimate (New module, including paleo reconstructions!) General - Select variables pickerInput General - Batch option (repeat decisions species) Process Env - Draw polygon (New module!) Environmental Space - NEW COMPONENT various new modules Model - maxnet maxent.jar - Categorical variables (New option!) Model - maxnet maxent.jar - Parallel (New option!) Vis - New bioclim plot Vis - New maxent plots Vis - mapPred - New threshold option Xfer - userXfer - User specified rasters Xfer - user background extent (New Option!) Xfer - user-specified transferring extent (New option!) Xfer - New Time - Ecolimate (New Option!) Rep - RMD - New Structure Rep - Metadata - based rangeModelMetadata package (New module!) Rep - RefPackages (New module!)","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-113","dir":"Changelog","previous_headings":"","what":"wallace 1.1.3","title":"wallace 1.1.3","text":"CRAN release: 2022-03-09 shinytheme() replaced bslib::bs_theme(). Fixed issue newer version RStudio.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-112","dir":"Changelog","previous_headings":"","what":"wallace 1.1.2","title":"wallace 1.1.2","text":"CRAN release: 2022-02-13 Adding ecospat Depends fixing CBI calculation.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-111","dir":"Changelog","previous_headings":"","what":"wallace 1.1.1","title":"wallace 1.1.1","text":"Migration GitHub Actions Continuous Integration testing","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-110","dir":"Changelog","previous_headings":"","what":"wallace 1.1.0","title":"wallace 1.1.0","text":"CRAN release: 2021-05-24 Working new version ENMeval (v2)","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-1063","dir":"Changelog","previous_headings":"","what":"wallace 1.0.6.3","title":"wallace 1.0.6.3","text":"CRAN release: 2020-12-06 rgbif updated dependency Clamping option back maxent.jar (Thanks new version Maxent 3.4.4)","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-1062","dir":"Changelog","previous_headings":"","what":"wallace 1.0.6.2","title":"wallace 1.0.6.2","text":"CRAN release: 2020-02-13 Double distance point buffer fixed.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-1061","dir":"Changelog","previous_headings":"","what":"wallace 1.0.6.1","title":"wallace 1.0.6.1","text":"Adding couple convenience functions running wallace headless @isaacovercast","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-106","dir":"Changelog","previous_headings":"","what":"wallace 1.0.6","title":"wallace 1.0.6","text":"CRAN release: 2018-10-07 Wallace longer needs rJava run! Oh happy days! Wallace now compatible ENMeval 0.3.0, now rJava dependency runs Maxent using maxnet default (CRAN package maxnet; https://onlinelibrary.wiley.com/doi/abs/10.1111/ecog.03049). means Wallace longer loads rJava automatically using ENMeval partition functions running Maxent. can still select Java implementation Maxent choosing “maxent.jar” Maxent module, whereupon rJava load. Wallace now works computers error non-ASCII characters used. problem discovered workshop Vietnam Chinese computers. Users can now select bioclimatic variables using 30 arc second data. Added instructions troubleshoot installing rJava. Occurrence points NA environmental values now disappear map. also fixed small bugs dealing shiny code Markdown file. MESS color gradient Small changes text guidance","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-105","dir":"Changelog","previous_headings":"","what":"wallace 1.0.5","title":"wallace 1.0.5","text":"CRAN release: 2018-06-22 brand new vignette finally added website. Please find : https://wallaceecomod.github.io/vignettes/wallace_vignette.html Methods Ecology Evolution paper published April 2018 – DOI remains . lambdas file Maxent model can now viewed subtab Results. Projections Project component longer overlap map predictions Visualize component. Added options Draw toolbar allow users erase drawn polygons. leaflet.extras enables programmatic removal drawn polygons , Reset button reset data, affect polygons. Pagination added back model results table. Enabled download model results table .csv. Removed pop-field occurrence table downloads. Fixed problem downloading rasters .png. Fixed bug made app crash Project selected pressing Reset remove polygon Project component. now check see rgdal installed downloads rasters allowed. turns issue raster package, rgdal dependency function doesn’t seem functional. slider regularization multipliers now restricted minimum 0.5, able set increments 0.5. RM value 0 caused errors Hinge models, ’s clear whether RM 0 recommendable FCs, removed. highly improbable case users select points Select Occs module, app now crash, instead informs user select subset instead.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-104","dir":"Changelog","previous_headings":"","what":"wallace 1.0.4","title":"wallace 1.0.4","text":"CRAN release: 2018-02-12 Fixed mapped display user-drawn polygon Module: Select Occurrences Map remains displayed Finish button pressed. Changed system.file() calls files wallace package relative paths, ensures cases user downloads Github doesn’t package installed CRAN, package developed one installed CRAN, correct files can found. make work, folders inst/Rmd, inst/css, inst/js moved inst/shiny. exception run_wallace() function, retains system.file() inst/shiny folder. Fixed intro tab text formatting added bulleted list. Minor changes simplify code. Added link DOI Early View manuscript MEE.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-103","dir":"Changelog","previous_headings":"","what":"wallace 1.0.3","title":"wallace 1.0.3","text":"CRAN release: 2018-01-31 Added error checks coordinate reference system (CRS) input user raster NA, updated guidance text User-specified Environmental Data module guide configuring CRS rasters R. Fixed bug prevented downloads 30 arcsec Worldclim rasters. Updated intro screen tab module names.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-102","dir":"Changelog","previous_headings":"","what":"wallace 1.0.2","title":"wallace 1.0.2","text":"CRAN release: 2017-12-15 now option download response curves png. Local path dismo’s maxent.jar now printed inside log window avoid failure word wrap browsers. Component 2 module “Select Occs” now informs user occIDs points removed, ones retained.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-101","dir":"Changelog","previous_headings":"","what":"wallace 1.0.1","title":"wallace 1.0.1","text":"CRAN release: 2017-11-29 Removed button used development.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-100","dir":"Changelog","previous_headings":"","what":"wallace 1.0.0","title":"wallace 1.0.0","text":"Biggest change: reprogrammed software integrate shiny modules. Now module separate script /inst/shiny/modules contains UI server logic. make authorship integration new modules much easier. Second biggest change: integrated leaflet draw toolbar functionality leaflet.extras package, replaces previous code draw internally record polygons comps 2 7. code much cleaner now easier make edits . popular demand, added user-input environmental variables module. work progress, please report bugs Issues Github. Added buffer points feature background extent module (comp4). Added cloglog output option Maxent (updated Maxent version 3.4x) map prediction module (comp7). Partition occurrences modules (comp5) now plot map legend showing partition group per color. Maxent models now show evaluation statistics partition groups (ENMevaluate() option bin.output=TRUE) – partition group numbers correspond comp5 legend. Unit tests now available modules two flavors: 1) control tests run automatically via Travis Github push, test UI buttons, forms, etc. functioning properly, 2) function tests run Wallace user pushing buttons entering fields, tests take 5 minutes complete, automatically run now. Unit tests signature part module contribution. Updated guidance text.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-064","dir":"Changelog","previous_headings":"","what":"wallace 0.6.4","title":"wallace 0.6.4","text":"CRAN release: 2017-06-01 Added explicit package references writeRaster() calls. work now without loading raster package first. Fixed reference required field names component 1 User Occurrences module guidance text. Now reads “names” instead “species” first field. Added checks appropriate fields VertNet BISON, downloads include fields. avoid erroring due missing fields now.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-063","dir":"Changelog","previous_headings":"","what":"wallace 0.6.3","title":"wallace 0.6.3","text":"CRAN release: 2017-02-03 Added repmis rgdal package dependencies. Turned evaluation chunk loads packages userReport.Rmd. Added error catches component 5 6 rJava load.","code":""},{"path":"http://wallaceecomod.github.io/wallace/news/index.html","id":"wallace-062","dir":"Changelog","previous_headings":"","what":"wallace 0.6.2","title":"wallace 0.6.2","text":"CRAN release: 2017-02-01 Turned evaluation code chunks userReport.Rmd. Now building user session code much, much faster. Made code compatible leaflet version 1.0.1. mysterious problem zooming points clearing markers /plotting points, resulted crashing soon points plotted unless user Github master version leaflet installed. Thus code rearranged cleaned accomodate current leaflet version CRAN. Fixed errors userReport.Rmd relating user .csv path printing couple headings.","code":""}]
